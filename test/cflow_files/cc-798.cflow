    1 	main: int (), <./bison/getopt.c 753>
    2 		signal: Procedure (), <./cc/enquire.c 489>
    3 		setmode: int (), <./cc/enquire.c 596>
    4 		fprintf: <>
    5 		exit: void (), <./cc/libgcc2.c 2409>
    6 		printf: <>
    7 		Vprintf: <>
    8 		check_defines: Procedure (), <./cc/enquire.c 1097>
    9 			is_signed: <>
   10 			checktype: <>
   11 			missing: Procedure (), <./cc/enquire.c 998>
   12 			fmissing: Procedure (), <./cc/enquire.c 1003>
   13 			fchecktype: <>
   14 		maximum_int: int (), <./cc/enquire.c 630>
   15 			setjmp: else if (), <./cc/fold-const.c 1489>
   16 		basic: int (), <./cc/enquire.c 1504>
   17 			Vprintf: <>
   18 			cprop: int (), <./cc/enquire.c 1370>
   19 				Vprintf: <>
   20 				i_define: Procedure (), <./cc/enquire.c 794>
   21 				setjmp: else if (), <./cc/fold-const.c 1489>
   22 				u_define: Procedure (), <./cc/enquire.c 822>
   23 			printf: <>
   24 			type_of: char * (), <./cc/enquire.c 1020>
   25 			showtype: <>
   26 			endian: Procedure (), <./cc/enquire.c 975>
   27 			sprop: <>
   28 			iprop: <>
   29 			lprop: <>
   30 			usprop: <>
   31 			uiprop: <>
   32 			ulprop: <>
   33 			promotions: int (), <./cc/enquire.c 1066>
   34 				Vprintf: <>
   35 				Promoted: <>
   36 				is_signed: <>
   37 				eek_a_bug: Procedure (), <./cc/enquire.c 781>
   38 					printf: <>
   39 				showtype: <>
   40 		fprop: <>
   41 		dprop: <>
   42 		ldprop: <>
   43 		efprop: <>
   44 		edprop: <>
   45 		eldprop: <>
   46 		malloc: <>
   47 		farewell: Procedure (), <./cc/enquire.c 602>
   48 		obstack_init: <>
   49 		fatal: void (), <./bison/main.c 127>
   50 			fprintf: <>
   51 			exit: 5
   52 			error: goto, <./cc/real.c 4801>
   53 				fprintf: <>
   54 				printf: <>
   55 			collect_exit: void (), <./cc/collect2.c 479>
   56 				maybe_unlink: void (), <./cc/collect2.c 1833>
   57 					unlink: int (), <./cc/config/winnt/oldnames.c 38>
   58 					fprintf: <>
   59 				dump_file: void (), <./cc/collect2.c 647>
   60 				exit: 5
   61 			done: void (), <./bison/files.c 371>
   62 				fclose: <>
   63 				tryopen: FILE * (), <./bison/files.c 354>
   64 					fopen: <>
   65 					fprintf: <>
   66 					perror: <>
   67 					done: 61
   68 				rewind: <>
   69 				getc: <>
   70 				putc: <>
   71 				fflush: <>
   72 				delete: <>
   73 				exit: 5
   74 				unlink: 57
   75 		fopen: FILE * (), <./cc/cccp-winnt.c 10346>
   76 		perror: <>
   77 		init_rtl: void (), <./cc/rtl.c 783>
   78 		read_skip_spaces: <>
   79 		ungetc: <>
   80 		read_rtx: <>
   81 		GET_CODE: switch (), <./cc/dwarfout.c 2217>
   82 			XVECLEN: <>
   83 			GET_CODE: 81
   84 			XVECEXP: <>
   85 			ASM_OPERANDS_INPUT_VEC: <>
   86 			ASM_OPERANDS_INPUT_LENGTH: <>
   87 			SET_DEST: <>
   88 				XVECLEN: <>
   89 				GET_CODE: 81
   90 				XVECEXP: <>
   91 				reg_overlap_mentioned_p: if (), <./cc/config/pa/pa.c 1402>
   92 					GET_CODE: 81
   93 					REGNO: <>
   94 						output_asm_insn: void (), <./cc/final.c 2376>
   95 							putc: <>
   96 							ASM_OUTPUT_OPCODE: <>
   97 							output_asm_name: void (), <./cc/final.c 2354>
   98 							fprintf: <>
   99 							atoi: <>
  100 							output_operand_lossage: void (), <./cc/final.c 2326>
  101 							output_asm_label: void (), <./cc/final.c 2539>
  102 								GET_CODE: 81
  103 								ASM_GENERATE_INTERNAL_LABEL: <>
  104 								CODE_LABEL_NUMBER: <>
  105 								XEXP: (, <./cc/integrate.c 2750>
  106 									general_operand: <>
  107 									force_reg: <>
  108 									force_operand: <>
  109 									SUBREG_WORD: <>
  110 									XEXP: 105
  111 									eliminate_regs: rtx (), <./cc/reload1.c 2647>
  112 										GET_CODE: 81
  113 										REGNO: 93
  114 										plus_constant: <>
  115 										eliminate_regs: 111
  116 										copy_rtx: <>
  117 										XEXP: 105
  118 										CONSTANT_P: else if (), <./cc/config/i386/i386.c 2909>
  119 											output_addr_const: void (), <./cc/final.c 2598>
  120 												GET_CODE: 81
  121 												putc: <>
  122 												abort: <>
  123 												assemble_name: <>
  124 												XSTR: <>
  125 												ASM_GENERATE_INTERNAL_LABEL: <>
  126 												CODE_LABEL_NUMBER: <>
  127 												XEXP: 105
  128 												fprintf: <>
  129 												INTVAL: <>
  130 													GET_CODE: 81
  131 													INTVAL: 129
  132 													REG_NOTES: <>
  133 													PREV_INSN: <>
  134 													gen_rtx: <>
  135 													get_condition_for_loop: <>
  136 													XEXP: 105
  137 													reg_set_between_p: <>
  138 												output_addr_const: 119
  139 												GET_MODE: switch (), <./cc/config/m68k/m68k.c 697>
  140 													GET_CODE: 81
  141 													GET_RTX_CLASS: switch (), <./cc/combine.c 3104>
  142 														validate_change: int (), <./cc/recog.c 165>
  143 															rtx_equal_p: if (), <./cc/reload.c 2133>
  144 																GET_CODE: 81
  145 																GET_MODE: 139
  146 																REGNO: 93
  147 																REG_FUNCTION_VALUE_P: <>
  148 																XEXP: 105
  149 																XSTR: <>
  150 																GET_RTX_FORMAT: <>
  151 																GET_RTX_LENGTH: <>
  152 																XWINT: <>
  153 																XINT: <>
  154 																XVECLEN: <>
  155 																rtx_equal_p: 143
  156 																XVECEXP: <>
  157 																strcmp: if (), <./cc/gcc.c 5081>
  158 																	get_super_receiver: tree (), <./cc/objc-act.c 8368>
  159 																		build_component_ref: tree (), <./cc/c-typeck.c 1247>
  160 																			TREE_TYPE: <>
  161 																				error_with_decl: <>
  162 																				TREE_CODE: switch (), <./cc/dwarfout.c 4748>
  163 																					TREE_CODE: 162
  164 																					build_binary_op: tree (), <./cc/c-typeck.c 1917>
  165 																						default_conversion: tree (), <./cc/c-typeck.c 1027>
  166 																							TREE_TYPE: 160
  167 																							TREE_CODE: 162
  168 																							DECL_INITIAL: <>
  169 																								emit_line_note: rtx (), <./cc/emit-rtl.c 2775>
  170 																									emit_note: rtx (), <./cc/emit-rtl.c 2803>
  171 																										strcmp: 157
  172 																										rtx_alloc: rtx (), <./cc/rtl.c 209>
  173 																											GET_RTX_LENGTH: <>
  174 																											PUT_CODE: <>
  175 																										INSN_UID: <>
  176 																										NOTE_SOURCE_FILE: <>
  177 																										NOTE_LINE_NUMBER: <>
  178 																											PREV_INSN: <>
  179 																											NEXT_INSN: <>
  180 																										add_insn: <>
  181 																								DECL_SOURCE_FILE: <>
  182 																								DECL_SOURCE_LINE: <>
  183 																									warning_with_decl: <>
  184 																									tree_cons: <>
  185 																									TREE_TYPE: 160
  186 																								expand_assignment: <>
  187 																								DECL_INITIAL: 168
  188 																								emit_queue: void (), <./cc/expr.c 530>
  189 																								ASM_OUTPUT_ZEROFILL: <>
  190 																								int_size_in_bytes: <>
  191 																								TREE_TYPE: 160
  192 																								floor_log2: <>
  193 																							decl_constant_value: tree (), <./cc/c-typeck.c 998>
  194 																								TREE_PUBLIC: if (), <./cc/cp/decl2.c 1544>
  195 																									DECL_RTL: <>
  196 																									GET_CODE: 81
  197 																									XEXP: 105
  198 																									SYMBOL_REF_USED: <>
  199 																									ASM_OUTPUT_EXTERNAL: <>
  200 																									XSTR: <>
  201 																								TREE_THIS_VOLATILE: <>
  202 																								TREE_READONLY: if (), <./cc/cp/decl2.c 1229>
  203 																								ITERATOR_P: <>
  204 																								DECL_INITIAL: 168
  205 																								TREE_CODE: 162
  206 																								TREE_CONSTANT: if (), <./cc/fold-const.c 3102>
  207 																								DECL_MODE: <>
  208 																							TREE_OPERAND: <>
  209 																							type_for_size: <>
  210 																							MAX: <>
  211 																							TYPE_PRECISION: <>
  212 																								common_type: tree (), <./cc/cp/typeck.c 253>
  213 																									TYPE_ATTRIBUTES: <>
  214 																									attribute_list_contained: int (), <./cc/tree.c 3392>
  215 																										TREE_PURPOSE: if (), <./cc/cp/typeck.c 2790>
  216 																											TYPE_HAS_INIT_REF: if (), <./cc/cp/typeck.c 7153>
  217 																											TYPE_READONLY: <>
  218 																											TREE_TYPE: 160
  219 																											TYPE_HAS_CONST_INIT_REF: <>
  220 																										TREE_VALUE: <>
  221 																										TREE_CHAIN: if (), <./cc/cp/search.c 1454>
  222 																										lookup_attribute: tree (), <./cc/tree.c 3115>
  223 																											TREE_CHAIN: if (), <./cc/cp/search.c 1454>
  224 																											TREE_CODE: 162
  225 																											TREE_PURPOSE: 215
  226 																											abort: <>
  227 																											is_attribute_p: int (), <./cc/tree.c 3070>
  228 																												TREE_CODE: 162
  229 																												strcmp: 157
  230 																												IDENTIFIER_POINTER: <>
  231 																												strlen: <>
  232 																												abort: <>
  233 																												strncmp: if (), <./bison/getopt.c 545>
  234 																										IDENTIFIER_POINTER: <>
  235 																										simple_cst_equal: int (), <./cc/tree.c 3526>
  236 																											TREE_CODE: 162
  237 																											simple_cst_equal: 235
  238 																											TREE_OPERAND: <>
  239 																											TREE_INT_CST_LOW: <>
  240 																											TREE_INT_CST_HIGH: <>
  241 																											REAL_VALUES_EQUAL: <>
  242 																											TREE_REAL_CST: <>
  243 																											TREE_STRING_LENGTH: <>
  244 																											TREE_STRING_POINTER: <>
  245 																											abort: <>
  246 																											simple_cst_list_equal: int (), <./cc/tree.c 3504>
  247 																												simple_cst_equal: 235
  248 																												TREE_VALUE: <>
  249 																												TREE_CHAIN: if (), <./cc/cp/search.c 1454>
  250 																											DECL_NAME: <>
  251 																												decl_as_string: char * (), <./cc/cp/error.c 1365>
  252 																													OB_INIT: <>
  253 																													dump_decl: void (), <./cc/cp/error.c 566>
  254 																														TREE_CODE: 162
  255 																														OB_PUTS: <>
  256 																														TREE_TYPE: 160
  257 																														IS_AGGR_TYPE: else if (), <./cc/cp/typeck.c 6140>
  258 																														TYPE_PTRMEMFUNC_P: if (), <./cc/cp/typeck.c 6357>
  259 																															cp_error: void (), <./cc/cp/errfn.c 154>
  260 																																cp_thing: void (), <./cc/cp/errfn.c 53>
  261 																																	STRDUP: <>
  262 																																	isdigit: if (), <./cc/cplus-dem.c 1861>
  263 																																	abort: <>
  264 																																	cp_file_of: char * (), <./cc/cp/error.c 1379>
  265 																																		TREE_CODE: 162
  266 																																		DECL_SOURCE_FILE: <>
  267 																																		DECL_CONTEXT: <>
  268 																																			TREE_TYPE: 160
  269 																																			pedwarn: <>
  270 																																		TREE_CODE_CLASS: switch (), <./cc/dwarfout.c 3160>
  271 																																		TYPE_NAME: <>
  272 																																			TYPE_NAME: 271
  273 																																			TYPE_STUB_DECL: <>
  274 																																	cp_line_of: int (), <./cc/cp/error.c 1391>
  275 																																		TREE_CODE: 162
  276 																																		DECL_SOURCE_LINE: 182
  277 																																		DECL_CONTEXT: 267
  278 																																		DECL_ARTIFICIAL: <>
  279 																																			cp_warning: void (), <./cc/cp/errfn.c 164>
  280 																																				cp_thing: 260
  281 																																				warning:  (), <cexp.y 1034>
  282 																																					printf: <>
  283 																																			cp_warning_at: void (), <./cc/cp/errfn.c 213>
  284 																																				cp_thing: 260
  285 																																				warning_with_file_and_line: <>
  286 																																		TREE_TYPE: 160
  287 																																		TREE_CODE_CLASS: switch (), <./cc/dwarfout.c 3160>
  288 																																		IS_AGGR_TYPE: else if (), <./cc/cp/typeck.c 6140>
  289 																																		CLASSTYPE_SOURCE_LINE: <>
  290 																																		TYPE_NAME: 271
  291 																																error: 52
  292 																															shadow_tag: void (), <./cc/cp/decl.c 5710>
  293 																																shadow_tag_warned: void (), <./cc/c-decl.c 3438>
  294 																																	TREE_CHAIN: if (), <./cc/cp/search.c 1454>
  295 																																	TREE_VALUE: <>
  296 																																	TREE_CODE: 162
  297 																																	lookup_tag_reverse: tree (), <./cc/c-decl.c 2766>
  298 																																		TREE_CHAIN: if (), <./cc/cp/search.c 1454>
  299 																																		TREE_VALUE: <>
  300 																																		TREE_PURPOSE: 215
  301 																																	pedwarn: <>
  302 																																	lookup_tag: tree (), <./cc/c-decl.c 2715>
  303 																																		TREE_CHAIN: if (), <./cc/cp/search.c 1454>
  304 																																		TREE_PURPOSE: 215
  305 																																		TREE_CODE: 162
  306 																																		TREE_VALUE: <>
  307 																																	make_node: tree (), <./cc/tree.c 908>
  308 																																		TREE_CODE_CLASS: switch (), <./cc/dwarfout.c 3160>
  309 																																		decl_function_context: <>
  310 																																		find_function_data: <>
  311 																																		abort: <>
  312 																																		obstack_alloc: <>
  313 																																		TREE_SET_CODE: <>
  314 																																		TREE_PERMANENT: if (), <./cc/cp/decl.c 10271>
  315 																																		TREE_SIDE_EFFECTS: if (), <./cc/cp/typeck.c 4958>
  316 																																		TREE_TYPE: 160
  317 																																		DECL_ALIGN: <>
  318 																																		DECL_IN_SYSTEM_HEADER: <>
  319 																																		DECL_SOURCE_LINE: 182
  320 																																		DECL_SOURCE_FILE: <>
  321 																																		DECL_UID: <>
  322 																																		TYPE_UID: <>
  323 																																		TYPE_ALIGN: <>
  324 																																		TYPE_MAIN_VARIANT: <>
  325 																																			TYPE_HAS_INIT_REF: if (), <./cc/cp/typeck.c 7153>
  326 																																			build_method_call: <>
  327 																																			constructor_name_full: <>
  328 																																			build_tree_list: <>
  329 																																			build_indirect_ref: tree (), <./cc/c-typeck.c 1331>
  330 																																				default_conversion: 165
  331 																																				TREE_TYPE: 160
  332 																																				TREE_CODE: 162
  333 																																				TREE_OPERAND: <>
  334 																																				build1: tree (), <./cc/tree.c 2711>
  335 																																					TREE_CODE_CLASS: switch (), <./cc/dwarfout.c 3160>
  336 																																					obstack_alloc: <>
  337 																																					TREE_TYPE: 160
  338 																																					TREE_SET_CODE: <>
  339 																																					TREE_PERMANENT: if (), <./cc/cp/decl.c 10271>
  340 																																					TREE_OPERAND: <>
  341 																																					TREE_SIDE_EFFECTS: if (), <./cc/cp/typeck.c 4958>
  342 																																					TREE_RAISES: <>
  343 																																				TYPE_MAIN_VARIANT: 324
  344 																																				TYPE_SIZE: if (), <./cc/dwarfout.c 3636>
  345 																																				require_complete_type: tree (), <./cc/cp/typeck.c 79>
  346 																																					TREE_TYPE: 160
  347 																																					TYPE_SIZE: if (), <./cc/dwarfout.c 3636>
  348 																																					incomplete_type_error: void (), <./cc/cp/typeck2.c 230>
  349 																																						TREE_CODE: 162
  350 																																						error: 52
  351 																																						IDENTIFIER_POINTER: <>
  352 																																						DECL_NAME: 250
  353 																																						TYPE_DOMAIN: <>
  354 																																						TREE_TYPE: 160
  355 																																						abort: <>
  356 																																						TYPE_NAME: 271
  357 																																						my_friendly_abort: void (), <./cc/cp/typeck2.c 338>
  358 																																							ack: void (), <./cc/cp/typeck2.c 290>
  359 																																								fprintf: <>
  360 																																							error: 52
  361 																																							exit: 5
  362 																																							fatal: 49
  363 																																						error_with_aggr_type: void (), <./cc/cp/typeck2.c 81>
  364 																																							TREE_CODE: 162
  365 																																							BINFO_TYPE: <>
  366 																																							TYPE_NAME: 271
  367 																																							DECL_NAME: 250
  368 																																							error: 52
  369 																																							IDENTIFIER_POINTER: <>
  370 																																					TYPE_LANG_SPECIFIC: <>
  371 																																						CLASSTYPE_VSIZE: <>
  372 																																						CLASSTYPE_FRIEND_CLASSES: <>
  373 																																					IS_SIGNATURE_POINTER: <>
  374 																																					IS_SIGNATURE_REFERENCE: <>
  375 																																					SIGNATURE_TYPE: <>
  376 																																					TREE_CODE: 162
  377 																																					TREE_OPERAND: <>
  378 																																					TYPE_OFFSET_BASETYPE: <>
  379 																																					my_friendly_assert: void (), <./cc/cp/typeck2.c 382>
  380 																																						my_friendly_abort: 357
  381 																																					convert_pointer_to: tree (), <./cc/cp/cvt.c 1163>
  382 																																						TREE_CODE: 162
  383 																																						BINFO_TYPE: <>
  384 																																						IS_AGGR_TYPE: else if (), <./cc/cp/typeck.c 6140>
  385 																																						convert_pointer_to_real: tree (), <./cc/cp/cvt.c 1099>
  386 																																							TREE_TYPE: 160
  387 																																							TREE_CODE: 162
  388 																																							BINFO_TYPE: <>
  389 																																							IS_AGGR_TYPE: else if (), <./cc/cp/typeck.c 6140>
  390 																																							build_pointer_type: tree (), <./cc/tree.c 3652>
  391 																																								TYPE_POINTER_TO: <>
  392 																																								push_obstacks: void (), <./cc/tree.c 498>
  393 																																									obstack_alloc: <>
  394 																																								TYPE_OBSTACK: <>
  395 																																								make_node: 307
  396 																																								pop_obstacks: void (), <./cc/tree.c 537>
  397 																																									obstack_free: void (), <./cc/obstack.c 351>
  398 																																										POINTER:  () (), <./cc/obstack.c 402>
  399 																																										CALL_FREEFUN: <>
  400 																																										abort: <>
  401 																																								TREE_TYPE: 160
  402 																																								layout_type: <>
  403 																																							TYPE_MAIN_VARIANT: 324
  404 																																							my_friendly_assert: 379
  405 																																							integer_zerop: else if (), <./cc/cp/decl2.c 1954>
  406 																																								warn_for_assignment: void (), <./cc/c-typeck.c 4238>
  407 																																									maybe_building_objc_message_expr: tree (), <./cc/objc-act.c 5557>
  408 																																									alloca: <>
  409 																																									IDENTIFIER_LENGTH: <>
  410 																																									sprintf: <>
  411 																																									IDENTIFIER_POINTER: <>
  412 																																									pedwarn: <>
  413 																																								get_spelling: char * (), <./cc/c-typeck.c 4643>
  414 																																									spelling_length: int (), <./cc/c-typeck.c 4593>
  415 																																										strlen: <>
  416 																																									xmalloc: char * (), <./cc/bi-opname.c 47>
  417 																																										malloc: <>
  418 																																										fprintf: <>
  419 																																										exit: 5
  420 																																									xrealloc: char * (), <./cc/cplus-dem.c 2992>
  421 																																										realloc: <>
  422 																																										fprintf: <>
  423 																																										exit: 5
  424 																																									alloca: <>
  425 																																									sprintf: <>
  426 																																									print_spelling: <>
  427 																																								convert: tree (), <./cc/cp/cvt.c 1388>
  428 																																									TREE_CODE: 162
  429 																																									TREE_TYPE: 160
  430 																																									TYPE_MAIN_VARIANT: 324
  431 																																									fold: <>
  432 																																									build1: 334
  433 																																									error: 52
  434 																																									convert: 427
  435 																																									TREE_OPERAND: <>
  436 																																									convert_to_integer: tree (), <./cc/convert.c 118>
  437 																																										TREE_TYPE: 160
  438 																																										TREE_CODE: 162
  439 																																										integer_zerop: 405
  440 																																										fold: <>
  441 																																										build1: 334
  442 																																										type_for_size: <>
  443 																																										TYPE_PRECISION: 211
  444 																																										TREE_CODE_CLASS: switch (), <./cc/dwarfout.c 3160>
  445 																																										TREE_OPERAND: <>
  446 																																										convert: 427
  447 																																										GET_MODE_BITSIZE: <>
  448 																																											INTVAL: 129
  449 																																											GET_MODE_MASK: <>
  450 																																											GEN_INT: <>
  451 																																											GET_MODE_BITSIZE: 447
  452 																																											GET_CODE: 81
  453 																																											MEM_VOLATILE_P: <>
  454 																																											mode_dependent_address_p: <>
  455 																																												INTVAL: 129
  456 																																												GET_MODE_BITSIZE: 447
  457 																																												GET_MODE: 139
  458 																																												GET_CODE: 81
  459 																																												SUBREG_WORD: <>
  460 																																												MIN: <>
  461 																																												GET_MODE_SIZE: <>
  462 																																													SUBREG_REG: <>
  463 																																													gen_lowpart_if_possible: <>
  464 																																													record_jump_cond: <>
  465 																																													gen_rtx: <>
  466 																																													INTVAL: 129
  467 																																													REAL_VALUE_FROM_TARGET_SINGLE: <>
  468 																																													CONST_DOUBLE_FROM_REAL_VALUE: <>
  469 																																													GET_CODE: 81
  470 																																													CONST_DOUBLE_LOW: <>
  471 																																													CONST_DOUBLE_HIGH: <>
  472 																																													REAL_VALUE_FROM_TARGET_DOUBLE: <>
  473 																																													GEN_INT: <>
  474 																																													REAL_VALUE_FROM_CONST_DOUBLE: <>
  475 																																												start_sequence: void (), <./cc/emit-rtl.c 2919>
  476 																																												change_address: <>
  477 																																												plus_constant: <>
  478 																																												get_insns: rtx (), <./cc/emit-rtl.c 1696>
  479 																																												end_sequence: void (), <./cc/emit-rtl.c 3014>
  480 																																												emit_insns_before: <>
  481 																																												validate_change: 142
  482 																																												SET_DEST: 87
  483 																																												CONSTANT_ADDRESS_P: if (), <./cc/config/i386/i386.c 2571>
  484 																																												SET_SRC: <>
  485 																																													PUT_CODE: <>
  486 																																													NOTE_LINE_NUMBER: 177
  487 																																													NOTE_SOURCE_FILE: <>
  488 																																													MAX: <>
  489 																																												SUBREG_REG: <>
  490 																																												gen_lowpart: <>
  491 																																												abort: <>
  492 																																												GET_MODE_CLASS: <>
  493 																																													setjmp: else if (), <./cc/fold-const.c 1489>
  494 																																													set_float_handler: void (), <./cc/toplev.c 2059>
  495 																																														bcopy: <>
  496 																																													REAL_VALUE_FROM_CONST_DOUBLE: <>
  497 																																													REAL_VALUE_FIX: <>
  498 																																													REAL_VALUE_UNSIGNED_FIX: <>
  499 																																													abort: <>
  500 																																													GEN_INT: <>
  501 																																													REAL_VALUES_EQUAL: <>
  502 																																													REAL_VALUES_LESS: <>
  503 																																													GET_MODE_BITSIZE: 447
  504 																																													GET_CODE: 81
  505 																																													CONST_DOUBLE_LOW: <>
  506 																																													INTVAL: 129
  507 																																													operand_subword: <>
  508 																																													immed_double_const: rtx (), <./cc/varasm.c 1943>
  509 																																														GET_MODE_CLASS: 492
  510 																																														GET_MODE_BITSIZE: 447
  511 																																														abort: <>
  512 																																														GEN_INT: <>
  513 																																														CONST_DOUBLE_CHAIN: <>
  514 																																														CONST_DOUBLE_LOW: <>
  515 																																														CONST_DOUBLE_HIGH: <>
  516 																																														GET_MODE: 139
  517 																																														push_obstacks_nochange: void (), <./cc/tree.c 520>
  518 																																															obstack_alloc: <>
  519 																																														rtl_in_saveable_obstack: void (), <./cc/tree.c 643>
  520 																																														gen_rtx: <>
  521 																																														pop_obstacks: 396
  522 																																														CONST_DOUBLE_MEM: <>
  523 																																												gen_reg_rtx: rtx (), <./cc/emit-rtl.c 460>
  524 																																													abort: <>
  525 																																													GET_MODE_CLASS: 492
  526 																																													GET_MODE_UNIT_SIZE: <>
  527 																																													mode_for_size: <>
  528 																																													gen_reg_rtx: 523
  529 																																													gen_rtx: <>
  530 																																													oballoc: char * (), <./cc/tree.c 653>
  531 																																														obstack_alloc: <>
  532 																																												convert_move: <>
  533 																																												apply_change_group: int (), <./cc/recog.c 210>
  534 																																													GET_CODE: 81
  535 																																													memory_address_p: <>
  536 																																													GET_MODE: 139
  537 																																													XEXP: 105
  538 																																													recog_memoized: int (), <./cc/recog.c 96>
  539 																																														INSN_CODE: <>
  540 																																														recog: <>
  541 																																														PATTERN: <>
  542 																																													asm_noperands: <>
  543 																																														split_insns: <>
  544 																																														reg_overlap_mentioned_p: 91
  545 																																														GET_MODE: 139
  546 																																														SET_DEST: 87
  547 																																														GET_CODE: 81
  548 																																														REGNO: 93
  549 																																														REG_USERVAR_P: <>
  550 																																														gen_rtx: <>
  551 																																														gen_rtvec: <>
  552 																																														XVECLEN: <>
  553 																																														next_real_insn: rtx (), <./cc/emit-rtl.c 1817>
  554 																																															NEXT_INSN: <>
  555 																																															GET_CODE: 81
  556 																																														use_crosses_set_p: <>
  557 																																														PATTERN: <>
  558 																																														XVECEXP: <>
  559 																																														INSN_CUID: <>
  560 																																														single_set: rtx (), <./cc/rtlanal.c 585>
  561 																																															GET_RTX_CLASS: 141
  562 																																															GET_CODE: 81
  563 																																															PATTERN: <>
  564 																																															XVECLEN: <>
  565 																																															XVECEXP: <>
  566 																																															find_reg_note: <>
  567 																																															SET_DEST: 87
  568 																																															side_effects_p: <>
  569 																																														SUBST: <>
  570 																																														recog_for_combine: <>
  571 																																														find_split_point: rtx * (), <./cc/combine.c 2410>
  572 																																															GET_CODE: 81
  573 																																															SUBREG_REG: <>
  574 																																															find_split_point: 571
  575 																																															XEXP: 105
  576 																																															SUBST: <>
  577 																																															gen_rtx_combine: <>
  578 																																															memory_address_p: <>
  579 																																															GET_MODE: 139
  580 																																															split_insns: <>
  581 																																															gen_rtx: <>
  582 																																															XVECLEN: <>
  583 																																															XVECEXP: <>
  584 																																															PATTERN: <>
  585 																																															SET_DEST: 87
  586 																																															reg_mentioned_p: else if (), <./cc/loop.c 5796>
  587 																																															SET_SRC: 484
  588 																																															replace_rtx: <>
  589 																																															GET_RTX_FORMAT: <>
  590 																																															GET_RTX_CLASS: 141
  591 																																															GET_MODE_BITSIZE: 447
  592 																																															INTVAL: 129
  593 																																															side_effects_p: <>
  594 																																															gen_binary: <>
  595 																																															GEN_INT: <>
  596 																																															GET_MODE_MASK: <>
  597 																																															exact_log2:  () >= 0 (nzb (true_code == EQ && true_val == const0_rtx && () (reg_mentioned_p () (known_cond (), pc_rtx, pc_rtx, 0, 0 (reg_mentioned_p () (known_cond (), pc_rtx, pc_rtx, 0, 0 (XEXP (), swapped false true (XEXP (), swapped true false (x, 1 (x, 2 (cond (comparison_p && reversible_comparison_p () && () (true_code (XEXP (), gen_binary () (XEXP (), false (XEXP (), true (x, 0 (rtx_equal_p () && ! side_effects_p () (GET_MODE_CLASS () == MODE_INT && GET_CODE () == NEG && rtx_equal_p () && comparison_p && rtx_equal_p () && ! side_effects_p () (true_code (ABS, mode, mode, true (NEG, mode, mode, gen_unary () (() && comparison_p && rtx_equal_p () && rtx_equal_p () && ! side_effects_p () (true_code (SMAX, mode, true, false (SMIN, mode, true, false (UMAX, mode, true, false (UMIN, mode, true, false (comparison_p && mode != VOIDmode && ! side_effects_p () (true, SET (false, SET (cond, 0 (cond, 1 (() && rtx_equal_p () (t, 1 (t (() && rtx_equal_p () (t, 0 (t (GET_CODE () == SIGN_EXTEND && () && GET_CODE () == SUBREG && subreg_lowpart_p () && rtx_equal_p () && () (XEXP (), 1 (XEXP () (XEXP () (GET_CODE () == SIGN_EXTEND && () && GET_CODE () == SUBREG && subreg_lowpart_p () && rtx_equal_p () && () (XEXP (), 0 (XEXP () (XEXP () (GET_CODE () == ZERO_EXTEND && () && GET_CODE () == SUBREG && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT && subreg_lowpart_p () && rtx_equal_p () && () (XEXP (), 1 (XEXP () (XEXP () (GET_CODE () == ZERO_EXTEND && () && GET_CODE () == SUBREG && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT && subreg_lowpart_p () && rtx_equal_p () && () (XEXP (), 0 (XEXP () (XEXP () (z (gen_binary (), pc_rtx, pc_rtx, 0, 0 (MULT, m, temp, gen_binary () (temp, pc_rtx, pc_rtx, 0, 0 (op, m, gen_lowpart_for_combine (), temp (extend_op != NIL (extend_op, mode, m, temp (true_code == NE && XEXP () == const0_rtx && false == const0_rtx && GET_CODE () == CONST_INT && () (NULL_RTX, ASHIFT, mode, gen_lowpart_for_combine (), i (x (x (x (src (src (dest (GET_CODE () == PC && GET_CODE () == RETURN (GET_MODE_CLASS () == MODE_INT (src, mode, GET_MODE_MASK (), NULL_RTX, 0 (() && () != 0 && () && GET_RTX_CLASS () == && rtx_equal_p () (*cc_use (dest (GET_CODE () == COMPARE (src, 0 (src, 1 (old_code, & op0, & op1 (new_code, op0, op1 (compare_mode != GET_MODE () (dest (REG, compare_mode, regno (regno < FIRST_PSEUDO_REGISTER || () (regno >= FIRST_PSEUDO_REGISTER (regno_reg_rtx[regno], new_dest (SET_DEST (), new_dest (XEXP (), new_dest (new_code != old_code (*cc_use, gen_rtx_combine () (() && ! other_changed && op1 == const0_rtx && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT && exact_log2 () >= 0 (other_insn (() (*cc_use, old_code (XOR, GET_MODE (), op0, GEN_INT () (other_changed (op1 == const0_rtx && dest == cc0_rtx (SET_SRC (), op0 (GET_CODE () != COMPARE || GET_MODE () != compare_mode (SET_SRC (), gen_rtx_combine () (x (XEXP (), op0 (XEXP (), op1 (src, SET (SET_SRC (), src (GET_CODE () == SUBREG && subreg_lowpart_p () && GET_RTX_CLASS () != && () && () && ! () && () (SET_DEST (), gen_lowpart_for_combine () (SET_SRC (), SUBREG_REG () (x (x (GET_CODE () == SUBREG && subreg_lowpart_p () && LOAD_EXTEND_OP () != NIL && SUBREG_WORD () == 0 && () && GET_CODE () == MEM (SET_SRC (), gen_rtx_combine () (x (GET_CODE () != PC && GET_CODE () == IF_THEN_ELSE && GET_MODE_CLASS () == MODE_INT && () && XEXP () == const0_rtx && GET_MODE () == GET_MODE () && ! can_conditionally_move_p () && () && ! side_effects_p () (GET_CODE () == NE XEXP () XEXP () (GET_CODE () == NE XEXP () XEXP () (GET_CODE () == IOR && rtx_equal_p () (true, 1 (GET_CODE () == IOR && rtx_equal_p () (true, 0 (GET_CODE () == IOR && rtx_equal_p () (false, 1 (GET_CODE () == IOR && rtx_equal_p () (false, 0 (AND, GET_MODE (), XEXP (), true (AND, GET_MODE (), gen_unary (), false (SET_SRC (), gen_binary () (x (GET_CODE () == CLOBBER && XEXP () == const0_rtx (GET_CODE () == CLOBBER && XEXP () == const0_rtx (x (x, last (x (x, 0 (x, 1 (GET_CODE () (GET_CODE () == XOR && rtx_equal_p () && ! side_effects_p () (AND, mode, gen_unary (), op1 (GET_CODE () == XOR && rtx_equal_p () && ! side_effects_p () (AND, mode, gen_unary (), op1 (GET_CODE () == NOT && GET_CODE () == XOR && rtx_equal_p () && ! side_effects_p () (AND, mode, XEXP (), op1 (GET_CODE () == NOT && GET_CODE () == XOR && rtx_equal_p () && ! side_effects_p () (AND, mode, XEXP (), op1 (GET_CODE () == CONST_INT (x, mode, op0, INTVAL () (last && GET_CODE () == IOR && GET_CODE () == AND && GET_CODE () == CONST_INT && GET_CODE () == CONST_INT (IOR, mode, gen_binary (), op1 (GET_CODE () != AND (GET_RTX_CLASS () == || GET_RTX_CLASS () == (x, 0 (x, 1 (GET_CODE () == IOR && () && ! side_effects_p () && ! side_effects_p () (GET_CODE () == IOR || GET_CODE () == XOR (gen_binary () (GET_CODE () != AND (GET_CODE () == IOR || GET_CODE () == XOR (gen_binary () (GET_CODE () == NOT && GET_CODE () == XOR (gen_binary () (GET_CODE () == NOT && GET_CODE () == XOR (gen_binary () (GET_CODE () == CONST_INT && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT && () == 0 (GET_CODE () == AND && () && ! side_effects_p () && ! side_effects_p () (GET_CODE () == AND (gen_binary () (GET_CODE () != IOR (GET_CODE () == AND (gen_binary () (GET_CODE () != IOR (() && rtx_equal_p () && GET_CODE () == CONST_INT && GET_CODE () == CONST_INT && () (ROTATE, mode, XEXP (), () (GET_CODE () == CONST_INT && GET_CODE () == ASHIFTRT && GET_CODE () == PLUS && GET_CODE () == CONST_INT && GET_CODE () == CONST_INT && INTVAL () < HOST_BITS_PER_WIDE_INT (XEXP () (op1 (mask >> count == INTVAL () && () == 0 (XEXP (), GEN_INT () (GET_CODE () == NOT (op0, 0 (GET_CODE () == NOT (op1, 0 (num_negated == 2 (XEXP (), op0 (XEXP (), op1 (num_negated == 1 (NOT, mode, mode, gen_binary () (GET_CODE () == AND && rtx_equal_p () && ! side_effects_p () (AND, mode, gen_unary (), op1 (GET_CODE () == AND && rtx_equal_p () && ! side_effects_p () (AND, mode, gen_unary (), op1 (op1 == const1_rtx && GET_RTX_CLASS () == && reversible_comparison_p () (reverse_condition (), mode, XEXP (), XEXP () (op1 == const1_rtx && GET_CODE () == LSHIFTRT && GET_CODE () == CONST_INT && INTVAL () == GET_MODE_BITSIZE () - 1 (GE, mode, XEXP (), const0_rtx (GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT && () && op1 == const_true_rtx && GET_RTX_CLASS () == && reversible_comparison_p () (reverse_condition (), mode, XEXP (), XEXP () (x (GET_CODE () (GET_CODE () == CONST_INT (GET_MODE_SIZE () > UNITS_PER_WORD (GET_MODE () (len == 0 (GET_CODE () == CLOBBER (x, 0 (GET_CODE () != CONST_INT || GET_CODE () != CONST_INT || GET_MODE () == VOIDmode (XEXP () (XEXP () (len + pos > GET_MODE_BITSIZE () (XEXP (), gen_rtx () (BITS_BIG_ENDIAN (GET_MODE () (GET_MODE () (modewidth >= pos - len (NULL_RTX, unsignedp LSHIFTRT ASHIFTRT, GET_MODE (), simplify_shift_const (), modewidth - len (unsignedp && len < HOST_BITS_PER_WIDE_INT (NULL_RTX, GET_MODE (), simplify_shift_const (), () - 1 (GET_CODE () == CLOBBER (x (1 (GET_CODE () == STRICT_LOW_PART && GET_CODE () == SUBREG (XEXP () (GET_MODE () (GET_CODE () == ZERO_EXTRACT && GET_CODE () == CONST_INT (SET_DEST (), 0 (XEXP () (SET_DEST (), 2 (GET_CODE () == CONST_INT && INTVAL () + len > GET_MODE_BITSIZE () (USE, GET_MODE (), inner (BITS_BIG_ENDIAN (GET_CODE () == CONST_INT (GET_MODE_BITSIZE () - len - INTVAL () (GET_CODE () == MINUS && GET_CODE () == CONST_INT && () (pos, 0 (MINUS, GET_MODE (), GEN_INT (), pos (GET_CODE () == SUBREG && () (SET, VOIDmode, SUBREG_REG (), gen_lowpart_for_combine () (GET_CODE () == SUBREG && subreg_lowpart_p () (inner (inner (len < HOST_BITS_PER_WIDE_INT (() - 1 (SET, VOIDmode, copy_rtx (), gen_binary () (mode, inner, pos, pos_rtx, len, unsignedp, in_dest, in_compare (inner (len, MODE_INT, 1 (GET_CODE () == USE (inner, 0 (GET_CODE () == SUBREG && subreg_lowpart_p () (GET_CODE () == MEM (SUBREG_REG () (inner (inner (pos_rtx && GET_CODE () == CONST_INT (pos_rtx (tmode != BLKmode && ! () && () (GET_CODE () == MEM (BYTES_BIG_ENDIAN (GET_MODE_BITSIZE () - len - pos (MEM, tmode, plus_constant () (new (inner (new (inner (new (inner (GET_CODE () == REG (tmode != inner_mode (SUBREG, tmode, inner, () (inner, tmode, len >= HOST_BITS_PER_WIDE_INT GET_MODE_MASK () () - 1, NULL_RTX, 0 (in_dest (GET_CODE () == MEM new () (mode == tmode new gen_rtx_combine () (pos_rtx == 0 && pos == 0 && ! in_dest && ! in_compare && ! spans_byte && unsignedp ( ! spans_byte && () (in_dest (int (int (int ( ! in_dest && unsignedp (int (int (int ( ! in_dest && ! unsignedp (int (int (int (mode != VOIDmode && GET_MODE_SIZE () < GET_MODE_SIZE () (pos_rtx && GET_MODE () != VOIDmode && GET_MODE_SIZE () < GET_MODE_SIZE () (pos_rtx (GET_CODE () != MEM || () (BITS_BIG_ENDIAN (pos_rtx == 0 (MAX () - len - pos (MINUS, GET_MODE (), GEN_INT (), pos_rtx (wanted_mem_mode != VOIDmode && GET_MODE_SIZE () < GET_MODE_SIZE () && () (BYTES_BIG_ENDIAN && ! spans_byte && GET_MODE_SIZE () < GET_MODE_SIZE () (is_mode (inner_mode (pos_rtx == 0 (wanted_mem_mode (BYTES_BIG_ENDIAN != BITS_BIG_ENDIAN && ! spans_byte && is_mode != wanted_mem_mode (GET_MODE_SIZE () - GET_MODE_SIZE () - offset (offset != 0 || inner_mode != wanted_mem_mode (MEM, wanted_mem_mode, plus_constant () (newmem (inner (newmem (inner (newmem (inner (GET_CODE () != MEM (inner, extraction_mode, pos_rtx || len + orig_pos >= HOST_BITS_PER_WIDE_INT GET_MODE_MASK () () << orig_pos, NULL_RTX, 0 (pos_rtx != 0 && GET_MODE_SIZE () > GET_MODE_SIZE () (ZERO_EXTEND, pos_mode, pos_rtx (pos_rtx != 0 && GET_MODE_SIZE () < GET_MODE_SIZE () (pos_mode, pos_rtx (pos_rtx == 0 && orig_pos_rtx != 0 && INTVAL () == pos (pos_rtx == 0 (pos (unsignedp ZERO_EXTRACT SIGN_EXTRACT, extraction_mode, inner, GEN_INT (), pos_rtx ( ! in_dest (mode, new (x, count (x (x (code (GET_CODE () == CONST_INT && INTVAL () >= count (NULL_RTX, ASHIFT, mode, XEXP (), INTVAL () - count (() != 0 (code, mode, mode, tem (GET_CODE () == CONST_INT && () == 0 && () != 0 (code, mode, tem, GEN_INT () (x, in_code (x (x (mode (code == MEM || code == PLUS || code == MINUS MEM () COMPARE in_code == COMPARE SET in_code (code (in_code == MEM && GET_CODE () == CONST_INT && INTVAL () < HOST_BITS_PER_WIDE_INT && INTVAL () >= 0 (XEXP (), next_code (MULT, mode, new, GEN_INT () (GET_CODE () != CONST_INT (GET_CODE () == LSHIFTRT && () >= 0 (XEXP (), next_code (mode, new, 0, XEXP (), i, 1, 0, in_code == COMPARE (GET_CODE () == SUBREG && subreg_lowpart_p () && GET_CODE () == LSHIFTRT && () >= 0 (XEXP (), next_code (GET_MODE (), new, 0, XEXP (), i, 1, 0, in_code == COMPARE (() && GET_CODE () == LSHIFTRT && GET_CODE () == LSHIFTRT && () >= 0 (GET_CODE (), mode, gen_rtx (), gen_rtx () (new, in_code (GET_CODE () == ROTATE && GET_CODE () == CONST_INT && () >= 0 && i <= INTVAL () (XEXP (), next_code (mode, new, (), NULL_RTX, i, 1, 0, in_code == COMPARE (ashr_optab handlers[() mode]insn_code != CODE_FOR_nothing && () && GET_CODE () == LSHIFTRT && GET_CODE () == CONST_INT && INTVAL () >= 0 && INTVAL () < HOST_BITS_PER_WIDE_INT && mode_width <= HOST_BITS_PER_WIDE_INT (mode (XEXP () (() == 0 (XEXP (), gen_rtx_combine () (() >= 0 (mode, make_compound_operation (), 0, NULL_RTX, i, 1, 0, in_code == COMPARE (in_code == COMPARE && () >= 0 (mode, make_compound_operation (), i, NULL_RTX, 1, 1, 0, 1 (ashr_optab handlers[() mode]insn_code == CODE_FOR_nothing && lshr_optab handlers[() mode]insn_code != CODE_FOR_nothing && mode_width <= HOST_BITS_PER_WIDE_INT && () == 0 (ASHIFTRT, mode, make_compound_operation (), XEXP () (x, 0 (x, 1 (GET_CODE () == CONST_INT && GET_CODE () == ASHIFT && GET_CODE () == CONST_INT && INTVAL () >= INTVAL () (XEXP (), next_code (mode, new, INTVAL () - INTVAL (), NULL_RTX, mode_width - INTVAL (), code == LSHIFTRT, 0, in_code == COMPARE (GET_RTX_CLASS () != && ! () && GET_CODE () == CONST_INT && INTVAL () < HOST_BITS_PER_WIDE_INT && () != 0 (mode, make_compound_operation (), 0, NULL_RTX, mode_width - INTVAL (), code == LSHIFTRT, 0, in_code == COMPARE (SUBREG_REG (), in_code (GET_CODE () != GET_CODE () && GET_MODE_SIZE () < GET_MODE_SIZE () && subreg_lowpart_p () (tem, mode, GET_MODE_MASK (), NULL_RTX, 0 (GET_CODE () != SUBREG (newer, in_code (new (mode, new (x (code (i 0 i < GET_RTX_LENGTH () i ++ (fmt[i] == (XEXP (), next_code (XEXP (), new (m, plen (m & - m (pos < 0 (() + 1 (*plen <= 0 (x, mode, mask, reg, just_select (x (code == CALL (() mode GET_MODE () (() && GET_MODE_BITSIZE () < GET_MODE_BITSIZE () (x (op_mode (op_mode (op_mode (GET_MODE_BITSIZE () >= HOST_BITS_PER_WIDE_INT GET_MODE_MASK () () - 1 (HOST_WIDE_INT (x, mode ( ! just_select && () == 0 (GET_CODE () == CONST_INT (x (mode (width > 0 && width < HOST_BITS_PER_WIDE_INT && () != 0 (HOST_WIDE_INT (cval (GET_MODE_SIZE () < GET_MODE_SIZE () && () == 0 (mode, x (GET_MODE () == mode && code != SUBREG && () == 0 (code ( ! BITS_BIG_ENDIAN && () == 0 (XEXP (), mode, mask, reg, next_select (x (GET_CODE () != code (x, mode, mask, reg, next_select (reg != 0 && () (subreg_lowpart_p () && () (SUBREG_REG (), mode, mask, reg, next_select (GET_CODE () == CONST_INT (x, op_mode, XEXP (), mask & INTVAL () (GET_CODE () == AND && GET_CODE () == CONST_INT && INTVAL () == mask (x, 0 (GET_CODE () == AND && GET_CODE () == CONST_INT && GET_MODE_MASK () != mask && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT (INTVAL () | () (GET_MODE () (width > 0 && width < HOST_BITS_PER_WIDE_INT && () != 0 (HOST_WIDE_INT (AND, GET_MODE (), XEXP (), GEN_INT () (rtx_cost () < rtx_cost () (mode (width < HOST_BITS_PER_WIDE_INT && () != 0 (HOST_WIDE_INT (GET_CODE () == CONST_INT && exact_log2 () >= 0 && () == 0 && () != 0 (plus_constant (), mode, mask, reg, next_select (GET_CODE () == LSHIFTRT && GET_CODE () == CONST_INT && INTVAL () >= 0 && INTVAL () < HOST_BITS_PER_WIDE_INT && GET_CODE () == CONST_INT && () && () (() << INTVAL () (GET_CODE (), GET_MODE (), XEXP (), temp (LSHIFTRT, GET_MODE (), temp, XEXP () (x, mode, mask, reg, next_select (op_mode, force_to_mode () (op_mode, force_to_mode () (GET_CODE () == CONST_INT && () && () != 0 (INTVAL () & mask (op_mode != GET_MODE () || op0 != XEXP () || op1 != XEXP () (code, op_mode, op0, op1 ( ! () && ! () (GET_CODE () == CONST_INT && INTVAL () >= 0 && INTVAL () < GET_MODE_BITSIZE () && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT (XEXP () (op_mode, force_to_mode () (op_mode != GET_MODE () || op0 != XEXP () (code, op_mode, op0, XEXP () (GET_CODE () == CONST_INT && INTVAL () < HOST_BITS_PER_WIDE_INT && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT (x, 0 (XEXP () (GET_MODE_BITSIZE () > HOST_BITS_PER_WIDE_INT || () != 0 (x (inner, op_mode, mask, reg, next_select (GET_MODE () != op_mode || inner != XEXP () (LSHIFTRT, op_mode, inner, XEXP () (GET_CODE () == LSHIFTRT && GET_CODE () == CONST_INT && () && exact_log2 () >= 0 && () (LSHIFTRT, GET_MODE (), XEXP (), GEN_INT () (GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT && () (XEXP (), mode, mask, reg, next_select (GET_CODE () == CONST_INT && INTVAL () >= 0 && INTVAL () < HOST_BITS_PER_WIDE_INT (GET_MODE_BITSIZE () > HOST_BITS_PER_WIDE_INT (HOST_WIDE_INT (GET_MODE_BITSIZE () - INTVAL () < HOST_BITS_PER_WIDE_INT (XEXP () (GET_MODE () (GET_MODE () (XEXP () (() == 0 || () >= 0 (x, LSHIFTRT, GET_MODE (), XEXP (), i < 0 INTVAL () GET_MODE_BITSIZE () - 1 - i (GET_CODE () != ASHIFTRT (x, mode, mask, reg, next_select (mask == 1 (LSHIFTRT, GET_MODE (), XEXP (), XEXP () (() && GET_CODE () == CONST_INT && INTVAL () >= 0 && () && GET_CODE () == ASHIFT && GET_CODE () == CONST_INT && INTVAL () == INTVAL () (XEXP (), mode, mask, reg, next_select (GET_CODE () == CONST_INT && INTVAL () >= 0 (code == ROTATE ROTATERT ROTATE, GET_MODE (), GEN_INT (), XEXP () (temp && GET_CODE () == CONST_INT (XEXP (), force_to_mode () (mask == 1 (XEXP (), mode, mask, reg, just_select (GET_CODE () == LSHIFTRT && GET_CODE () == CONST_INT && INTVAL () >= 0 && () && INTVAL () < HOST_BITS_PER_WIDE_INT (mask << INTVAL () (XOR, GET_MODE (), XEXP (), temp (LSHIFTRT, GET_MODE (), temp, XEXP () (x, mode, mask, reg, next_select (op_mode, force_to_mode () (op_mode != GET_MODE () || op0 != XEXP () (code, op_mode, op_mode, op0 (() == 0 && XEXP () == const0_rtx && () == 0 (XEXP (), mode, mask, reg, next_select (XEXP (), gen_lowpart_for_combine () (XEXP (), gen_lowpart_for_combine () (mode, x (x, ptrue, pfalse (x (x (mode (GET_RTX_CLASS () == && () != 0 (code, mode, GET_MODE (), true0 (code, mode, GET_MODE (), false0 (code == COMPARE (GET_RTX_CLASS () == || GET_RTX_CLASS () == || GET_RTX_CLASS () == (XEXP (), & true0, & false0 (XEXP (), & true1, & false1 (() && ! () (code, mode, true0, true1 (code, mode, false0, false1 (() && GET_CODE () == MULT && GET_CODE () == MULT (XEXP (), 1 (XEXP (), 1 (XEXP (), 0 (XEXP (), 0 (GET_RTX_CLASS () == && GET_RTX_CLASS () == && reversible_comparison_p () && () && ! side_effects_p () (MULT, mode, op0, const_true_rtx (MULT, mode, (), const_true_rtx (() && GET_CODE () == MULT && GET_CODE () == MULT (XEXP (), 0 (XEXP (), 0 (GET_RTX_CLASS () == && GET_RTX_CLASS () == && reversible_comparison_p () && () && ! side_effects_p () (code == IF_THEN_ELSE (x, 0 (x, 1 (x, 2 (GET_CODE () == NE && XEXP () == const0_rtx (cond0, 0 (GET_CODE () == EQ && XEXP () == const0_rtx (x, 2 (x, 1 (cond0, 0 (code == SUBREG && GET_MODE_CLASS () == MODE_INT && GET_MODE_CLASS () == MODE_INT && GET_MODE_SIZE () <= GET_MODE_SIZE () && 0 != () (true0, mode, GET_MODE_MASK (), NULL_RTX, 0 (false0, mode, GET_MODE_MASK (), NULL_RTX, 0 (CONSTANT_P () || () (num_sign_bit_copies () == size (exact_log2 () >= 0 (nz (x, cond, reg, val (x (side_effects_p () (cond == EQ && rtx_equal_p () (code == ABS && rtx_equal_p () && val == const0_rtx (cond (x, 0 (NEG, GET_MODE (), GET_MODE (), XEXP () (GET_RTX_CLASS () == || GET_RTX_CLASS () == (rtx_equal_p () (cond (rtx_equal_p () && rtx_equal_p () (GET_RTX_CLASS () == (comparison_dominates_p () const_true_rtx () (code == SMAX || code == SMIN || code == UMIN || code == UMAX (code == UMIN || code == UMAX (code == SMAX || code == UMAX (cond (cond (x, 1 (x, 0 (x, 1 (x, 0 (code (i GET_RTX_LENGTH () - 1 i >= 0 i -- (fmt[i] == (XEXP (), known_cond () (fmt[i] == (j XVECLEN () - 1 j >= 0 j -- (XVECEXP (), known_cond () (x (x (x (GET_CODE () == AND && GET_CODE () == ROTATE && GET_CODE () == CONST_INT && INTVAL () == -2 && () (VOIDmode, dest, 0, XEXP (), 1, 1, 1, 0 (SET, VOIDmode, assign, const0_rtx (GET_CODE () == AND && GET_CODE () == SUBREG && subreg_lowpart_p () && () && GET_CODE () == ROTATE && INTVAL () == -2 && () (VOIDmode, dest, 0, XEXP (), 1, 1, 1, 0 (SET, VOIDmode, assign, const0_rtx (GET_CODE () == IOR && GET_CODE () == ASHIFT && XEXP () == const1_rtx && () (VOIDmode, dest, 0, XEXP (), 1, 1, 1, 0 (SET, VOIDmode, assign, const1_rtx (GET_CODE () == IOR && GET_CODE () == AND && GET_CODE () == CONST_INT && () (XEXP () (src, 1 (GET_CODE () == IOR && GET_CODE () == AND && GET_CODE () == CONST_INT && () (XEXP () (src, 0 (c1 ^ GET_MODE_MASK (), & len (pos < 0 || pos + len > GET_MODE_BITSIZE () || () (VOIDmode, dest, pos, NULL_RTX, len, 1, 1, 0 (GET_CODE () == STRICT_LOW_PART GET_MODE () GET_MODE () (simplify_shift_const (), mode, GET_MODE_BITSIZE () >= HOST_BITS_PER_WIDE_INT GET_MODE_MASK () () - 1, dest, 0 (SET, VOIDmode, assign, src (x (x (FLOAT_MODE_P () (code != IOR && code != AND && code != XOR && code != PLUS && code != MINUS (x, 0 (x, 1 (GET_RTX_CLASS () == || GET_RTX_CLASS () == (lhs (rhs (lhs (inner_code != GET_CODE () (inner_code (code == PLUS || code == MINUS (code != PLUS && code != MINUS (GET_MODE () != GET_MODE () || SUBREG_WORD () != SUBREG_WORD () || ! subreg_lowpart_p () || () || () || GET_MODE_SIZE () > UNITS_PER_WORD (code, GET_MODE (), SUBREG_REG (), SUBREG_REG () (GET_MODE (), tem (GET_RTX_CLASS () == && rtx_equal_p () (lhs, 0 (lhs, 1 (rhs, 1 (GET_RTX_CLASS () == && rtx_equal_p () (lhs, 0 (lhs, 1 (rhs, 0 (GET_RTX_CLASS () == && rtx_equal_p () (lhs, 1 (lhs, 0 (rhs, 1 (rtx_equal_p () (lhs, 1 (lhs, 0 (rhs, 0 (code, GET_MODE (), lhs, rhs (code == XOR && inner_code == IOR (NOT, GET_MODE (), GET_MODE (), other (inner_code, GET_MODE (), apply_distributive_law (), other (x, mode, varop, constop (mode (varop, mode, constop, NULL_RTX, 0 (GET_CODE () == CLOBBER || GET_CODE () == CONST_INT (varop, mode (mode (BITS_PER_WORD < HOST_BITS_PER_WIDE_INT && BITS_PER_WORD == width && () (() () << width (constop == 0 (GET_CODE () == NEG && nonzero_bits () == 1 && () >= 0 (NULL_RTX, ASHIFT, mode, XEXP (), i (GET_CODE () == IOR || GET_CODE () == XOR (mode, apply_distributive_law () (x && GET_CODE () == SUBREG && GET_MODE () == mode && SUBREG_REG () == varop (x, 0 (mode, varop (GET_CODE () == CLOBBER (constop == nonzero (x == 0 || GET_CODE () != AND || GET_MODE () != mode (AND, mode, varop, GEN_INT () (GET_CODE () != CONST_INT || INTVAL () != constop (XEXP (), GEN_INT () (XEXP (), varop (x, mode (mode (mode (FLOAT_MODE_P () || FLOAT_MODE_P () (GET_MODE_BITSIZE () > mode_width (x (mode (mode (mode_width > HOST_BITS_PER_WIDE_INT (GET_MODE () != VOIDmode && GET_MODE () != mode && GET_MODE_BITSIZE () <= BITS_PER_WORD && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT && GET_MODE_BITSIZE () > GET_MODE_BITSIZE () (x, GET_MODE () (mode (GET_MODE () (x (code (POINTERS_EXTEND_UNSIGNED && GET_MODE () == Pmode && REGNO_POINTER_FLAG () (ptr_mode (x == stack_pointer_rtx (PUSH_ROUNDING (), sp_alignment (sp_alignment - 1 (reg_last_set_value[REGNO ()] != 0 && reg_last_set_mode[REGNO ()] == mode && () && INSN_CUID () < subst_low_cuid (x (x (tem (GET_MODE_BITSIZE () < mode_width && GET_CODE () == CONST_INT && INTVAL () > 0 && 0 != () (INTVAL () | () (tem, mode (nonzero_sign_valid && reg_nonzero_bits[REGNO ()](x (INTVAL () > 0 && mode_width < BITS_PER_WORD && 0 != () (INTVAL () | () (x (LOAD_EXTEND_OP () == ZERO_EXTEND (GET_MODE () (GET_MODE_CLASS () == MODE_INT && mode_width <= HOST_BITS_PER_WIDE_INT (num_sign_bit_copies () == GET_MODE_BITSIZE () (GET_MODE_SIZE () < mode_width (GET_MODE_MASK () & GET_MODE_MASK () (num_sign_bit_copies () == GET_MODE_BITSIZE () (nonzero_bits () & GET_MODE_MASK () (XEXP (), mode (GET_MODE () != VOIDmode (GET_MODE () (XEXP (), mode (GET_MODE () != VOIDmode (GET_MODE () (inner_nz & () (GET_MODE_MASK () & GET_MODE_MASK () (nonzero_bits () & nonzero_bits () (nonzero_bits () | nonzero_bits () (XEXP (), mode (XEXP (), mode (nz0 (nz1 (nz0 & - nz0 (nz1 & - nz1 (nz0 & () (nz1 & () (code (width0, width1 (low0, low1 (low0, low1 ( ! op0_maybe_minusp && ! op1_maybe_minusp ( ! op0_maybe_minusp && ! op1_maybe_minusp (width0, width1 (low0, low1 (width0, width1 (low0, low1 (result_width < mode_width (() 1 << result_width (result_low > 0 (() - 1 (GET_CODE () == CONST_INT && INTVAL () < HOST_BITS_PER_WIDE_INT (() 1 << INTVAL () (SUBREG_PROMOTED_VAR_P () && SUBREG_PROMOTED_UNSIGNED_P () (GET_MODE_MASK () & nonzero_bits () (GET_MODE_BITSIZE () <= BITS_PER_WORD && () (SUBREG_REG (), mode (GET_MODE_SIZE () > GET_MODE_SIZE () (GET_MODE_MASK () & GET_MODE_MASK () (GET_CODE () == CONST_INT && INTVAL () >= 0 && INTVAL () < HOST_BITS_PER_WIDE_INT (x (inner_mode (XEXP () (inner_mode (XEXP (), mode (mode_width > width (op_nonzero & nonzero & mode_mask (code == LSHIFTRT (code == ASHIFTRT (inner & () (() - 1 (width - count (code == ASHIFT (() & mode_mask (outer | inner (() 1 << () (nonzero_bits () | nonzero_bits () (x, mode (x (mode == VOIDmode (x (mode == VOIDmode || FLOAT_MODE_P () || FLOAT_MODE_P () (mode (bitwidth < GET_MODE_BITSIZE () (1, () (GET_MODE () != VOIDmode && bitwidth > GET_MODE_BITSIZE () (code ( ! POINTERS_EXTEND_UNSIGNED && GET_MODE () == Pmode && mode == Pmode && REGNO_POINTER_FLAG () (Pmode (ptr_mode (reg_last_set_value[REGNO ()] != 0 && reg_last_set_mode[REGNO ()] == mode && () && INSN_CUID () < subst_low_cuid (x (x (tem != 0 (tem, mode (nonzero_sign_valid && reg_sign_bit_copies[REGNO ()] != 0 (x (LOAD_EXTEND_OP () == SIGN_EXTEND (1, bitwidth - GET_MODE_BITSIZE () + 1 (x (mode (bitwidth <= HOST_BITS_PER_WIDE_INT && () != 0 (nonzero (mode (nonzero == 0 bitwidth bitwidth - floor_log2 () - 1 (SUBREG_PROMOTED_VAR_P () && ! SUBREG_PROMOTED_UNSIGNED_P () (bitwidth - GET_MODE_BITSIZE () + 1, num_sign_bit_copies () (bitwidth <= GET_MODE_BITSIZE () (SUBREG_REG (), VOIDmode (1, () (() && LOAD_EXTEND_OP () == SIGN_EXTEND (SUBREG_REG (), mode (GET_CODE () == CONST_INT (1, bitwidth - INTVAL () (bitwidth - GET_MODE_BITSIZE () + num_sign_bit_copies () (XEXP (), VOIDmode (1, () (XEXP (), mode (GET_CODE () == CONST_INT && INTVAL () >= 0 && INTVAL () < bitwidth (XEXP (), mode (1, num0 - () (XEXP (), mode (nonzero == 1 (XEXP (), mode (num0 > 1 && bitwidth <= HOST_BITS_PER_WIDE_INT && () (XEXP (), mode (XEXP (), mode (num0, num1 (code == PLUS && XEXP () == constm1_rtx && bitwidth <= HOST_BITS_PER_WIDE_INT (XEXP (), mode (() == 0 (nonzero == 1 || nonzero == 0 bitwidth bitwidth - floor_log2 () - 1 (XEXP (), mode (XEXP (), mode (1, MIN () - 1 (XEXP (), mode (XEXP (), mode (bitwidth - num0 (bitwidth - num1 (result > 0 && bitwidth <= HOST_BITS_PER_WIDE_INT && () && () (1, result (XEXP (), mode (XEXP (), mode (XEXP (), mode (result > 1 && bitwidth <= HOST_BITS_PER_WIDE_INT && () != 0 (XEXP (), mode (result > 1 && bitwidth <= HOST_BITS_PER_WIDE_INT && () != 0 (XEXP (), mode (GET_CODE () == CONST_INT && INTVAL () > 0 (bitwidth, num0 + INTVAL () (GET_CODE () != CONST_INT || INTVAL () < 0 || INTVAL () >= bitwidth (XEXP (), mode (1, num0 - INTVAL () (XEXP (), mode (XEXP (), mode (num0, num1 (bitwidth > HOST_BITS_PER_WIDE_INT (x, mode (nonzero & () 1 bitwidth - floor_log2 () - 1 (x, mode, unsignedp (nonzero_sign_valid == 0 (unsignedp () num_sign_bit_copies () - 1 (pop0, pconst0, op1, const1, mode, pcomp_p (mode (mode (mode (op0 == AND (op1 == NIL || op0 == SET (op0 == NIL (op0 == op1 (op0 (op0 == PLUS || op1 == PLUS || op0 == NEG || op1 == NEG (const0 != const1 (op0 (op1 == AND (op1 == AND (op1 == IOR (mode (const0 == 0 && () (const0 == 0 && op0 == AND (const0 == GET_MODE_MASK () && op0 == AND (BITS_PER_WORD < HOST_BITS_PER_WIDE_INT && BITS_PER_WORD == width && () (() () << width (x, code, result_mode, varop, count (GET_MODE_SIZE () + () (count < 0 || count > GET_MODE_BITSIZE () (x (code, mode, varop, GEN_INT () (count != 0 (GET_CODE () == CLOBBER (complement_p (code == ROTATERT (result_mode (code == ASHIFTRT || code == LSHIFTRT || code == ROTATE result_mode mode (count > GET_MODE_BITSIZE () - 1 (code == ASHIFTRT (shift_mode (code == ROTATE || code == ROTATERT (shift_mode (count < 0 ((code == ASHIFTRT && () (code == ASHIFTRT && () (shift_mode (GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT && code == ASHIFTRT && () (GET_CODE () (varop (new != varop (() && ! mode_dependent_address_p () && ! MEM_VOLATILE_P () && () != BLKmode (BYTES_BIG_ENDIAN (MEM, tmode, XEXP () (MEM, tmode, plus_constant () (new (varop (new (varop (new (varop (code == ASHIFTRT SIGN_EXTEND ZERO_EXTEND, mode, new (() && () != BLKmode && tmode == GET_MODE () (BITS_BIG_ENDIAN (varop, 0 (XEXP () (XEXP (), plus_constant () (code == ASHIFTRT SIGN_EXTEND ZERO_EXTEND, mode, new (subreg_lowpart_p () && () && () (varop (GET_MODE_SIZE () > GET_MODE_SIZE () (varop (GET_CODE () == CONST_INT && exact_log2 () >= 0 (ASHIFT, GET_MODE (), XEXP (), GEN_INT () (GET_CODE () == CONST_INT && exact_log2 () >= 0 (LSHIFTRT, GET_MODE (), XEXP (), GEN_INT () (code == LSHIFTRT && count == GET_MODE_BITSIZE () - 1 (varop, 0 (GET_CODE () == CONST_INT && INTVAL () >= 0 && INTVAL () < GET_MODE_BITSIZE () && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT (varop (XEXP () (code == ASHIFT && first_code == ASHIFTRT && () == count (GET_MODE_MASK () & () (NULL_RTX, result_mode, XEXP (), mask (NULL_RTX, ASHIFT, result_mode, varop, count (code == ASHIFTRT && first_code == ASHIFT && GET_MODE () == shift_mode && () (count < 0 (varop, 0 (code == first_code (GET_MODE () != result_mode && () (varop, 0 (code == ASHIFTRT || () || GET_MODE_BITSIZE () > HOST_BITS_PER_WIDE_INT || () (nonzero_bits () (code, result_mode, mask_rtx, GEN_INT () (mask_rtx == 0 || GET_CODE () != CONST_INT || ! merge_outer_ops () (() == () (count > 0 && () (count < 0 (varop, 0 (GET_CODE () == code && GET_CODE () != CONST_INT && 0 != () (code, mode, new, XEXP () (XOR, mode, XEXP (), GEN_INT () (GET_CODE () == IOR && GET_CODE () == PLUS && XEXP () == constm1_rtx && () && () && count == GET_MODE_BITSIZE () - 1 && rtx_equal_p () (LE, GET_MODE (), XEXP (), const0_rtx (STORE_FLAG_VALUE == 1 code == ASHIFTRT code == LSHIFTRT (NEG, GET_MODE (), varop (GET_CODE () == CONST_INT && () != 0 && GET_CODE () == CONST_INT && merge_outer_ops () (varop, 0 (NULL_RTX, code, shift_mode, XEXP (), count (NULL_RTX, code, shift_mode, XEXP (), count (GET_CODE (), shift_mode, lhs, rhs (varop (code == LSHIFTRT && XEXP () == const0_rtx && GET_MODE () == result_mode && count == GET_MODE_BITSIZE () - 1 && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT && () && nonzero_bits () == 1 && merge_outer_ops () (varop, 0 (code == LSHIFTRT && count == GET_MODE_BITSIZE () - 1 && nonzero_bits () == 1 (varop, 0 (code == ASHIFT && merge_outer_ops () (varop, 0 (code == LSHIFTRT && count == GET_MODE_BITSIZE () - 1 && XEXP () == constm1_rtx && nonzero_bits () == 1 && merge_outer_ops () (varop, 0 (() && count < HOST_BITS_PER_WIDE_INT && nonzero_bits () >> count == 0 && () == 0 (varop, 0 (() && count < HOST_BITS_PER_WIDE_INT && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT && 0 == () && 0 == () (varop, 1 (code == ASHIFT && GET_CODE () == CONST_INT && () != 0 && GET_CODE () == CONST_INT && merge_outer_ops () (varop, 0 (GET_CODE () == ASHIFTRT && count == GET_MODE_BITSIZE () - 1 && () && () && GET_CODE () == CONST_INT && INTVAL () == count && rtx_equal_p () (GT, GET_MODE (), XEXP (), const0_rtx (STORE_FLAG_VALUE == 1 code == ASHIFTRT code == LSHIFTRT (NEG, GET_MODE (), varop (code == ASHIFTRT || code == LSHIFTRT || code == ROTATE result_mode mode (x && GET_RTX_CLASS () == && GET_CODE () == CONST_INT && INTVAL () == count (x, 1 (count (x && GET_CODE () == SUBREG && GET_MODE () == shift_mode && SUBREG_REG () == varop (x, 0 (GET_MODE () != shift_mode (shift_mode, varop (GET_CODE () == CLOBBER (code, shift_mode, varop, const_rtx (new != 0 (x == 0 || GET_CODE () != code || GET_MODE () != shift_mode (code, shift_mode, varop, const_rtx (XEXP (), varop (XEXP (), const_rtx (outer_op != NIL && GET_CODE () == code && GET_CODE () == CONST_INT (x, code, shift_mode, XEXP (), INTVAL () (orig_code == LSHIFTRT && result_mode != shift_mode (NULL_RTX, shift_mode, x, GET_MODE_MASK () >> orig_count (result_mode, x (complement_p (NOT, result_mode, result_mode, x (outer_op != NIL (GET_MODE_BITSIZE () < HOST_BITS_PER_WIDE_INT (result_mode (result_mode (BITS_PER_WORD < HOST_BITS_PER_WIDE_INT && BITS_PER_WORD == width && () (() () << width (outer_op == AND (NULL_RTX, result_mode, x, outer_const (outer_op == SET (outer_const (GET_RTX_CLASS () == (outer_op, result_mode, result_mode, x (outer_op, result_mode, x, GEN_INT () (pnewpat, insn, pnotes, padded_scratches (GET_CODE () == PARALLEL (i XVECLEN () - 1 i >= 0 i -- (GET_CODE () == CLOBBER && XEXP () == const0_rtx (pat, insn, & num_clobbers_to_add (insn_code_number < 0 && ! check_asm_operands () && GET_CODE () == PARALLEL (pos 0, i 0 i < XVECLEN () i ++ (GET_CODE () != CLOBBER (i != pos (XVECEXP (), XVECEXP () (XVECLEN (), pos (pos == 1 (pat, 0, 0 (pat, insn, & num_clobbers_to_add (num_clobbers_to_add (PARALLEL, VOIDmode, gen_rtvec () (GET_CODE () == PARALLEL (i 0 i < XVECLEN () i ++ (newpat, 0, i (pat, 0, i (newpat, 0, 0 (newpat, insn_code_number (i XVECLEN () - num_clobbers_to_add i < XVECLEN () i ++ (GET_CODE () == REG && ! reg_dead_at_p () (GET_CODE () == SCRATCH (*padded_scratches (EXPR_LIST, REG_UNUSED, XEXP (), notes (mode, x (GET_MODE () == mode (GET_MODE_SIZE () > UNITS_PER_WORD && ! () (CLOBBER, GET_MODE (), const0_rtx (GET_CODE () == SUBREG && GET_CODE () == MEM (x (GET_MODE () == mode (mode, x (result != 0 && GET_CODE () == SUBREG && GET_CODE () == REG && REGNO () >= FIRST_PSEUDO_REGISTER && () (SUBREG_REG () (result (GET_CODE () == MEM (MEM_VOLATILE_P () || mode_dependent_address_p () (CLOBBER, GET_MODE (), const0_rtx (GET_MODE_SIZE () < GET_MODE_SIZE () (SUBREG, mode, x, 0 (WORDS_BIG_ENDIAN (MAX () - MAX () (BYTES_BIG_ENDIAN (MIN () - MIN () (MEM, mode, plus_constant () (new (x (new (x (new (x (GET_RTX_CLASS () == (GET_CODE (), mode, XEXP (), XEXP () (WORDS_BIG_ENDIAN && GET_MODE_SIZE () > UNITS_PER_WORD (() / UNITS_PER_WORD (SUBREG, mode, x, word (() (p, mode (p, enum rtx_code (p, enum machine_mode (code (code (n_args == 0 || n_args > 3 ((j 0 j < n_args j ++ (*fmt ++ != ((p, rtx (i previous_num_undos i < undobuf num_undo i ++ ( ! undobuf undo[i]is_int && GET_CODE () == code && GET_MODE () == mode (j 0 j < n_args j ++ (XEXP () != args[j](j == n_args (code (rt, mode (rt, 0 (n_args > 1 (rt, 1 (n_args > 2 (rt, 2 (code, mode, op0, op1 (GET_RTX_CLASS () == && () (GET_RTX_CLASS () == (op0 (GET_CODE () == COMPARE && op1 == const0_rtx (op0, 1 (op0, 0 (op0 (op_mode == VOIDmode (op1 (code, op_mode, op0, op1 (code, mode, op0, op1 (result (GET_RTX_CLASS () == && () (code, mode, op1, op0 (code, mode, op0, op1 (code, mode, op0_mode, op0 (code, mode, op0, op0_mode (result (code, mode, op0 (code, pop0, pop1 (1 (code != GTU && code != GEU && code != LTU && code != LEU && GET_CODE () == ASHIFTRT && GET_CODE () == ASHIFTRT && GET_CODE () == ASHIFT && GET_CODE () == ASHIFT && GET_CODE () == SUBREG && GET_CODE () == SUBREG && () && GET_CODE () == CONST_INT && GET_CODE () == CONST_INT && GET_CODE () == CONST_INT && GET_CODE () == CONST_INT && INTVAL () == INTVAL () && INTVAL () == INTVAL () && INTVAL () == INTVAL () && () (XEXP () (XEXP () (GET_CODE () == GET_CODE () && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT && () && GET_CODE () == CONST_INT && INTVAL () >= 0 && INTVAL () < HOST_BITS_PER_WIDE_INT && XEXP () == XEXP () (op0 (mode (XEXP () (GET_CODE () == LSHIFTRT || GET_CODE () == ASHIFTRT (mask >> shift_count (GET_CODE () == ASHIFT (mask & () (() == 0 && () == 0 (op0, 0 (op1, 0 (GET_CODE () == AND && GET_CODE () == AND && GET_CODE () == CONST_INT && GET_CODE () == CONST_INT (op0, 0 (op1, 0 (XEXP () (XEXP () (GET_CODE () == SUBREG && GET_CODE () == SUBREG && () && () && () && () && () (inner_op0 (inner_op1 (code (c0 == c1 (tmode GET_CLASS_NARROWEST_MODE () tmode != GET_MODE () tmode GET_MODE_WIDER_MODE () (c0 == GET_MODE_MASK () (tmode, inner_op0 (tmode, inner_op1 (code ( ! changed (() || () (op0, 0 (op1, 0 (code (CONSTANT_P () (code (GET_CODE () == CONST_INT (op0 (mode (mode (GET_MODE_CLASS () != MODE_INT && ! () (op1 (mode_width <= HOST_BITS_PER_WIDE_INT (const_op && () && mode_width <= HOST_BITS_PER_WIDE_INT && exact_log2 () >= 0 && nonzero_bits () == const_op (code == EQ || code == GE || code == GEU NE EQ (const_op == -1 && () && num_sign_bit_copies () == mode_width (code == EQ || code == LE || code == GEU NE EQ (code (const_op > 0 (const_op (const_op < 0 (const_op (const_op == 0 && mode_width <= HOST_BITS_PER_WIDE_INT && () == 0 (const_op > 0 (const_op (const_op < 0 (const_op (const_op == 0 && mode_width <= HOST_BITS_PER_WIDE_INT && () == 0 (const_op > 0 (const_op (const_op == () 1 << () (const_op == 0 (const_op == () - 1 (const_op > 1 (const_op (const_op == () 1 << () (const_op == 0 (const_op == () - 1 (code == EQ || code == NE (() && const_op == 0 (code == LTU || code == LEU || code == GTU || code == LEU (sign_bit_comparison_p && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT (op0, mode, (), NULL_RTX, 0 (GET_CODE () (GET_CODE () == CONST_INT && XEXP () == const1_rtx && equality_comparison_p && const_op == 0 && () >= 0 && () (BITS_BIG_ENDIAN (GET_MODE_BITSIZE () - 1 - i (op0, 2 (i (code (op0 (tem != op0 (equality_comparison_p && () != 0 (op0, 0 (sign_bit_comparison_p (op0, 0 (code == GE LT GE (equality_comparison_p && () != 0 (op0, 0 (const_op != 0 (sign_bit_comparison_p && () (op0, 0 (code == LT NE EQ (num_sign_bit_copies () >= 2 (op0, 0 (code (equality_comparison_p && GET_CODE () == CONST_INT && () != 0 (op0, 0 (const_op == 0 && sign_bit_comparison_p && GET_CODE () == CONST_INT && mode_width <= HOST_BITS_PER_WIDE_INT (NULL_RTX, mode, XEXP (), () (code == LT NE EQ (const_op == 0 && equality_comparison_p (op0, 0 ( ! unsigned_comparison_p && () && () (op0, 0 (mode_width <= HOST_BITS_PER_WIDE_INT && subreg_lowpart_p () && GET_CODE () == PLUS && GET_CODE () == CONST_INT && INTVAL () < 0 && () && () const_op < GET_MODE_MASK () / 2 && () (op0 (subreg_lowpart_p () && GET_MODE_BITSIZE () < mode_width (() && () && () (op0, 0 (equality_comparison_p && 0 != () (op0, 0 (const_op == 0 && XEXP () == constm1_rtx && GET_CODE () == ABS && sign_bit_comparison_p (XEXP (), 0 (code == LT EQ NE (equality_comparison_p && 0 != () (op0, 0 (equality_comparison_p && 0 != () (op0, 1 (sign_bit_comparison_p && GET_CODE () == ASHIFTRT && GET_CODE () == CONST_INT && INTVAL () == mode_width - 1 && rtx_equal_p () (op0, 1 (code == GE LE GT (equality_comparison_p && 0 != () (op0, 0 (const_op != 0 || XEXP () == cc0_rtx || GET_MODE_CLASS () == MODE_CC (GET_CODE () == COMPARE (XEXP (), 0 (XEXP (), 1 (op0, 0 (op0, 1 (code == NE || () || () (code == LT || code == NE GET_CODE () reverse_condition () (sign_bit_comparison_p && GET_CODE () == PLUS && XEXP () == constm1_rtx && rtx_equal_p () (op0, 1 (code == GE GT LE (const_op == 0 && equality_comparison_p && GET_CODE () == ASHIFT && XEXP () == const1_rtx (op0, mode, gen_rtx_combine (), () 1 (const_op == 0 && equality_comparison_p && mode_width <= HOST_BITS_PER_WIDE_INT && GET_CODE () == CONST_INT && GET_CODE () == LSHIFTRT && GET_CODE () == CONST_INT && INTVAL () >= 0 && INTVAL () < HOST_BITS_PER_WIDE_INT (() << INTVAL () (() == 0 && () (XEXP (), 0 (equality_comparison_p && const_op == 0 && GET_CODE () == CONST_INT && mode_width <= HOST_BITS_PER_WIDE_INT && () (op0, 0 (code == EQ GE LT (() && GET_CODE () == CONST_INT && () >= 0 && const_op >> i == 0 && () != BLKmode (tmode, XEXP () (GET_CODE () == CONST_INT && INTVAL () >= 0 && () && () && mode_width <= HOST_BITS_PER_WIDE_INT && () == 0 (XEXP () (const_op (op0, 0 (sign_bit_comparison_p && GET_CODE () == CONST_INT && mode_width <= HOST_BITS_PER_WIDE_INT (NULL_RTX, mode, XEXP (), () (code == LT NE EQ (const_op == 0 && equality_comparison_p && GET_CODE () == CONST_INT && INTVAL () == mode_width - 1 (NULL_RTX, mode, XEXP (), () 1 (equality_comparison_p && const_op == 0 && GET_CODE () == CONST_INT (NULL_RTX, LSHIFTRT, mode, XEXP (), INTVAL () ( ! unsigned_comparison_p && GET_CODE () == CONST_INT && GET_CODE () == ASHIFT && XEXP () == XEXP () && () != BLKmode && () (tmode, XEXP () (GET_CODE () == CONST_INT && INTVAL () >= 0 && INTVAL () < HOST_BITS_PER_WIDE_INT && mode_width <= HOST_BITS_PER_WIDE_INT && () == 0 && () (XEXP () (const_op (op0, 0 (const_op == 0 && () && GET_CODE () == CONST_INT && INTVAL () == mode_width - 1 (op0, 0 (code == NE || code == GT LT GE (op0, op1 == const0_rtx COMPARE SET (op1, SET (GET_CODE () == SUBREG && subreg_lowpart_p () && GET_MODE_CLASS () == MODE_INT && () && () (op0 (GET_MODE (), op1 (GET_CODE () == SUBREG && subreg_lowpart_p () && GET_MODE_CLASS () == MODE_INT && () && () && () == 0 && () (op0 (op0 (mode != VOIDmode && GET_MODE_CLASS () == MODE_INT && GET_MODE_SIZE () < UNITS_PER_WORD && cmp_optab handlers[() mode]insn_code == CODE_FOR_nothing (tmode GET_MODE_WIDER_MODE () () tmode GET_MODE_WIDER_MODE () (cmp_optab handlers[() tmode]insn_code != CODE_FOR_nothing (() || () (tmode, op0 (tmode, op1 (op1 == const0_rtx && () && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT (AND, tmode, gen_lowpart_for_combine (), GEN_INT () (code == LT (code, op0, op1 (x (TARGET_FLOAT_FORMAT != IEEE_FLOAT_FORMAT || flag_fast_math || GET_CODE () == NE || GET_CODE () == EQ (GET_MODE_CLASS () (REVERSIBLE_CC_MODE () (XEXP () (x && GET_CODE () == COMPARE && ! FLOAT_MODE_P () (x (x (code (code == REG (x (regno < FIRST_PSEUDO_REGISTER HARD_REGNO_NREGS () 1 (i regno i < endregno i ++ (i GET_RTX_LENGTH () - 1 i >= 0 i -- (fmt[i] == (XEXP () (reg, insn, value (reg (regno < FIRST_PSEUDO_REGISTER HARD_REGNO_NREGS () 1 (value && insn && reg_overlap_mentioned_p () (insn (reg (tem (copy_rtx (), reg, tem (i regno i < endregno i ++ (insn (value (value (i regno i < endregno i ++ (value && reg_last_set_table_tick[i] == label_tick (value && ! get_last_value_validate () (value ( ! get_last_value_validate () (value (insn (reg (value, GET_MODE () (value, GET_MODE () (dest, setter (GET_CODE () == SUBREG (dest (GET_CODE () == REG (GET_CODE () == SET && dest == SET_DEST () (dest, record_dead_insn, SET_SRC () (GET_CODE () == SET && GET_CODE () == SUBREG && SUBREG_REG () == dest && GET_MODE_BITSIZE () <= BITS_PER_WORD && subreg_lowpart_p () (dest, record_dead_insn, gen_lowpart_for_combine () (dest, record_dead_insn, NULL_RTX (GET_CODE () == MEM && ! push_operand () (record_dead_insn (insn (link REG_NOTES () link link XEXP () (REG_NOTE_KIND () == REG_DEAD && GET_CODE () == REG (XEXP () (regno < FIRST_PSEUDO_REGISTER HARD_REGNO_NREGS () 1 (i regno i < endregno i ++ (REG_NOTE_KIND () == REG_INC (XEXP (), insn, NULL_RTX (GET_CODE () == CALL_INSN (i 0 i < FIRST_PSEUDO_REGISTER i ++ (call_used_regs[i](insn (PATTERN (), record_dead_and_set_regs_1 (loc, tick, replace (GET_CODE () (GET_CODE () (GET_CODE () == REG (x (regno < FIRST_PSEUDO_REGISTER HARD_REGNO_NREGS () 1 (j regno j < endregno j ++ (reg_last_set_invalid[j] || () (replace (CLOBBER, GET_MODE (), const0_rtx (i 0 i < len i ++ (() || fmt[i] == (x (GET_CODE () == SUBREG && subreg_lowpart_p () && () && () != 0 (GET_MODE (), value (GET_CODE () != REG (x (value == 0 || () (INSN_CUID () >= subst_low_cuid (subst_prev_insn (insn prev_nonnote_insn () insn && () insn prev_nonnote_insn () (insn && () != 0 && rtx_equal_p () (set (reg_mentioned_p () (copy_rtx (), x, gen_rtx () (reg_overlap_mentioned_p () (get_last_value_validate () (value (get_last_value_validate () (x, from_cuid (x (code == REG (x (regno < FIRST_PSEUDO_REGISTER HARD_REGNO_NREGS () 1 (regno == STACK_POINTER_REGNUM (regno < endreg regno ++ (reg_last_set[regno] && INSN_CUID () > from_cuid (code == MEM && mem_last_set > from_cuid (code (i GET_RTX_LENGTH () - 1 i >= 0 i -- (fmt[i] == (j XVECLEN () - 1 j >= 0 j -- (use_crosses_set_p () (fmt[i] == && use_crosses_set_p () (dest, x (GET_CODE () != REG (dest (regno < FIRST_PSEUDO_REGISTER HARD_REGNO_NREGS () 1 (reg_dead_endregno > regno && reg_dead_regno < endregno (GET_CODE () == CLOBBER (reg, insn (reg (reg_dead_regno < FIRST_PSEUDO_REGISTER HARD_REGNO_NREGS () 1 (reg_dead_regno < FIRST_PSEUDO_REGISTER (i reg_dead_regno i < reg_dead_endregno i ++ (TEST_HARD_REG_BIT () (insn && GET_CODE () != CODE_LABEL && GET_CODE () != BARRIER insn prev_nonnote_insn () (PATTERN (), reg_dead_at_p_1 (reg_dead_flag (find_regno_note () (insn == 0 (block 0 block < n_basic_blocks block ++ (insn == basic_block_head[block](block == n_basic_blocks (i reg_dead_regno i < reg_dead_endregno i ++ (basic_block_live_at_start[block][i / REGSET_ELT_BITS] & () (x (x (code (GET_CODE () == MEM (XEXP () (x (regno < FIRST_PSEUDO_REGISTER (regno == STACK_POINTER_REGNUM || regno == HARD_FRAME_POINTER_REGNUM || () || regno == FRAME_POINTER_REGNUM (regno, GET_MODE () (i -- > 0 (newpat_used_regs, regno + i (x (GET_CODE () == SUBREG || GET_CODE () == ZERO_EXTRACT || GET_CODE () == SIGN_EXTRACT || GET_CODE () == STRICT_LOW_PART (testreg, 0 (GET_CODE () == MEM (XEXP () (SET_SRC () (code (i GET_RTX_LENGTH () - 1 i >= 0 i -- (fmt[i] == (XEXP () (fmt[i] == (j 0 j < XVECLEN () j ++ (XVECEXP () (regno, insn (insn, REG_DEAD, regno (note (insn, note (x, from_cuid, to_insn, pnotes (x (code == REG (x (before_dead && INSN_UID () > max_uid_cuid (before_dead (after_dead && INSN_UID () > max_uid_cuid (after_dead (before_dead && after_dead && INSN_CUID () >= from_cuid && () (regno, where_dead (note != 0 && regno < FIRST_PSEUDO_REGISTER && () (XEXP () (deadregno + HARD_REGNO_NREGS () (regno, GET_MODE () (i deadregno i < deadend i ++ (i < regno || i >= ourend (where_dead (EXPR_LIST, REG_DEAD, gen_rtx (), REG_NOTES () (note == 0 && regno < FIRST_PSEUDO_REGISTER && HARD_REGNO_NREGS () > 1 (regno, GET_MODE () (i regno + 1 i < ourend i ++ (gen_rtx (), from_cuid, to_insn, & oldnotes (note != 0 && GET_MODE () == GET_MODE () (note, 1 (EXPR_LIST, REG_DEAD, x, *pnotes (GET_CODE () == SET (x (SET_SRC (), from_cuid, to_insn, pnotes (GET_CODE () == ZERO_EXTRACT || GET_CODE () == STRICT_LOW_PART || () (dest, from_cuid, to_insn, pnotes (GET_CODE () == SUBREG (dest (GET_CODE () == MEM (XEXP (), from_cuid, to_insn, pnotes (GET_CODE () == CLOBBER (code (code (i 0 i < len i ++ (fmt[i] == (j XVECLEN () - 1 j >= 0 j -- (XVECEXP (), from_cuid, to_insn, pnotes (fmt[i] == (XEXP (), from_cuid, to_insn, pnotes (x, body (GET_CODE () == SET (body (GET_CODE () == ZERO_EXTRACT (dest, 0 (GET_CODE () == STRICT_LOW_PART (XEXP () (GET_CODE () == SUBREG (target (GET_CODE () != REG (target (x (tregno >= FIRST_PSEUDO_REGISTER || regno >= FIRST_PSEUDO_REGISTER (tregno, GET_MODE () (regno, GET_MODE () (GET_CODE () == PARALLEL (i XVECLEN () - 1 i >= 0 i -- (reg_bitfield_target_p () (notes, from_insn, i3, i2, elim_i2, elim_i1 (note notes note note next_note (XEXP () && GET_CODE () == REG && REGNO () >= FIRST_PSEUDO_REGISTER (note, 0 (XEXP () (note, 1 (REG_NOTE_KIND () (reg_set_p () (from_insn != i3 ( ! () (reg_referenced_p () && ! () (note, REG_DEAD (from_insn == i3 && () (reg_mentioned_p () (i2 && reg_mentioned_p () (place (GET_CODE () != NOTE (XEXP (), REG_LIBCALL, NULL_RTX (from_insn (tem && place (tem, 0 (GET_CODE () != NOTE (XEXP (), REG_RETVAL, NULL_RTX (from_insn (tem && place (tem, 0 (from_insn && GET_CODE () == CALL_INSN && find_reg_fusage () (reg_referenced_p () (i2 != 0 && next_nonnote_insn () == i3 && reg_referenced_p () (XEXP () == elim_i2 || XEXP () == elim_i1 (place == i3 && i2 != 0 && GET_CODE () == REG && reg_n_refs[REGNO ()] == 2 && reg_referenced_p () (XEXP () (place == 0 (tem prev_nonnote_insn () place == 0 && tem && () tem prev_nonnote_insn () (reg_set_p () (tem (set != 0 && ! side_effects_p () && () (tem (REG_NOTES (), tem, tem, NULL_RTX, NULL_RTX, NULL_RTX (LOG_LINKS () (tem, NOTE (tem (tem (note, REG_UNUSED ( ! find_regno_note () (reg_referenced_p () || () (i2 && INSN_UID () <= max_uid_cuid && INSN_CUID () > INSN_CUID () && from_insn && INSN_CUID () > INSN_CUID () && reg_referenced_p () (place (place (links (REG_NOTE_KIND () == REG_DEAD && place == 0 && tem != 0 (gen_rtx (), tem (basic_block_end[this_basic_block - 1] == tem (place && REG_NOTE_KIND () == REG_DEAD (XEXP () (dead_or_set_p () || reg_bitfield_target_p () (reg_last_death[regno] != place (place && regno < FIRST_PSEUDO_REGISTER && HARD_REGNO_NREGS () > 1 (regno, GET_MODE () (i regno i < endregno i ++ ( ! refers_to_regno_p () && ! find_regno_fusage () (REG, reg_raw_mode[i], i (p place GET_CODE () == INSN && GET_CODE () == USE p PREV_INSN () (rtx_equal_p () (p (gen_rtx (), p (use_insn (EXPR_LIST, REG_DEAD, piece, REG_NOTES () (all_used (i regno i < endregno i ++ (dead_or_set_regno_p () ( ! all_used (i regno i < endregno i ++ (REG, reg_raw_mode[i], i (() && ! dead_or_set_p () && ! reg_bitfield_target_p () (place (EXPR_LIST, REG_DEAD, piece, REG_NOTES () ((place (note, 1 (place (place (() && GET_CODE () == REG (XEXP () (place2 (() && GET_CODE () == REG (XEXP () (place2 (GET_CODE (), REG_NOTE_KIND (), XEXP (), REG_NOTES () (links (link links link link next_link (link, 1 (GET_CODE () == NOTE || () == 0 (set (GET_CODE () == SUBREG || GET_CODE () == ZERO_EXTRACT || GET_CODE () == SIGN_EXTRACT || GET_CODE () == STRICT_LOW_PART (reg, 0 (insn NEXT_INSN () () insn NEXT_INSN () (GET_RTX_CLASS () == && reg_overlap_mentioned_p () (reg_referenced_p () (GET_CODE () == CALL_INSN && find_reg_fusage () (place (link2 LOG_LINKS () link2 link2 XEXP () (XEXP () == XEXP () (link2 == 0 (link, 1 (place (place (added_links_insn == 0 || INSN_CUID () > INSN_CUID () (file (file,, combine_attempts, combine_merges, combine_extras, combine_successes (file (file,, total_attempts, total_merges, total_extras, total_successes, <./cc/combine.c 3968>
  598 																																															find_single_use: <>
  599 																																															make_extraction: <>
  600 																																															gen_lowpart_for_combine: <>
  601 																																															CONSTANT_P: 118
  602 																																															register_operand: <>
  603 																																														reg_referenced_p: if (), <./cc/reorg.c 2297>
  604 																																														XEXP: 105
  605 																																														exact_log2:  () >= 0 (nzb (true_code == EQ && true_val == const0_rtx && () (reg_mentioned_p () (known_cond (), pc_rtx, pc_rtx, 0, 0 (reg_mentioned_p () (known_cond (), pc_rtx, pc_rtx, 0, 0 (XEXP (), swapped false true (XEXP (), swapped true false (x, 1 (x, 2 (cond (comparison_p && reversible_comparison_p () && () (true_code (XEXP (), gen_binary () (XEXP (), false (XEXP (), true (x, 0 (rtx_equal_p () && ! side_effects_p () (GET_MODE_CLASS () == MODE_INT && GET_CODE () == NEG && rtx_equal_p () && comparison_p && rtx_equal_p () && ! side_effects_p () (true_code (ABS, mode, mode, true (NEG, mode, mode, gen_unary () (() && comparison_p && rtx_equal_p () && rtx_equal_p () && ! side_effects_p () (true_code (SMAX, mode, true, false (SMIN, mode, true, false (UMAX, mode, true, false (UMIN, mode, true, false (comparison_p && mode != VOIDmode && ! side_effects_p () (true, SET (false, SET (cond, 0 (cond, 1 (() && rtx_equal_p () (t, 1 (t (() && rtx_equal_p () (t, 0 (t (GET_CODE () == SIGN_EXTEND && () && GET_CODE () == SUBREG && subreg_lowpart_p () && rtx_equal_p () && () (XEXP (), 1 (XEXP () (XEXP () (GET_CODE () == SIGN_EXTEND && () && GET_CODE () == SUBREG && subreg_lowpart_p () && rtx_equal_p () && () (XEXP (), 0 (XEXP () (XEXP () (GET_CODE () == ZERO_EXTEND && () && GET_CODE () == SUBREG && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT && subreg_lowpart_p () && rtx_equal_p () && () (XEXP (), 1 (XEXP () (XEXP () (GET_CODE () == ZERO_EXTEND && () && GET_CODE () == SUBREG && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT && subreg_lowpart_p () && rtx_equal_p () && () (XEXP (), 0 (XEXP () (XEXP () (z (gen_binary (), pc_rtx, pc_rtx, 0, 0 (MULT, m, temp, gen_binary () (temp, pc_rtx, pc_rtx, 0, 0 (op, m, gen_lowpart_for_combine (), temp (extend_op != NIL (extend_op, mode, m, temp (true_code == NE && XEXP () == const0_rtx && false == const0_rtx && GET_CODE () == CONST_INT && () (NULL_RTX, ASHIFT, mode, gen_lowpart_for_combine (), i (x (x (x (src (src (dest (GET_CODE () == PC && GET_CODE () == RETURN (GET_MODE_CLASS () == MODE_INT (src, mode, GET_MODE_MASK (), NULL_RTX, 0 (() && () != 0 && () && GET_RTX_CLASS () == && rtx_equal_p () (*cc_use (dest (GET_CODE () == COMPARE (src, 0 (src, 1 (old_code, & op0, & op1 (new_code, op0, op1 (compare_mode != GET_MODE () (dest (REG, compare_mode, regno (regno < FIRST_PSEUDO_REGISTER || () (regno >= FIRST_PSEUDO_REGISTER (regno_reg_rtx[regno], new_dest (SET_DEST (), new_dest (XEXP (), new_dest (new_code != old_code (*cc_use, gen_rtx_combine () (() && ! other_changed && op1 == const0_rtx && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT && exact_log2 () >= 0 (other_insn (() (*cc_use, old_code (XOR, GET_MODE (), op0, GEN_INT () (other_changed (op1 == const0_rtx && dest == cc0_rtx (SET_SRC (), op0 (GET_CODE () != COMPARE || GET_MODE () != compare_mode (SET_SRC (), gen_rtx_combine () (x (XEXP (), op0 (XEXP (), op1 (src, SET (SET_SRC (), src (GET_CODE () == SUBREG && subreg_lowpart_p () && GET_RTX_CLASS () != && () && () && ! () && () (SET_DEST (), gen_lowpart_for_combine () (SET_SRC (), SUBREG_REG () (x (x (GET_CODE () == SUBREG && subreg_lowpart_p () && LOAD_EXTEND_OP () != NIL && SUBREG_WORD () == 0 && () && GET_CODE () == MEM (SET_SRC (), gen_rtx_combine () (x (GET_CODE () != PC && GET_CODE () == IF_THEN_ELSE && GET_MODE_CLASS () == MODE_INT && () && XEXP () == const0_rtx && GET_MODE () == GET_MODE () && ! can_conditionally_move_p () && () && ! side_effects_p () (GET_CODE () == NE XEXP () XEXP () (GET_CODE () == NE XEXP () XEXP () (GET_CODE () == IOR && rtx_equal_p () (true, 1 (GET_CODE () == IOR && rtx_equal_p () (true, 0 (GET_CODE () == IOR && rtx_equal_p () (false, 1 (GET_CODE () == IOR && rtx_equal_p () (false, 0 (AND, GET_MODE (), XEXP (), true (AND, GET_MODE (), gen_unary (), false (SET_SRC (), gen_binary () (x (GET_CODE () == CLOBBER && XEXP () == const0_rtx (GET_CODE () == CLOBBER && XEXP () == const0_rtx (x (x, last (x (x, 0 (x, 1 (GET_CODE () (GET_CODE () == XOR && rtx_equal_p () && ! side_effects_p () (AND, mode, gen_unary (), op1 (GET_CODE () == XOR && rtx_equal_p () && ! side_effects_p () (AND, mode, gen_unary (), op1 (GET_CODE () == NOT && GET_CODE () == XOR && rtx_equal_p () && ! side_effects_p () (AND, mode, XEXP (), op1 (GET_CODE () == NOT && GET_CODE () == XOR && rtx_equal_p () && ! side_effects_p () (AND, mode, XEXP (), op1 (GET_CODE () == CONST_INT (x, mode, op0, INTVAL () (last && GET_CODE () == IOR && GET_CODE () == AND && GET_CODE () == CONST_INT && GET_CODE () == CONST_INT (IOR, mode, gen_binary (), op1 (GET_CODE () != AND (GET_RTX_CLASS () == || GET_RTX_CLASS () == (x, 0 (x, 1 (GET_CODE () == IOR && () && ! side_effects_p () && ! side_effects_p () (GET_CODE () == IOR || GET_CODE () == XOR (gen_binary () (GET_CODE () != AND (GET_CODE () == IOR || GET_CODE () == XOR (gen_binary () (GET_CODE () == NOT && GET_CODE () == XOR (gen_binary () (GET_CODE () == NOT && GET_CODE () == XOR (gen_binary () (GET_CODE () == CONST_INT && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT && () == 0 (GET_CODE () == AND && () && ! side_effects_p () && ! side_effects_p () (GET_CODE () == AND (gen_binary () (GET_CODE () != IOR (GET_CODE () == AND (gen_binary () (GET_CODE () != IOR (() && rtx_equal_p () && GET_CODE () == CONST_INT && GET_CODE () == CONST_INT && () (ROTATE, mode, XEXP (), () (GET_CODE () == CONST_INT && GET_CODE () == ASHIFTRT && GET_CODE () == PLUS && GET_CODE () == CONST_INT && GET_CODE () == CONST_INT && INTVAL () < HOST_BITS_PER_WIDE_INT (XEXP () (op1 (mask >> count == INTVAL () && () == 0 (XEXP (), GEN_INT () (GET_CODE () == NOT (op0, 0 (GET_CODE () == NOT (op1, 0 (num_negated == 2 (XEXP (), op0 (XEXP (), op1 (num_negated == 1 (NOT, mode, mode, gen_binary () (GET_CODE () == AND && rtx_equal_p () && ! side_effects_p () (AND, mode, gen_unary (), op1 (GET_CODE () == AND && rtx_equal_p () && ! side_effects_p () (AND, mode, gen_unary (), op1 (op1 == const1_rtx && GET_RTX_CLASS () == && reversible_comparison_p () (reverse_condition (), mode, XEXP (), XEXP () (op1 == const1_rtx && GET_CODE () == LSHIFTRT && GET_CODE () == CONST_INT && INTVAL () == GET_MODE_BITSIZE () - 1 (GE, mode, XEXP (), const0_rtx (GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT && () && op1 == const_true_rtx && GET_RTX_CLASS () == && reversible_comparison_p () (reverse_condition (), mode, XEXP (), XEXP () (x (GET_CODE () (GET_CODE () == CONST_INT (GET_MODE_SIZE () > UNITS_PER_WORD (GET_MODE () (len == 0 (GET_CODE () == CLOBBER (x, 0 (GET_CODE () != CONST_INT || GET_CODE () != CONST_INT || GET_MODE () == VOIDmode (XEXP () (XEXP () (len + pos > GET_MODE_BITSIZE () (XEXP (), gen_rtx () (BITS_BIG_ENDIAN (GET_MODE () (GET_MODE () (modewidth >= pos - len (NULL_RTX, unsignedp LSHIFTRT ASHIFTRT, GET_MODE (), simplify_shift_const (), modewidth - len (unsignedp && len < HOST_BITS_PER_WIDE_INT (NULL_RTX, GET_MODE (), simplify_shift_const (), () - 1 (GET_CODE () == CLOBBER (x (1 (GET_CODE () == STRICT_LOW_PART && GET_CODE () == SUBREG (XEXP () (GET_MODE () (GET_CODE () == ZERO_EXTRACT && GET_CODE () == CONST_INT (SET_DEST (), 0 (XEXP () (SET_DEST (), 2 (GET_CODE () == CONST_INT && INTVAL () + len > GET_MODE_BITSIZE () (USE, GET_MODE (), inner (BITS_BIG_ENDIAN (GET_CODE () == CONST_INT (GET_MODE_BITSIZE () - len - INTVAL () (GET_CODE () == MINUS && GET_CODE () == CONST_INT && () (pos, 0 (MINUS, GET_MODE (), GEN_INT (), pos (GET_CODE () == SUBREG && () (SET, VOIDmode, SUBREG_REG (), gen_lowpart_for_combine () (GET_CODE () == SUBREG && subreg_lowpart_p () (inner (inner (len < HOST_BITS_PER_WIDE_INT (() - 1 (SET, VOIDmode, copy_rtx (), gen_binary () (mode, inner, pos, pos_rtx, len, unsignedp, in_dest, in_compare (inner (len, MODE_INT, 1 (GET_CODE () == USE (inner, 0 (GET_CODE () == SUBREG && subreg_lowpart_p () (GET_CODE () == MEM (SUBREG_REG () (inner (inner (pos_rtx && GET_CODE () == CONST_INT (pos_rtx (tmode != BLKmode && ! () && () (GET_CODE () == MEM (BYTES_BIG_ENDIAN (GET_MODE_BITSIZE () - len - pos (MEM, tmode, plus_constant () (new (inner (new (inner (new (inner (GET_CODE () == REG (tmode != inner_mode (SUBREG, tmode, inner, () (inner, tmode, len >= HOST_BITS_PER_WIDE_INT GET_MODE_MASK () () - 1, NULL_RTX, 0 (in_dest (GET_CODE () == MEM new () (mode == tmode new gen_rtx_combine () (pos_rtx == 0 && pos == 0 && ! in_dest && ! in_compare && ! spans_byte && unsignedp ( ! spans_byte && () (in_dest (int (int (int ( ! in_dest && unsignedp (int (int (int ( ! in_dest && ! unsignedp (int (int (int (mode != VOIDmode && GET_MODE_SIZE () < GET_MODE_SIZE () (pos_rtx && GET_MODE () != VOIDmode && GET_MODE_SIZE () < GET_MODE_SIZE () (pos_rtx (GET_CODE () != MEM || () (BITS_BIG_ENDIAN (pos_rtx == 0 (MAX () - len - pos (MINUS, GET_MODE (), GEN_INT (), pos_rtx (wanted_mem_mode != VOIDmode && GET_MODE_SIZE () < GET_MODE_SIZE () && () (BYTES_BIG_ENDIAN && ! spans_byte && GET_MODE_SIZE () < GET_MODE_SIZE () (is_mode (inner_mode (pos_rtx == 0 (wanted_mem_mode (BYTES_BIG_ENDIAN != BITS_BIG_ENDIAN && ! spans_byte && is_mode != wanted_mem_mode (GET_MODE_SIZE () - GET_MODE_SIZE () - offset (offset != 0 || inner_mode != wanted_mem_mode (MEM, wanted_mem_mode, plus_constant () (newmem (inner (newmem (inner (newmem (inner (GET_CODE () != MEM (inner, extraction_mode, pos_rtx || len + orig_pos >= HOST_BITS_PER_WIDE_INT GET_MODE_MASK () () << orig_pos, NULL_RTX, 0 (pos_rtx != 0 && GET_MODE_SIZE () > GET_MODE_SIZE () (ZERO_EXTEND, pos_mode, pos_rtx (pos_rtx != 0 && GET_MODE_SIZE () < GET_MODE_SIZE () (pos_mode, pos_rtx (pos_rtx == 0 && orig_pos_rtx != 0 && INTVAL () == pos (pos_rtx == 0 (pos (unsignedp ZERO_EXTRACT SIGN_EXTRACT, extraction_mode, inner, GEN_INT (), pos_rtx ( ! in_dest (mode, new (x, count (x (x (code (GET_CODE () == CONST_INT && INTVAL () >= count (NULL_RTX, ASHIFT, mode, XEXP (), INTVAL () - count (() != 0 (code, mode, mode, tem (GET_CODE () == CONST_INT && () == 0 && () != 0 (code, mode, tem, GEN_INT () (x, in_code (x (x (mode (code == MEM || code == PLUS || code == MINUS MEM () COMPARE in_code == COMPARE SET in_code (code (in_code == MEM && GET_CODE () == CONST_INT && INTVAL () < HOST_BITS_PER_WIDE_INT && INTVAL () >= 0 (XEXP (), next_code (MULT, mode, new, GEN_INT () (GET_CODE () != CONST_INT (GET_CODE () == LSHIFTRT && () >= 0 (XEXP (), next_code (mode, new, 0, XEXP (), i, 1, 0, in_code == COMPARE (GET_CODE () == SUBREG && subreg_lowpart_p () && GET_CODE () == LSHIFTRT && () >= 0 (XEXP (), next_code (GET_MODE (), new, 0, XEXP (), i, 1, 0, in_code == COMPARE (() && GET_CODE () == LSHIFTRT && GET_CODE () == LSHIFTRT && () >= 0 (GET_CODE (), mode, gen_rtx (), gen_rtx () (new, in_code (GET_CODE () == ROTATE && GET_CODE () == CONST_INT && () >= 0 && i <= INTVAL () (XEXP (), next_code (mode, new, (), NULL_RTX, i, 1, 0, in_code == COMPARE (ashr_optab handlers[() mode]insn_code != CODE_FOR_nothing && () && GET_CODE () == LSHIFTRT && GET_CODE () == CONST_INT && INTVAL () >= 0 && INTVAL () < HOST_BITS_PER_WIDE_INT && mode_width <= HOST_BITS_PER_WIDE_INT (mode (XEXP () (() == 0 (XEXP (), gen_rtx_combine () (() >= 0 (mode, make_compound_operation (), 0, NULL_RTX, i, 1, 0, in_code == COMPARE (in_code == COMPARE && () >= 0 (mode, make_compound_operation (), i, NULL_RTX, 1, 1, 0, 1 (ashr_optab handlers[() mode]insn_code == CODE_FOR_nothing && lshr_optab handlers[() mode]insn_code != CODE_FOR_nothing && mode_width <= HOST_BITS_PER_WIDE_INT && () == 0 (ASHIFTRT, mode, make_compound_operation (), XEXP () (x, 0 (x, 1 (GET_CODE () == CONST_INT && GET_CODE () == ASHIFT && GET_CODE () == CONST_INT && INTVAL () >= INTVAL () (XEXP (), next_code (mode, new, INTVAL () - INTVAL (), NULL_RTX, mode_width - INTVAL (), code == LSHIFTRT, 0, in_code == COMPARE (GET_RTX_CLASS () != && ! () && GET_CODE () == CONST_INT && INTVAL () < HOST_BITS_PER_WIDE_INT && () != 0 (mode, make_compound_operation (), 0, NULL_RTX, mode_width - INTVAL (), code == LSHIFTRT, 0, in_code == COMPARE (SUBREG_REG (), in_code (GET_CODE () != GET_CODE () && GET_MODE_SIZE () < GET_MODE_SIZE () && subreg_lowpart_p () (tem, mode, GET_MODE_MASK (), NULL_RTX, 0 (GET_CODE () != SUBREG (newer, in_code (new (mode, new (x (code (i 0 i < GET_RTX_LENGTH () i ++ (fmt[i] == (XEXP (), next_code (XEXP (), new (m, plen (m & - m (pos < 0 (() + 1 (*plen <= 0 (x, mode, mask, reg, just_select (x (code == CALL (() mode GET_MODE () (() && GET_MODE_BITSIZE () < GET_MODE_BITSIZE () (x (op_mode (op_mode (op_mode (GET_MODE_BITSIZE () >= HOST_BITS_PER_WIDE_INT GET_MODE_MASK () () - 1 (HOST_WIDE_INT (x, mode ( ! just_select && () == 0 (GET_CODE () == CONST_INT (x (mode (width > 0 && width < HOST_BITS_PER_WIDE_INT && () != 0 (HOST_WIDE_INT (cval (GET_MODE_SIZE () < GET_MODE_SIZE () && () == 0 (mode, x (GET_MODE () == mode && code != SUBREG && () == 0 (code ( ! BITS_BIG_ENDIAN && () == 0 (XEXP (), mode, mask, reg, next_select (x (GET_CODE () != code (x, mode, mask, reg, next_select (reg != 0 && () (subreg_lowpart_p () && () (SUBREG_REG (), mode, mask, reg, next_select (GET_CODE () == CONST_INT (x, op_mode, XEXP (), mask & INTVAL () (GET_CODE () == AND && GET_CODE () == CONST_INT && INTVAL () == mask (x, 0 (GET_CODE () == AND && GET_CODE () == CONST_INT && GET_MODE_MASK () != mask && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT (INTVAL () | () (GET_MODE () (width > 0 && width < HOST_BITS_PER_WIDE_INT && () != 0 (HOST_WIDE_INT (AND, GET_MODE (), XEXP (), GEN_INT () (rtx_cost () < rtx_cost () (mode (width < HOST_BITS_PER_WIDE_INT && () != 0 (HOST_WIDE_INT (GET_CODE () == CONST_INT && exact_log2 () >= 0 && () == 0 && () != 0 (plus_constant (), mode, mask, reg, next_select (GET_CODE () == LSHIFTRT && GET_CODE () == CONST_INT && INTVAL () >= 0 && INTVAL () < HOST_BITS_PER_WIDE_INT && GET_CODE () == CONST_INT && () && () (() << INTVAL () (GET_CODE (), GET_MODE (), XEXP (), temp (LSHIFTRT, GET_MODE (), temp, XEXP () (x, mode, mask, reg, next_select (op_mode, force_to_mode () (op_mode, force_to_mode () (GET_CODE () == CONST_INT && () && () != 0 (INTVAL () & mask (op_mode != GET_MODE () || op0 != XEXP () || op1 != XEXP () (code, op_mode, op0, op1 ( ! () && ! () (GET_CODE () == CONST_INT && INTVAL () >= 0 && INTVAL () < GET_MODE_BITSIZE () && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT (XEXP () (op_mode, force_to_mode () (op_mode != GET_MODE () || op0 != XEXP () (code, op_mode, op0, XEXP () (GET_CODE () == CONST_INT && INTVAL () < HOST_BITS_PER_WIDE_INT && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT (x, 0 (XEXP () (GET_MODE_BITSIZE () > HOST_BITS_PER_WIDE_INT || () != 0 (x (inner, op_mode, mask, reg, next_select (GET_MODE () != op_mode || inner != XEXP () (LSHIFTRT, op_mode, inner, XEXP () (GET_CODE () == LSHIFTRT && GET_CODE () == CONST_INT && () && exact_log2 () >= 0 && () (LSHIFTRT, GET_MODE (), XEXP (), GEN_INT () (GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT && () (XEXP (), mode, mask, reg, next_select (GET_CODE () == CONST_INT && INTVAL () >= 0 && INTVAL () < HOST_BITS_PER_WIDE_INT (GET_MODE_BITSIZE () > HOST_BITS_PER_WIDE_INT (HOST_WIDE_INT (GET_MODE_BITSIZE () - INTVAL () < HOST_BITS_PER_WIDE_INT (XEXP () (GET_MODE () (GET_MODE () (XEXP () (() == 0 || () >= 0 (x, LSHIFTRT, GET_MODE (), XEXP (), i < 0 INTVAL () GET_MODE_BITSIZE () - 1 - i (GET_CODE () != ASHIFTRT (x, mode, mask, reg, next_select (mask == 1 (LSHIFTRT, GET_MODE (), XEXP (), XEXP () (() && GET_CODE () == CONST_INT && INTVAL () >= 0 && () && GET_CODE () == ASHIFT && GET_CODE () == CONST_INT && INTVAL () == INTVAL () (XEXP (), mode, mask, reg, next_select (GET_CODE () == CONST_INT && INTVAL () >= 0 (code == ROTATE ROTATERT ROTATE, GET_MODE (), GEN_INT (), XEXP () (temp && GET_CODE () == CONST_INT (XEXP (), force_to_mode () (mask == 1 (XEXP (), mode, mask, reg, just_select (GET_CODE () == LSHIFTRT && GET_CODE () == CONST_INT && INTVAL () >= 0 && () && INTVAL () < HOST_BITS_PER_WIDE_INT (mask << INTVAL () (XOR, GET_MODE (), XEXP (), temp (LSHIFTRT, GET_MODE (), temp, XEXP () (x, mode, mask, reg, next_select (op_mode, force_to_mode () (op_mode != GET_MODE () || op0 != XEXP () (code, op_mode, op_mode, op0 (() == 0 && XEXP () == const0_rtx && () == 0 (XEXP (), mode, mask, reg, next_select (XEXP (), gen_lowpart_for_combine () (XEXP (), gen_lowpart_for_combine () (mode, x (x, ptrue, pfalse (x (x (mode (GET_RTX_CLASS () == && () != 0 (code, mode, GET_MODE (), true0 (code, mode, GET_MODE (), false0 (code == COMPARE (GET_RTX_CLASS () == || GET_RTX_CLASS () == || GET_RTX_CLASS () == (XEXP (), & true0, & false0 (XEXP (), & true1, & false1 (() && ! () (code, mode, true0, true1 (code, mode, false0, false1 (() && GET_CODE () == MULT && GET_CODE () == MULT (XEXP (), 1 (XEXP (), 1 (XEXP (), 0 (XEXP (), 0 (GET_RTX_CLASS () == && GET_RTX_CLASS () == && reversible_comparison_p () && () && ! side_effects_p () (MULT, mode, op0, const_true_rtx (MULT, mode, (), const_true_rtx (() && GET_CODE () == MULT && GET_CODE () == MULT (XEXP (), 0 (XEXP (), 0 (GET_RTX_CLASS () == && GET_RTX_CLASS () == && reversible_comparison_p () && () && ! side_effects_p () (code == IF_THEN_ELSE (x, 0 (x, 1 (x, 2 (GET_CODE () == NE && XEXP () == const0_rtx (cond0, 0 (GET_CODE () == EQ && XEXP () == const0_rtx (x, 2 (x, 1 (cond0, 0 (code == SUBREG && GET_MODE_CLASS () == MODE_INT && GET_MODE_CLASS () == MODE_INT && GET_MODE_SIZE () <= GET_MODE_SIZE () && 0 != () (true0, mode, GET_MODE_MASK (), NULL_RTX, 0 (false0, mode, GET_MODE_MASK (), NULL_RTX, 0 (CONSTANT_P () || () (num_sign_bit_copies () == size (exact_log2 () >= 0 (nz (x, cond, reg, val (x (side_effects_p () (cond == EQ && rtx_equal_p () (code == ABS && rtx_equal_p () && val == const0_rtx (cond (x, 0 (NEG, GET_MODE (), GET_MODE (), XEXP () (GET_RTX_CLASS () == || GET_RTX_CLASS () == (rtx_equal_p () (cond (rtx_equal_p () && rtx_equal_p () (GET_RTX_CLASS () == (comparison_dominates_p () const_true_rtx () (code == SMAX || code == SMIN || code == UMIN || code == UMAX (code == UMIN || code == UMAX (code == SMAX || code == UMAX (cond (cond (x, 1 (x, 0 (x, 1 (x, 0 (code (i GET_RTX_LENGTH () - 1 i >= 0 i -- (fmt[i] == (XEXP (), known_cond () (fmt[i] == (j XVECLEN () - 1 j >= 0 j -- (XVECEXP (), known_cond () (x (x (x (GET_CODE () == AND && GET_CODE () == ROTATE && GET_CODE () == CONST_INT && INTVAL () == -2 && () (VOIDmode, dest, 0, XEXP (), 1, 1, 1, 0 (SET, VOIDmode, assign, const0_rtx (GET_CODE () == AND && GET_CODE () == SUBREG && subreg_lowpart_p () && () && GET_CODE () == ROTATE && INTVAL () == -2 && () (VOIDmode, dest, 0, XEXP (), 1, 1, 1, 0 (SET, VOIDmode, assign, const0_rtx (GET_CODE () == IOR && GET_CODE () == ASHIFT && XEXP () == const1_rtx && () (VOIDmode, dest, 0, XEXP (), 1, 1, 1, 0 (SET, VOIDmode, assign, const1_rtx (GET_CODE () == IOR && GET_CODE () == AND && GET_CODE () == CONST_INT && () (XEXP () (src, 1 (GET_CODE () == IOR && GET_CODE () == AND && GET_CODE () == CONST_INT && () (XEXP () (src, 0 (c1 ^ GET_MODE_MASK (), & len (pos < 0 || pos + len > GET_MODE_BITSIZE () || () (VOIDmode, dest, pos, NULL_RTX, len, 1, 1, 0 (GET_CODE () == STRICT_LOW_PART GET_MODE () GET_MODE () (simplify_shift_const (), mode, GET_MODE_BITSIZE () >= HOST_BITS_PER_WIDE_INT GET_MODE_MASK () () - 1, dest, 0 (SET, VOIDmode, assign, src (x (x (FLOAT_MODE_P () (code != IOR && code != AND && code != XOR && code != PLUS && code != MINUS (x, 0 (x, 1 (GET_RTX_CLASS () == || GET_RTX_CLASS () == (lhs (rhs (lhs (inner_code != GET_CODE () (inner_code (code == PLUS || code == MINUS (code != PLUS && code != MINUS (GET_MODE () != GET_MODE () || SUBREG_WORD () != SUBREG_WORD () || ! subreg_lowpart_p () || () || () || GET_MODE_SIZE () > UNITS_PER_WORD (code, GET_MODE (), SUBREG_REG (), SUBREG_REG () (GET_MODE (), tem (GET_RTX_CLASS () == && rtx_equal_p () (lhs, 0 (lhs, 1 (rhs, 1 (GET_RTX_CLASS () == && rtx_equal_p () (lhs, 0 (lhs, 1 (rhs, 0 (GET_RTX_CLASS () == && rtx_equal_p () (lhs, 1 (lhs, 0 (rhs, 1 (rtx_equal_p () (lhs, 1 (lhs, 0 (rhs, 0 (code, GET_MODE (), lhs, rhs (code == XOR && inner_code == IOR (NOT, GET_MODE (), GET_MODE (), other (inner_code, GET_MODE (), apply_distributive_law (), other (x, mode, varop, constop (mode (varop, mode, constop, NULL_RTX, 0 (GET_CODE () == CLOBBER || GET_CODE () == CONST_INT (varop, mode (mode (BITS_PER_WORD < HOST_BITS_PER_WIDE_INT && BITS_PER_WORD == width && () (() () << width (constop == 0 (GET_CODE () == NEG && nonzero_bits () == 1 && () >= 0 (NULL_RTX, ASHIFT, mode, XEXP (), i (GET_CODE () == IOR || GET_CODE () == XOR (mode, apply_distributive_law () (x && GET_CODE () == SUBREG && GET_MODE () == mode && SUBREG_REG () == varop (x, 0 (mode, varop (GET_CODE () == CLOBBER (constop == nonzero (x == 0 || GET_CODE () != AND || GET_MODE () != mode (AND, mode, varop, GEN_INT () (GET_CODE () != CONST_INT || INTVAL () != constop (XEXP (), GEN_INT () (XEXP (), varop (x, mode (mode (mode (FLOAT_MODE_P () || FLOAT_MODE_P () (GET_MODE_BITSIZE () > mode_width (x (mode (mode (mode_width > HOST_BITS_PER_WIDE_INT (GET_MODE () != VOIDmode && GET_MODE () != mode && GET_MODE_BITSIZE () <= BITS_PER_WORD && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT && GET_MODE_BITSIZE () > GET_MODE_BITSIZE () (x, GET_MODE () (mode (GET_MODE () (x (code (POINTERS_EXTEND_UNSIGNED && GET_MODE () == Pmode && REGNO_POINTER_FLAG () (ptr_mode (x == stack_pointer_rtx (PUSH_ROUNDING (), sp_alignment (sp_alignment - 1 (reg_last_set_value[REGNO ()] != 0 && reg_last_set_mode[REGNO ()] == mode && () && INSN_CUID () < subst_low_cuid (x (x (tem (GET_MODE_BITSIZE () < mode_width && GET_CODE () == CONST_INT && INTVAL () > 0 && 0 != () (INTVAL () | () (tem, mode (nonzero_sign_valid && reg_nonzero_bits[REGNO ()](x (INTVAL () > 0 && mode_width < BITS_PER_WORD && 0 != () (INTVAL () | () (x (LOAD_EXTEND_OP () == ZERO_EXTEND (GET_MODE () (GET_MODE_CLASS () == MODE_INT && mode_width <= HOST_BITS_PER_WIDE_INT (num_sign_bit_copies () == GET_MODE_BITSIZE () (GET_MODE_SIZE () < mode_width (GET_MODE_MASK () & GET_MODE_MASK () (num_sign_bit_copies () == GET_MODE_BITSIZE () (nonzero_bits () & GET_MODE_MASK () (XEXP (), mode (GET_MODE () != VOIDmode (GET_MODE () (XEXP (), mode (GET_MODE () != VOIDmode (GET_MODE () (inner_nz & () (GET_MODE_MASK () & GET_MODE_MASK () (nonzero_bits () & nonzero_bits () (nonzero_bits () | nonzero_bits () (XEXP (), mode (XEXP (), mode (nz0 (nz1 (nz0 & - nz0 (nz1 & - nz1 (nz0 & () (nz1 & () (code (width0, width1 (low0, low1 (low0, low1 ( ! op0_maybe_minusp && ! op1_maybe_minusp ( ! op0_maybe_minusp && ! op1_maybe_minusp (width0, width1 (low0, low1 (width0, width1 (low0, low1 (result_width < mode_width (() 1 << result_width (result_low > 0 (() - 1 (GET_CODE () == CONST_INT && INTVAL () < HOST_BITS_PER_WIDE_INT (() 1 << INTVAL () (SUBREG_PROMOTED_VAR_P () && SUBREG_PROMOTED_UNSIGNED_P () (GET_MODE_MASK () & nonzero_bits () (GET_MODE_BITSIZE () <= BITS_PER_WORD && () (SUBREG_REG (), mode (GET_MODE_SIZE () > GET_MODE_SIZE () (GET_MODE_MASK () & GET_MODE_MASK () (GET_CODE () == CONST_INT && INTVAL () >= 0 && INTVAL () < HOST_BITS_PER_WIDE_INT (x (inner_mode (XEXP () (inner_mode (XEXP (), mode (mode_width > width (op_nonzero & nonzero & mode_mask (code == LSHIFTRT (code == ASHIFTRT (inner & () (() - 1 (width - count (code == ASHIFT (() & mode_mask (outer | inner (() 1 << () (nonzero_bits () | nonzero_bits () (x, mode (x (mode == VOIDmode (x (mode == VOIDmode || FLOAT_MODE_P () || FLOAT_MODE_P () (mode (bitwidth < GET_MODE_BITSIZE () (1, () (GET_MODE () != VOIDmode && bitwidth > GET_MODE_BITSIZE () (code ( ! POINTERS_EXTEND_UNSIGNED && GET_MODE () == Pmode && mode == Pmode && REGNO_POINTER_FLAG () (Pmode (ptr_mode (reg_last_set_value[REGNO ()] != 0 && reg_last_set_mode[REGNO ()] == mode && () && INSN_CUID () < subst_low_cuid (x (x (tem != 0 (tem, mode (nonzero_sign_valid && reg_sign_bit_copies[REGNO ()] != 0 (x (LOAD_EXTEND_OP () == SIGN_EXTEND (1, bitwidth - GET_MODE_BITSIZE () + 1 (x (mode (bitwidth <= HOST_BITS_PER_WIDE_INT && () != 0 (nonzero (mode (nonzero == 0 bitwidth bitwidth - floor_log2 () - 1 (SUBREG_PROMOTED_VAR_P () && ! SUBREG_PROMOTED_UNSIGNED_P () (bitwidth - GET_MODE_BITSIZE () + 1, num_sign_bit_copies () (bitwidth <= GET_MODE_BITSIZE () (SUBREG_REG (), VOIDmode (1, () (() && LOAD_EXTEND_OP () == SIGN_EXTEND (SUBREG_REG (), mode (GET_CODE () == CONST_INT (1, bitwidth - INTVAL () (bitwidth - GET_MODE_BITSIZE () + num_sign_bit_copies () (XEXP (), VOIDmode (1, () (XEXP (), mode (GET_CODE () == CONST_INT && INTVAL () >= 0 && INTVAL () < bitwidth (XEXP (), mode (1, num0 - () (XEXP (), mode (nonzero == 1 (XEXP (), mode (num0 > 1 && bitwidth <= HOST_BITS_PER_WIDE_INT && () (XEXP (), mode (XEXP (), mode (num0, num1 (code == PLUS && XEXP () == constm1_rtx && bitwidth <= HOST_BITS_PER_WIDE_INT (XEXP (), mode (() == 0 (nonzero == 1 || nonzero == 0 bitwidth bitwidth - floor_log2 () - 1 (XEXP (), mode (XEXP (), mode (1, MIN () - 1 (XEXP (), mode (XEXP (), mode (bitwidth - num0 (bitwidth - num1 (result > 0 && bitwidth <= HOST_BITS_PER_WIDE_INT && () && () (1, result (XEXP (), mode (XEXP (), mode (XEXP (), mode (result > 1 && bitwidth <= HOST_BITS_PER_WIDE_INT && () != 0 (XEXP (), mode (result > 1 && bitwidth <= HOST_BITS_PER_WIDE_INT && () != 0 (XEXP (), mode (GET_CODE () == CONST_INT && INTVAL () > 0 (bitwidth, num0 + INTVAL () (GET_CODE () != CONST_INT || INTVAL () < 0 || INTVAL () >= bitwidth (XEXP (), mode (1, num0 - INTVAL () (XEXP (), mode (XEXP (), mode (num0, num1 (bitwidth > HOST_BITS_PER_WIDE_INT (x, mode (nonzero & () 1 bitwidth - floor_log2 () - 1 (x, mode, unsignedp (nonzero_sign_valid == 0 (unsignedp () num_sign_bit_copies () - 1 (pop0, pconst0, op1, const1, mode, pcomp_p (mode (mode (mode (op0 == AND (op1 == NIL || op0 == SET (op0 == NIL (op0 == op1 (op0 (op0 == PLUS || op1 == PLUS || op0 == NEG || op1 == NEG (const0 != const1 (op0 (op1 == AND (op1 == AND (op1 == IOR (mode (const0 == 0 && () (const0 == 0 && op0 == AND (const0 == GET_MODE_MASK () && op0 == AND (BITS_PER_WORD < HOST_BITS_PER_WIDE_INT && BITS_PER_WORD == width && () (() () << width (x, code, result_mode, varop, count (GET_MODE_SIZE () + () (count < 0 || count > GET_MODE_BITSIZE () (x (code, mode, varop, GEN_INT () (count != 0 (GET_CODE () == CLOBBER (complement_p (code == ROTATERT (result_mode (code == ASHIFTRT || code == LSHIFTRT || code == ROTATE result_mode mode (count > GET_MODE_BITSIZE () - 1 (code == ASHIFTRT (shift_mode (code == ROTATE || code == ROTATERT (shift_mode (count < 0 ((code == ASHIFTRT && () (code == ASHIFTRT && () (shift_mode (GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT && code == ASHIFTRT && () (GET_CODE () (varop (new != varop (() && ! mode_dependent_address_p () && ! MEM_VOLATILE_P () && () != BLKmode (BYTES_BIG_ENDIAN (MEM, tmode, XEXP () (MEM, tmode, plus_constant () (new (varop (new (varop (new (varop (code == ASHIFTRT SIGN_EXTEND ZERO_EXTEND, mode, new (() && () != BLKmode && tmode == GET_MODE () (BITS_BIG_ENDIAN (varop, 0 (XEXP () (XEXP (), plus_constant () (code == ASHIFTRT SIGN_EXTEND ZERO_EXTEND, mode, new (subreg_lowpart_p () && () && () (varop (GET_MODE_SIZE () > GET_MODE_SIZE () (varop (GET_CODE () == CONST_INT && exact_log2 () >= 0 (ASHIFT, GET_MODE (), XEXP (), GEN_INT () (GET_CODE () == CONST_INT && exact_log2 () >= 0 (LSHIFTRT, GET_MODE (), XEXP (), GEN_INT () (code == LSHIFTRT && count == GET_MODE_BITSIZE () - 1 (varop, 0 (GET_CODE () == CONST_INT && INTVAL () >= 0 && INTVAL () < GET_MODE_BITSIZE () && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT (varop (XEXP () (code == ASHIFT && first_code == ASHIFTRT && () == count (GET_MODE_MASK () & () (NULL_RTX, result_mode, XEXP (), mask (NULL_RTX, ASHIFT, result_mode, varop, count (code == ASHIFTRT && first_code == ASHIFT && GET_MODE () == shift_mode && () (count < 0 (varop, 0 (code == first_code (GET_MODE () != result_mode && () (varop, 0 (code == ASHIFTRT || () || GET_MODE_BITSIZE () > HOST_BITS_PER_WIDE_INT || () (nonzero_bits () (code, result_mode, mask_rtx, GEN_INT () (mask_rtx == 0 || GET_CODE () != CONST_INT || ! merge_outer_ops () (() == () (count > 0 && () (count < 0 (varop, 0 (GET_CODE () == code && GET_CODE () != CONST_INT && 0 != () (code, mode, new, XEXP () (XOR, mode, XEXP (), GEN_INT () (GET_CODE () == IOR && GET_CODE () == PLUS && XEXP () == constm1_rtx && () && () && count == GET_MODE_BITSIZE () - 1 && rtx_equal_p () (LE, GET_MODE (), XEXP (), const0_rtx (STORE_FLAG_VALUE == 1 code == ASHIFTRT code == LSHIFTRT (NEG, GET_MODE (), varop (GET_CODE () == CONST_INT && () != 0 && GET_CODE () == CONST_INT && merge_outer_ops () (varop, 0 (NULL_RTX, code, shift_mode, XEXP (), count (NULL_RTX, code, shift_mode, XEXP (), count (GET_CODE (), shift_mode, lhs, rhs (varop (code == LSHIFTRT && XEXP () == const0_rtx && GET_MODE () == result_mode && count == GET_MODE_BITSIZE () - 1 && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT && () && nonzero_bits () == 1 && merge_outer_ops () (varop, 0 (code == LSHIFTRT && count == GET_MODE_BITSIZE () - 1 && nonzero_bits () == 1 (varop, 0 (code == ASHIFT && merge_outer_ops () (varop, 0 (code == LSHIFTRT && count == GET_MODE_BITSIZE () - 1 && XEXP () == constm1_rtx && nonzero_bits () == 1 && merge_outer_ops () (varop, 0 (() && count < HOST_BITS_PER_WIDE_INT && nonzero_bits () >> count == 0 && () == 0 (varop, 0 (() && count < HOST_BITS_PER_WIDE_INT && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT && 0 == () && 0 == () (varop, 1 (code == ASHIFT && GET_CODE () == CONST_INT && () != 0 && GET_CODE () == CONST_INT && merge_outer_ops () (varop, 0 (GET_CODE () == ASHIFTRT && count == GET_MODE_BITSIZE () - 1 && () && () && GET_CODE () == CONST_INT && INTVAL () == count && rtx_equal_p () (GT, GET_MODE (), XEXP (), const0_rtx (STORE_FLAG_VALUE == 1 code == ASHIFTRT code == LSHIFTRT (NEG, GET_MODE (), varop (code == ASHIFTRT || code == LSHIFTRT || code == ROTATE result_mode mode (x && GET_RTX_CLASS () == && GET_CODE () == CONST_INT && INTVAL () == count (x, 1 (count (x && GET_CODE () == SUBREG && GET_MODE () == shift_mode && SUBREG_REG () == varop (x, 0 (GET_MODE () != shift_mode (shift_mode, varop (GET_CODE () == CLOBBER (code, shift_mode, varop, const_rtx (new != 0 (x == 0 || GET_CODE () != code || GET_MODE () != shift_mode (code, shift_mode, varop, const_rtx (XEXP (), varop (XEXP (), const_rtx (outer_op != NIL && GET_CODE () == code && GET_CODE () == CONST_INT (x, code, shift_mode, XEXP (), INTVAL () (orig_code == LSHIFTRT && result_mode != shift_mode (NULL_RTX, shift_mode, x, GET_MODE_MASK () >> orig_count (result_mode, x (complement_p (NOT, result_mode, result_mode, x (outer_op != NIL (GET_MODE_BITSIZE () < HOST_BITS_PER_WIDE_INT (result_mode (result_mode (BITS_PER_WORD < HOST_BITS_PER_WIDE_INT && BITS_PER_WORD == width && () (() () << width (outer_op == AND (NULL_RTX, result_mode, x, outer_const (outer_op == SET (outer_const (GET_RTX_CLASS () == (outer_op, result_mode, result_mode, x (outer_op, result_mode, x, GEN_INT () (pnewpat, insn, pnotes, padded_scratches (GET_CODE () == PARALLEL (i XVECLEN () - 1 i >= 0 i -- (GET_CODE () == CLOBBER && XEXP () == const0_rtx (pat, insn, & num_clobbers_to_add (insn_code_number < 0 && ! check_asm_operands () && GET_CODE () == PARALLEL (pos 0, i 0 i < XVECLEN () i ++ (GET_CODE () != CLOBBER (i != pos (XVECEXP (), XVECEXP () (XVECLEN (), pos (pos == 1 (pat, 0, 0 (pat, insn, & num_clobbers_to_add (num_clobbers_to_add (PARALLEL, VOIDmode, gen_rtvec () (GET_CODE () == PARALLEL (i 0 i < XVECLEN () i ++ (newpat, 0, i (pat, 0, i (newpat, 0, 0 (newpat, insn_code_number (i XVECLEN () - num_clobbers_to_add i < XVECLEN () i ++ (GET_CODE () == REG && ! reg_dead_at_p () (GET_CODE () == SCRATCH (*padded_scratches (EXPR_LIST, REG_UNUSED, XEXP (), notes (mode, x (GET_MODE () == mode (GET_MODE_SIZE () > UNITS_PER_WORD && ! () (CLOBBER, GET_MODE (), const0_rtx (GET_CODE () == SUBREG && GET_CODE () == MEM (x (GET_MODE () == mode (mode, x (result != 0 && GET_CODE () == SUBREG && GET_CODE () == REG && REGNO () >= FIRST_PSEUDO_REGISTER && () (SUBREG_REG () (result (GET_CODE () == MEM (MEM_VOLATILE_P () || mode_dependent_address_p () (CLOBBER, GET_MODE (), const0_rtx (GET_MODE_SIZE () < GET_MODE_SIZE () (SUBREG, mode, x, 0 (WORDS_BIG_ENDIAN (MAX () - MAX () (BYTES_BIG_ENDIAN (MIN () - MIN () (MEM, mode, plus_constant () (new (x (new (x (new (x (GET_RTX_CLASS () == (GET_CODE (), mode, XEXP (), XEXP () (WORDS_BIG_ENDIAN && GET_MODE_SIZE () > UNITS_PER_WORD (() / UNITS_PER_WORD (SUBREG, mode, x, word (() (p, mode (p, enum rtx_code (p, enum machine_mode (code (code (n_args == 0 || n_args > 3 ((j 0 j < n_args j ++ (*fmt ++ != ((p, rtx (i previous_num_undos i < undobuf num_undo i ++ ( ! undobuf undo[i]is_int && GET_CODE () == code && GET_MODE () == mode (j 0 j < n_args j ++ (XEXP () != args[j](j == n_args (code (rt, mode (rt, 0 (n_args > 1 (rt, 1 (n_args > 2 (rt, 2 (code, mode, op0, op1 (GET_RTX_CLASS () == && () (GET_RTX_CLASS () == (op0 (GET_CODE () == COMPARE && op1 == const0_rtx (op0, 1 (op0, 0 (op0 (op_mode == VOIDmode (op1 (code, op_mode, op0, op1 (code, mode, op0, op1 (result (GET_RTX_CLASS () == && () (code, mode, op1, op0 (code, mode, op0, op1 (code, mode, op0_mode, op0 (code, mode, op0, op0_mode (result (code, mode, op0 (code, pop0, pop1 (1 (code != GTU && code != GEU && code != LTU && code != LEU && GET_CODE () == ASHIFTRT && GET_CODE () == ASHIFTRT && GET_CODE () == ASHIFT && GET_CODE () == ASHIFT && GET_CODE () == SUBREG && GET_CODE () == SUBREG && () && GET_CODE () == CONST_INT && GET_CODE () == CONST_INT && GET_CODE () == CONST_INT && GET_CODE () == CONST_INT && INTVAL () == INTVAL () && INTVAL () == INTVAL () && INTVAL () == INTVAL () && () (XEXP () (XEXP () (GET_CODE () == GET_CODE () && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT && () && GET_CODE () == CONST_INT && INTVAL () >= 0 && INTVAL () < HOST_BITS_PER_WIDE_INT && XEXP () == XEXP () (op0 (mode (XEXP () (GET_CODE () == LSHIFTRT || GET_CODE () == ASHIFTRT (mask >> shift_count (GET_CODE () == ASHIFT (mask & () (() == 0 && () == 0 (op0, 0 (op1, 0 (GET_CODE () == AND && GET_CODE () == AND && GET_CODE () == CONST_INT && GET_CODE () == CONST_INT (op0, 0 (op1, 0 (XEXP () (XEXP () (GET_CODE () == SUBREG && GET_CODE () == SUBREG && () && () && () && () && () (inner_op0 (inner_op1 (code (c0 == c1 (tmode GET_CLASS_NARROWEST_MODE () tmode != GET_MODE () tmode GET_MODE_WIDER_MODE () (c0 == GET_MODE_MASK () (tmode, inner_op0 (tmode, inner_op1 (code ( ! changed (() || () (op0, 0 (op1, 0 (code (CONSTANT_P () (code (GET_CODE () == CONST_INT (op0 (mode (mode (GET_MODE_CLASS () != MODE_INT && ! () (op1 (mode_width <= HOST_BITS_PER_WIDE_INT (const_op && () && mode_width <= HOST_BITS_PER_WIDE_INT && exact_log2 () >= 0 && nonzero_bits () == const_op (code == EQ || code == GE || code == GEU NE EQ (const_op == -1 && () && num_sign_bit_copies () == mode_width (code == EQ || code == LE || code == GEU NE EQ (code (const_op > 0 (const_op (const_op < 0 (const_op (const_op == 0 && mode_width <= HOST_BITS_PER_WIDE_INT && () == 0 (const_op > 0 (const_op (const_op < 0 (const_op (const_op == 0 && mode_width <= HOST_BITS_PER_WIDE_INT && () == 0 (const_op > 0 (const_op (const_op == () 1 << () (const_op == 0 (const_op == () - 1 (const_op > 1 (const_op (const_op == () 1 << () (const_op == 0 (const_op == () - 1 (code == EQ || code == NE (() && const_op == 0 (code == LTU || code == LEU || code == GTU || code == LEU (sign_bit_comparison_p && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT (op0, mode, (), NULL_RTX, 0 (GET_CODE () (GET_CODE () == CONST_INT && XEXP () == const1_rtx && equality_comparison_p && const_op == 0 && () >= 0 && () (BITS_BIG_ENDIAN (GET_MODE_BITSIZE () - 1 - i (op0, 2 (i (code (op0 (tem != op0 (equality_comparison_p && () != 0 (op0, 0 (sign_bit_comparison_p (op0, 0 (code == GE LT GE (equality_comparison_p && () != 0 (op0, 0 (const_op != 0 (sign_bit_comparison_p && () (op0, 0 (code == LT NE EQ (num_sign_bit_copies () >= 2 (op0, 0 (code (equality_comparison_p && GET_CODE () == CONST_INT && () != 0 (op0, 0 (const_op == 0 && sign_bit_comparison_p && GET_CODE () == CONST_INT && mode_width <= HOST_BITS_PER_WIDE_INT (NULL_RTX, mode, XEXP (), () (code == LT NE EQ (const_op == 0 && equality_comparison_p (op0, 0 ( ! unsigned_comparison_p && () && () (op0, 0 (mode_width <= HOST_BITS_PER_WIDE_INT && subreg_lowpart_p () && GET_CODE () == PLUS && GET_CODE () == CONST_INT && INTVAL () < 0 && () && () const_op < GET_MODE_MASK () / 2 && () (op0 (subreg_lowpart_p () && GET_MODE_BITSIZE () < mode_width (() && () && () (op0, 0 (equality_comparison_p && 0 != () (op0, 0 (const_op == 0 && XEXP () == constm1_rtx && GET_CODE () == ABS && sign_bit_comparison_p (XEXP (), 0 (code == LT EQ NE (equality_comparison_p && 0 != () (op0, 0 (equality_comparison_p && 0 != () (op0, 1 (sign_bit_comparison_p && GET_CODE () == ASHIFTRT && GET_CODE () == CONST_INT && INTVAL () == mode_width - 1 && rtx_equal_p () (op0, 1 (code == GE LE GT (equality_comparison_p && 0 != () (op0, 0 (const_op != 0 || XEXP () == cc0_rtx || GET_MODE_CLASS () == MODE_CC (GET_CODE () == COMPARE (XEXP (), 0 (XEXP (), 1 (op0, 0 (op0, 1 (code == NE || () || () (code == LT || code == NE GET_CODE () reverse_condition () (sign_bit_comparison_p && GET_CODE () == PLUS && XEXP () == constm1_rtx && rtx_equal_p () (op0, 1 (code == GE GT LE (const_op == 0 && equality_comparison_p && GET_CODE () == ASHIFT && XEXP () == const1_rtx (op0, mode, gen_rtx_combine (), () 1 (const_op == 0 && equality_comparison_p && mode_width <= HOST_BITS_PER_WIDE_INT && GET_CODE () == CONST_INT && GET_CODE () == LSHIFTRT && GET_CODE () == CONST_INT && INTVAL () >= 0 && INTVAL () < HOST_BITS_PER_WIDE_INT (() << INTVAL () (() == 0 && () (XEXP (), 0 (equality_comparison_p && const_op == 0 && GET_CODE () == CONST_INT && mode_width <= HOST_BITS_PER_WIDE_INT && () (op0, 0 (code == EQ GE LT (() && GET_CODE () == CONST_INT && () >= 0 && const_op >> i == 0 && () != BLKmode (tmode, XEXP () (GET_CODE () == CONST_INT && INTVAL () >= 0 && () && () && mode_width <= HOST_BITS_PER_WIDE_INT && () == 0 (XEXP () (const_op (op0, 0 (sign_bit_comparison_p && GET_CODE () == CONST_INT && mode_width <= HOST_BITS_PER_WIDE_INT (NULL_RTX, mode, XEXP (), () (code == LT NE EQ (const_op == 0 && equality_comparison_p && GET_CODE () == CONST_INT && INTVAL () == mode_width - 1 (NULL_RTX, mode, XEXP (), () 1 (equality_comparison_p && const_op == 0 && GET_CODE () == CONST_INT (NULL_RTX, LSHIFTRT, mode, XEXP (), INTVAL () ( ! unsigned_comparison_p && GET_CODE () == CONST_INT && GET_CODE () == ASHIFT && XEXP () == XEXP () && () != BLKmode && () (tmode, XEXP () (GET_CODE () == CONST_INT && INTVAL () >= 0 && INTVAL () < HOST_BITS_PER_WIDE_INT && mode_width <= HOST_BITS_PER_WIDE_INT && () == 0 && () (XEXP () (const_op (op0, 0 (const_op == 0 && () && GET_CODE () == CONST_INT && INTVAL () == mode_width - 1 (op0, 0 (code == NE || code == GT LT GE (op0, op1 == const0_rtx COMPARE SET (op1, SET (GET_CODE () == SUBREG && subreg_lowpart_p () && GET_MODE_CLASS () == MODE_INT && () && () (op0 (GET_MODE (), op1 (GET_CODE () == SUBREG && subreg_lowpart_p () && GET_MODE_CLASS () == MODE_INT && () && () && () == 0 && () (op0 (op0 (mode != VOIDmode && GET_MODE_CLASS () == MODE_INT && GET_MODE_SIZE () < UNITS_PER_WORD && cmp_optab handlers[() mode]insn_code == CODE_FOR_nothing (tmode GET_MODE_WIDER_MODE () () tmode GET_MODE_WIDER_MODE () (cmp_optab handlers[() tmode]insn_code != CODE_FOR_nothing (() || () (tmode, op0 (tmode, op1 (op1 == const0_rtx && () && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT (AND, tmode, gen_lowpart_for_combine (), GEN_INT () (code == LT (code, op0, op1 (x (TARGET_FLOAT_FORMAT != IEEE_FLOAT_FORMAT || flag_fast_math || GET_CODE () == NE || GET_CODE () == EQ (GET_MODE_CLASS () (REVERSIBLE_CC_MODE () (XEXP () (x && GET_CODE () == COMPARE && ! FLOAT_MODE_P () (x (x (code (code == REG (x (regno < FIRST_PSEUDO_REGISTER HARD_REGNO_NREGS () 1 (i regno i < endregno i ++ (i GET_RTX_LENGTH () - 1 i >= 0 i -- (fmt[i] == (XEXP () (reg, insn, value (reg (regno < FIRST_PSEUDO_REGISTER HARD_REGNO_NREGS () 1 (value && insn && reg_overlap_mentioned_p () (insn (reg (tem (copy_rtx (), reg, tem (i regno i < endregno i ++ (insn (value (value (i regno i < endregno i ++ (value && reg_last_set_table_tick[i] == label_tick (value && ! get_last_value_validate () (value ( ! get_last_value_validate () (value (insn (reg (value, GET_MODE () (value, GET_MODE () (dest, setter (GET_CODE () == SUBREG (dest (GET_CODE () == REG (GET_CODE () == SET && dest == SET_DEST () (dest, record_dead_insn, SET_SRC () (GET_CODE () == SET && GET_CODE () == SUBREG && SUBREG_REG () == dest && GET_MODE_BITSIZE () <= BITS_PER_WORD && subreg_lowpart_p () (dest, record_dead_insn, gen_lowpart_for_combine () (dest, record_dead_insn, NULL_RTX (GET_CODE () == MEM && ! push_operand () (record_dead_insn (insn (link REG_NOTES () link link XEXP () (REG_NOTE_KIND () == REG_DEAD && GET_CODE () == REG (XEXP () (regno < FIRST_PSEUDO_REGISTER HARD_REGNO_NREGS () 1 (i regno i < endregno i ++ (REG_NOTE_KIND () == REG_INC (XEXP (), insn, NULL_RTX (GET_CODE () == CALL_INSN (i 0 i < FIRST_PSEUDO_REGISTER i ++ (call_used_regs[i](insn (PATTERN (), record_dead_and_set_regs_1 (loc, tick, replace (GET_CODE () (GET_CODE () (GET_CODE () == REG (x (regno < FIRST_PSEUDO_REGISTER HARD_REGNO_NREGS () 1 (j regno j < endregno j ++ (reg_last_set_invalid[j] || () (replace (CLOBBER, GET_MODE (), const0_rtx (i 0 i < len i ++ (() || fmt[i] == (x (GET_CODE () == SUBREG && subreg_lowpart_p () && () && () != 0 (GET_MODE (), value (GET_CODE () != REG (x (value == 0 || () (INSN_CUID () >= subst_low_cuid (subst_prev_insn (insn prev_nonnote_insn () insn && () insn prev_nonnote_insn () (insn && () != 0 && rtx_equal_p () (set (reg_mentioned_p () (copy_rtx (), x, gen_rtx () (reg_overlap_mentioned_p () (get_last_value_validate () (value (get_last_value_validate () (x, from_cuid (x (code == REG (x (regno < FIRST_PSEUDO_REGISTER HARD_REGNO_NREGS () 1 (regno == STACK_POINTER_REGNUM (regno < endreg regno ++ (reg_last_set[regno] && INSN_CUID () > from_cuid (code == MEM && mem_last_set > from_cuid (code (i GET_RTX_LENGTH () - 1 i >= 0 i -- (fmt[i] == (j XVECLEN () - 1 j >= 0 j -- (use_crosses_set_p () (fmt[i] == && use_crosses_set_p () (dest, x (GET_CODE () != REG (dest (regno < FIRST_PSEUDO_REGISTER HARD_REGNO_NREGS () 1 (reg_dead_endregno > regno && reg_dead_regno < endregno (GET_CODE () == CLOBBER (reg, insn (reg (reg_dead_regno < FIRST_PSEUDO_REGISTER HARD_REGNO_NREGS () 1 (reg_dead_regno < FIRST_PSEUDO_REGISTER (i reg_dead_regno i < reg_dead_endregno i ++ (TEST_HARD_REG_BIT () (insn && GET_CODE () != CODE_LABEL && GET_CODE () != BARRIER insn prev_nonnote_insn () (PATTERN (), reg_dead_at_p_1 (reg_dead_flag (find_regno_note () (insn == 0 (block 0 block < n_basic_blocks block ++ (insn == basic_block_head[block](block == n_basic_blocks (i reg_dead_regno i < reg_dead_endregno i ++ (basic_block_live_at_start[block][i / REGSET_ELT_BITS] & () (x (x (code (GET_CODE () == MEM (XEXP () (x (regno < FIRST_PSEUDO_REGISTER (regno == STACK_POINTER_REGNUM || regno == HARD_FRAME_POINTER_REGNUM || () || regno == FRAME_POINTER_REGNUM (regno, GET_MODE () (i -- > 0 (newpat_used_regs, regno + i (x (GET_CODE () == SUBREG || GET_CODE () == ZERO_EXTRACT || GET_CODE () == SIGN_EXTRACT || GET_CODE () == STRICT_LOW_PART (testreg, 0 (GET_CODE () == MEM (XEXP () (SET_SRC () (code (i GET_RTX_LENGTH () - 1 i >= 0 i -- (fmt[i] == (XEXP () (fmt[i] == (j 0 j < XVECLEN () j ++ (XVECEXP () (regno, insn (insn, REG_DEAD, regno (note (insn, note (x, from_cuid, to_insn, pnotes (x (code == REG (x (before_dead && INSN_UID () > max_uid_cuid (before_dead (after_dead && INSN_UID () > max_uid_cuid (after_dead (before_dead && after_dead && INSN_CUID () >= from_cuid && () (regno, where_dead (note != 0 && regno < FIRST_PSEUDO_REGISTER && () (XEXP () (deadregno + HARD_REGNO_NREGS () (regno, GET_MODE () (i deadregno i < deadend i ++ (i < regno || i >= ourend (where_dead (EXPR_LIST, REG_DEAD, gen_rtx (), REG_NOTES () (note == 0 && regno < FIRST_PSEUDO_REGISTER && HARD_REGNO_NREGS () > 1 (regno, GET_MODE () (i regno + 1 i < ourend i ++ (gen_rtx (), from_cuid, to_insn, & oldnotes (note != 0 && GET_MODE () == GET_MODE () (note, 1 (EXPR_LIST, REG_DEAD, x, *pnotes (GET_CODE () == SET (x (SET_SRC (), from_cuid, to_insn, pnotes (GET_CODE () == ZERO_EXTRACT || GET_CODE () == STRICT_LOW_PART || () (dest, from_cuid, to_insn, pnotes (GET_CODE () == SUBREG (dest (GET_CODE () == MEM (XEXP (), from_cuid, to_insn, pnotes (GET_CODE () == CLOBBER (code (code (i 0 i < len i ++ (fmt[i] == (j XVECLEN () - 1 j >= 0 j -- (XVECEXP (), from_cuid, to_insn, pnotes (fmt[i] == (XEXP (), from_cuid, to_insn, pnotes (x, body (GET_CODE () == SET (body (GET_CODE () == ZERO_EXTRACT (dest, 0 (GET_CODE () == STRICT_LOW_PART (XEXP () (GET_CODE () == SUBREG (target (GET_CODE () != REG (target (x (tregno >= FIRST_PSEUDO_REGISTER || regno >= FIRST_PSEUDO_REGISTER (tregno, GET_MODE () (regno, GET_MODE () (GET_CODE () == PARALLEL (i XVECLEN () - 1 i >= 0 i -- (reg_bitfield_target_p () (notes, from_insn, i3, i2, elim_i2, elim_i1 (note notes note note next_note (XEXP () && GET_CODE () == REG && REGNO () >= FIRST_PSEUDO_REGISTER (note, 0 (XEXP () (note, 1 (REG_NOTE_KIND () (reg_set_p () (from_insn != i3 ( ! () (reg_referenced_p () && ! () (note, REG_DEAD (from_insn == i3 && () (reg_mentioned_p () (i2 && reg_mentioned_p () (place (GET_CODE () != NOTE (XEXP (), REG_LIBCALL, NULL_RTX (from_insn (tem && place (tem, 0 (GET_CODE () != NOTE (XEXP (), REG_RETVAL, NULL_RTX (from_insn (tem && place (tem, 0 (from_insn && GET_CODE () == CALL_INSN && find_reg_fusage () (reg_referenced_p () (i2 != 0 && next_nonnote_insn () == i3 && reg_referenced_p () (XEXP () == elim_i2 || XEXP () == elim_i1 (place == i3 && i2 != 0 && GET_CODE () == REG && reg_n_refs[REGNO ()] == 2 && reg_referenced_p () (XEXP () (place == 0 (tem prev_nonnote_insn () place == 0 && tem && () tem prev_nonnote_insn () (reg_set_p () (tem (set != 0 && ! side_effects_p () && () (tem (REG_NOTES (), tem, tem, NULL_RTX, NULL_RTX, NULL_RTX (LOG_LINKS () (tem, NOTE (tem (tem (note, REG_UNUSED ( ! find_regno_note () (reg_referenced_p () || () (i2 && INSN_UID () <= max_uid_cuid && INSN_CUID () > INSN_CUID () && from_insn && INSN_CUID () > INSN_CUID () && reg_referenced_p () (place (place (links (REG_NOTE_KIND () == REG_DEAD && place == 0 && tem != 0 (gen_rtx (), tem (basic_block_end[this_basic_block - 1] == tem (place && REG_NOTE_KIND () == REG_DEAD (XEXP () (dead_or_set_p () || reg_bitfield_target_p () (reg_last_death[regno] != place (place && regno < FIRST_PSEUDO_REGISTER && HARD_REGNO_NREGS () > 1 (regno, GET_MODE () (i regno i < endregno i ++ ( ! refers_to_regno_p () && ! find_regno_fusage () (REG, reg_raw_mode[i], i (p place GET_CODE () == INSN && GET_CODE () == USE p PREV_INSN () (rtx_equal_p () (p (gen_rtx (), p (use_insn (EXPR_LIST, REG_DEAD, piece, REG_NOTES () (all_used (i regno i < endregno i ++ (dead_or_set_regno_p () ( ! all_used (i regno i < endregno i ++ (REG, reg_raw_mode[i], i (() && ! dead_or_set_p () && ! reg_bitfield_target_p () (place (EXPR_LIST, REG_DEAD, piece, REG_NOTES () ((place (note, 1 (place (place (() && GET_CODE () == REG (XEXP () (place2 (() && GET_CODE () == REG (XEXP () (place2 (GET_CODE (), REG_NOTE_KIND (), XEXP (), REG_NOTES () (links (link links link link next_link (link, 1 (GET_CODE () == NOTE || () == 0 (set (GET_CODE () == SUBREG || GET_CODE () == ZERO_EXTRACT || GET_CODE () == SIGN_EXTRACT || GET_CODE () == STRICT_LOW_PART (reg, 0 (insn NEXT_INSN () () insn NEXT_INSN () (GET_RTX_CLASS () == && reg_overlap_mentioned_p () (reg_referenced_p () (GET_CODE () == CALL_INSN && find_reg_fusage () (place (link2 LOG_LINKS () link2 link2 XEXP () (XEXP () == XEXP () (link2 == 0 (link, 1 (place (place (added_links_insn == 0 || INSN_CUID () > INSN_CUID () (file (file,, combine_attempts, combine_merges, combine_extras, combine_successes (file (file,, total_attempts, total_merges, total_extras, total_successes, <./cc/combine.c 3968>
  606 																																														INTVAL: 129
  607 																																														gen_rtx_combine: <>
  608 																																														GEN_INT: <>
  609 																																														SUBREG_REG: <>
  610 																																													PATTERN: <>
  611 																																													check_asm_operands: int (), <./cc/recog.c 108>
  612 																																														asm_noperands: 542
  613 																																														alloca: <>
  614 																																														decode_asm_operands: <>
  615 																																														general_operand: <>
  616 																																														undo_all: void (), <./cc/combine.c 2380>
  617 																																													insn_extract: <>
  618 																																													constrain_operands: int (), <./cc/recog.c 1624>
  619 																																														GET_MODE: 139
  620 																																														GET_CODE: 81
  621 																																														SUBREG_REG: <>
  622 																																														REGNO: 93
  623 																																														SUBREG_WORD: <>
  624 																																														operands_match_p: <>
  625 																																														strict_memory_address_p: if (), <./cc/reload.c 4181>
  626 																																															GET_CODE: 81
  627 																																															CONSTANT_POOL_ADDRESS_P: <>
  628 																																																get_pool_mode: <>
  629 																																																gen_rtx: <>
  630 																																																get_pool_constant: <>
  631 																																																RTX_INTEGRATED_P: <>
  632 																																																GET_MODE: 139
  633 																																																save_constants: <>
  634 																																															copy_rtx: <>
  635 																																															XEXP: 105
  636 																																															find_reloads_address_part: <>
  637 																																														reg_fits_class_p: int (), <./cc/recog.c 1972>
  638 																																														CONSTANT_P: 118
  639 																																														XEXP: 105
  640 																																														CONST_DOUBLE_OK_FOR_LETTER_P: <>
  641 																																														CONST_OK_FOR_LETTER_P: <>
  642 																																														INTVAL: 129
  643 																																														EXTRA_CONSTRAINT: <>
  644 																																														offsettable_memref_p: else if (), <./cc/config/i386/i386.c 2913>
  645 																																														offsettable_nonstrict_memref_p: <>
  646 																																														REG_CLASS_FROM_LETTER: <>
  647 																																														rtx_equal_p: 143
  648 																																														safe_from_earlyclobber: <>
  649 																																														constrain_operands: 618
  650 																																													INSN_CODE: <>
  651 																																													XVECEXP: <>
  652 																																													XVECLEN: <>
  653 																																													gen_rtx: <>
  654 																																													gen_rtvec: <>
  655 																																													validate_change: 142
  656 																																													cancel_changes: void (), <./cc/recog.c 312>
  657 																																														GET_CODE: 81
  658 																																														INSN_CODE: <>
  659 																																											XEXP: 105
  660 																																											force_reg: <>
  661 																																											REGNO: 93
  662 																																											HARD_REGNO_MODE_OK: <>
  663 																																											copy_to_reg: <>
  664 																																											emit_move_insn: <>
  665 																																											gen_lowpart: <>
  666 																																											GET_MODE_SIZE: 461
  667 																																											convert_to_mode: <>
  668 																																											GET_MODE: 139
  669 																																											copy_to_mode_reg: <>
  670 																																											emit_insn: <>
  671 																																											GEN_FCN: <>
  672 																																											gen_rtx: <>
  673 																																											REAL_VALUE_FROM_CONST_DOUBLE: <>
  674 																																											REAL_VALUE_TO_TARGET_DOUBLE: <>
  675 																																											abort: <>
  676 																																										TYPE_MODE: <>
  677 																																										type_for_mode: <>
  678 																																										TREE_UNSIGNED: if (), <./cc/fold-const.c 2617>
  679 																																											build: <>
  680 																																											TREE_SIDE_EFFECTS: if (), <./cc/cp/typeck.c 4958>
  681 																																											TREE_THIS_VOLATILE: <>
  682 																																											TREE_RAISES: <>
  683 																																										tree_int_cst_lt: int (), <./cc/tree.c 3471>
  684 																																											TREE_UNSIGNED: 678
  685 																																											TREE_TYPE: 160
  686 																																											INT_CST_LT: <>
  687 																																											INT_CST_LT_UNSIGNED: <>
  688 																																										tree_int_cst_sgn: int (), <./cc/tree.c 3487>
  689 																																											TREE_INT_CST_LOW: <>
  690 																																											TREE_INT_CST_HIGH: <>
  691 																																											TREE_UNSIGNED: 678
  692 																																											TREE_TYPE: 160
  693 																																										TYPE_SIZE: if (), <./cc/dwarfout.c 3636>
  694 																																										convert_to_integer: 436
  695 																																										TREE_SIDE_EFFECTS: if (), <./cc/cp/typeck.c 4958>
  696 																																										build: <>
  697 																																										get_unwidened: <>
  698 																																										TRULY_NOOP_TRUNCATION: <>
  699 																																										unsigned_type: , <./cc/fold-const.c 2435>
  700 																																											TYPE_MAIN_VARIANT: 324
  701 																																										signed_type: , <./cc/fold-const.c 2253>
  702 																																											TYPE_MAIN_VARIANT: 324
  703 																																										error: 52
  704 																																										build_int_2: <>
  705 																																									convert_to_pointer: tree (), <./cc/convert.c 36>
  706 																																										TREE_TYPE: 160
  707 																																										TREE_CODE: 162
  708 																																										integer_zerop: 405
  709 																																										build_int_2: <>
  710 																																										build1: 334
  711 																																										type_precision: <>
  712 																																										convert: 427
  713 																																										type_for_size: <>
  714 																																										GET_MODE_SIZE: 461
  715 																																										TYPE_MODE: <>
  716 																																										abort: <>
  717 																																										convert_to_pointer: 705
  718 																																										error: 52
  719 																																									convert_to_real: tree (), <./cc/convert.c 80>
  720 																																										TREE_CODE: 162
  721 																																										TREE_TYPE: 160
  722 																																										build1: 334
  723 																																										INTEGRAL_TYPE_P: <>
  724 																																										convert: 427
  725 																																										fold: <>
  726 																																										error: 52
  727 																																										make_node: 307
  728 																																										TREE_REAL_CST: <>
  729 																																										REAL_VALUE_ATOF: <>
  730 																																										TYPE_MODE: <>
  731 																																									convert_to_complex: tree (), <./cc/convert.c 425>
  732 																																										TREE_CODE: 162
  733 																																										TREE_TYPE: 160
  734 																																										convert: 427
  735 																																										build: <>
  736 																																										TYPE_MAIN_VARIANT: 324
  737 																																										fold: <>
  738 																																										TREE_OPERAND: <>
  739 																																										save_expr: <>
  740 																																										build1: 334
  741 																																										error: 52
  742 																																									cp_convert: tree (), <./cc/cp/cvt.c 1182>
  743 																																										TREE_CODE: 162
  744 																																										TREE_TYPE: 160
  745 																																										IS_AGGR_TYPE: else if (), <./cc/cp/typeck.c 6140>
  746 																																										TYPE_MAIN_VARIANT: 324
  747 																																										fold: <>
  748 																																										build1: 334
  749 																																										convert: 427
  750 																																										TREE_OPERAND: <>
  751 																																										convert_to_reference: tree (), <./cc/cp/cvt.c 662>
  752 																																											TYPE_MAIN_VARIANT: 324
  753 																																											TREE_TYPE: 160
  754 																																											TREE_CODE: 162
  755 																																											my_friendly_abort: 357
  756 																																											comp_target_types: if (), <./cc/cp/typeck.c 1106>
  757 																																											IS_AGGR_TYPE: else if (), <./cc/cp/typeck.c 6140>
  758 																																											build_type_conversion: tree (), <./cc/cp/cvt.c 1483>
  759 																																												TREE_TYPE: 160
  760 																																												TREE_CODE: 162
  761 																																												TYPE_MAIN_VARIANT: 324
  762 																																												TYPE_LANG_SPECIFIC: 370
  763 																																												TYPE_HAS_CONVERSION: <>
  764 																																												build_typename_overload: tree (), <./cc/cp/method.c 1035>
  765 																																													OB_INIT: <>
  766 																																													OB_PUTID: <>
  767 																																													build_overload_name: char * (), <./cc/cp/method.c 601>
  768 																																														OB_INIT: <>
  769 																																														TREE_CODE: 162
  770 																																														TREE_VALUE: <>
  771 																																														TREE_USED: <>
  772 																																														flush_repeats: __inline void (), <./cc/cp/method.c 288>
  773 																																															OB_PUTC: <>
  774 																																															icat: __inline void (), <./cc/cp/method.c 258>
  775 																																																OB_PUTC: <>
  776 																																																icat: 774
  777 																																														TYPE_MAIN_VARIANT: 324
  778 																																														TYPE_PTRMEMFUNC_P: 258
  779 																																														TYPE_PTRMEMFUNC_FN_TYPE: <>
  780 																																														TREE_READONLY: if (), <./cc/cp/decl2.c 1229>
  781 																																														OB_PUTC: <>
  782 																																														unsigned_type: 699
  783 																																														TYPE_VOLATILE: <>
  784 																																														build_overload_name: 767
  785 																																														TYPE_OFFSET_BASETYPE: <>
  786 																																														TREE_TYPE: 160
  787 																																														TYPE_DOMAIN: <>
  788 																																														array_type_nelts: <>
  789 																																														icat: 774
  790 																																														TREE_INT_CST_LOW: <>
  791 																																														TYPE_ARG_TYPES: <>
  792 																																															cp_warning_at: 283
  793 																																														TYPE_READONLY: 217
  794 																																														TREE_CHAIN: if (), <./cc/cp/search.c 1454>
  795 																																														TYPE_METHOD_BASETYPE: <>
  796 																																														my_friendly_abort: 357
  797 																																														my_friendly_assert: 379
  798 																																														OB_FINISH: <>
  799 																																														obstack_base: <>
  800 																																														TYPE_NAME: 271
  801 																																														DECL_ASSEMBLER_NAME: <>
  802 																																														DECL_NAME: 250
  803 																																														OB_PUTID: <>
  804 																																														DECL_CONTEXT: 267
  805 																																														TREE_CODE_CLASS: switch (), <./cc/dwarfout.c 3160>
  806 																																														build_overload_nested_name: void (), <./cc/cp/method.c 315>
  807 																																															DECL_CONTEXT: 267
  808 																																															TREE_CODE_CLASS: switch (), <./cc/dwarfout.c 3160>
  809 																																															TREE_CODE: 162
  810 																																															TYPE_MAIN_DECL: <>
  811 																																															build_overload_nested_name: 806
  812 																																															DECL_ASSEMBLER_NAME: <>
  813 																																															ASM_FORMAT_PRIVATE_NAME: <>
  814 																																															IDENTIFIER_POINTER: <>
  815 																																															OB_PUTC: <>
  816 																																															icat: 774
  817 																																															strlen: <>
  818 																																															OB_PUTCP: <>
  819 																																															DECL_NAME: 250
  820 																																															build_overload_identifier: void (), <./cc/cp/method.c 539>
  821 																																																IDENTIFIER_TEMPLATE: <>
  822 																																																TREE_VALUE: <>
  823 																																																TREE_PURPOSE: 215
  824 																																																DECL_NAME: 250
  825 																																																DECL_ARGUMENTS: <>
  826 																																																TREE_VEC_LENGTH: <>
  827 																																																OB_PUTC: <>
  828 																																																icat: 774
  829 																																																IDENTIFIER_LENGTH: <>
  830 																																																OB_PUTID: <>
  831 																																																TREE_VEC_ELT: <>
  832 																																																TREE_CODE: 162
  833 																																																build_overload_name: 767
  834 																																																tsubst: tree (), <./cc/cp/pt.c 1145>
  835 																																																	TREE_TYPE: 160
  836 																																																	tsubst: 834
  837 																																																	TREE_CODE: 162
  838 																																																	TYPE_PTRMEMFUNC_P: 258
  839 																																																	build_ptrmemfunc_type: tree (), <./cc/cp/decl.c 7489>
  840 																																																		TYPE_GET_PTRMEMFUNC_TYPE: <>
  841 																																																		push_obstacks: 392
  842 																																																		TYPE_OBSTACK: <>
  843 																																																		make_lang_type: tree (), <./cc/cp/lex.c 4904>
  844 																																																			make_node: 307
  845 																																																			IS_AGGR_TYPE: else if (), <./cc/cp/typeck.c 6140>
  846 																																																			TREE_PERMANENT: if (), <./cc/cp/decl.c 10271>
  847 																																																			my_friendly_assert: 379
  848 																																																			obstack_alloc: <>
  849 																																																			TYPE_LANG_SPECIFIC: 370
  850 																																																			CLASSTYPE_AS_LIST: <>
  851 																																																			build_tree_list: <>
  852 																																																			SET_CLASSTYPE_INTERFACE_UNKNOWN_X: <>
  853 																																																			CLASSTYPE_INTERFACE_ONLY: <>
  854 																																																			CLASSTYPE_VBASE_SIZE: <>
  855 																																																			TYPE_BINFO: if (), <./cc/cp/search.c 454>
  856 																																																			make_binfo: tree (), <./cc/cp/tree.c 1227>
  857 																																																				make_tree_vec: tree (), <./cc/tree.c 1458>
  858 																																																					obstack_alloc: <>
  859 																																																					TREE_SET_CODE: <>
  860 																																																					TREE_VEC_LENGTH: <>
  861 																																																					TREE_PERMANENT: if (), <./cc/cp/decl.c 10271>
  862 																																																				TREE_CODE: 162
  863 																																																				BINFO_TYPE: <>
  864 																																																				TYPE_BINFO: if (), <./cc/cp/search.c 454>
  865 																																																				TREE_CHAIN: if (), <./cc/cp/search.c 1454>
  866 																																																				TREE_USED: <>
  867 																																																				TREE_TYPE: 160
  868 																																																				TYPE_MAIN_VARIANT: 324
  869 																																																				BINFO_OFFSET: <>
  870 																																																				BINFO_VTABLE: <>
  871 																																																				BINFO_VIRTUALS: <>
  872 																																																				BINFO_VPTR_FIELD: <>
  873 																																																				BINFO_BASETYPES: <>
  874 																																																				copy_node: tree (), <./cc/tree.c 1101>
  875 																																																					TREE_CODE: 162
  876 																																																					TREE_CODE_CLASS: switch (), <./cc/dwarfout.c 3160>
  877 																																																					TREE_VEC_LENGTH: <>
  878 																																																					obstack_alloc: <>
  879 																																																					TREE_CHAIN: if (), <./cc/cp/search.c 1454>
  880 																																																					DECL_UID: <>
  881 																																																					TYPE_UID: <>
  882 																																																					TYPE_OBSTACK: <>
  883 																																																					TREE_PERMANENT: if (), <./cc/cp/decl.c 10271>
  884 																																																			CLASSTYPE_BINFO_AS_LIST: <>
  885 																																																			build_pointer_type: 390
  886 																																																		IS_AGGR_TYPE: else if (), <./cc/cp/typeck.c 6140>
  887 																																																		build_lang_field_decl: tree (), <./cc/cp/lex.c 4854>
  888 																																																			build_decl: tree (), <./cc/tree.c 2855>
  889 																																																				make_node: 307
  890 																																																				DECL_NAME: 250
  891 																																																				DECL_ASSEMBLER_NAME: <>
  892 																																																				TREE_TYPE: 160
  893 																																																				layout_decl: <>
  894 																																																				DECL_MODE: <>
  895 																																																			get_identifier: <>
  896 																																																			build_overload_name: 767
  897 																																																			DECL_ASSEMBLER_NAME: <>
  898 																																																			TREE_PERMANENT: if (), <./cc/cp/decl.c 10271>
  899 																																																			my_friendly_assert: 379
  900 																																																			obstack_alloc: <>
  901 																																																			DECL_LANG_SPECIFIC: if (), <./cc/cp/decl.c 2992>
  902 																																																		finish_builtin_type: void (), <./cc/cp/decl2.c 2427>
  903 																																																			TYPE_FIELDS: <>
  904 																																																			layout_type: <>
  905 																																																			TREE_TYPE: 160
  906 																																																			DECL_FIELD_CONTEXT: <>
  907 																																																			TREE_CHAIN: if (), <./cc/cp/search.c 1454>
  908 																																																			DECL_CLASS_CONTEXT: <>
  909 																																																			TYPE_ALIGN: <>
  910 																																																			TYPE_NAME: 271
  911 																																																			make_type_decl: tree (), <./cc/cp/decl.c 2075>
  912 																																																				build_decl: 888
  913 																																																				TYPE_NAME: 271
  914 																																																				get_identifier: <>
  915 																																																				build_overload_name: 767
  916 																																																				DECL_ASSEMBLER_NAME: <>
  917 																																																			get_identifier: <>
  918 																																																			build_decl: 888
  919 																																																			layout_decl: <>
  920 																																																		TYPE_NAME: 271
  921 																																																		TYPE_PTRMEMFUNC_FLAG: <>
  922 																																																		pop_obstacks: 396
  923 																																																		TYPE_SET_PTRMEMFUNC_TYPE: <>
  924 																																																		CLASSTYPE_GOT_SEMICOLON: <>
  925 																																																	TYPE_PTRMEMFUNC_FN_TYPE: <>
  926 																																																	TYPE_MIN_VALUE: <>
  927 																																																	TYPE_MAX_VALUE: <>
  928 																																																	build_index_2_type: tree (), <./cc/tree.c 3747>
  929 																																																		build_range_type: tree (), <./cc/tree.c 3718>
  930 																																																			make_node: 307
  931 																																																			TREE_TYPE: 160
  932 																																																			TYPE_PRECISION: 211
  933 																																																			TYPE_MIN_VALUE: <>
  934 																																																			convert: 427
  935 																																																			TYPE_MAX_VALUE: <>
  936 																																																			TYPE_MODE: <>
  937 																																																			TYPE_SIZE: if (), <./cc/dwarfout.c 3636>
  938 																																																			TYPE_ALIGN: <>
  939 																																																			TREE_CODE: 162
  940 																																																			TREE_INT_CST_LOW: <>
  941 																																																			type_hash_canon: tree (), <./cc/tree.c 3329>
  942 																																																				type_hash_lookup: tree (), <./cc/tree.c 3268>
  943 																																																					TREE_CODE: 162
  944 																																																					TREE_TYPE: 160
  945 																																																					attribute_list_equal: int (), <./cc/tree.c 3376>
  946 																																																						attribute_list_contained: 214
  947 																																																					TYPE_ATTRIBUTES: <>
  948 																																																					TYPE_MAX_VALUE: <>
  949 																																																					tree_int_cst_equal: int (), <./cc/tree.c 3452>
  950 																																																						TREE_CODE: 162
  951 																																																						TREE_INT_CST_LOW: <>
  952 																																																						TREE_INT_CST_HIGH: <>
  953 																																																					TYPE_MIN_VALUE: <>
  954 																																																					TYPE_DOMAIN: <>
  955 																																																					type_list_equal: int (), <./cc/tree.c 3432>
  956 																																																						TREE_CHAIN: if (), <./cc/cp/search.c 1454>
  957 																																																						TREE_VALUE: <>
  958 																																																						TREE_PURPOSE: 215
  959 																																																						simple_cst_equal: 235
  960 																																																						TREE_TYPE: 160
  961 																																																				obstack_free: 397
  962 																																																				TYPE_OBSTACK: <>
  963 																																																				TREE_PERMANENT: if (), <./cc/cp/decl.c 10271>
  964 																																																				type_hash_add: void (), <./cc/tree.c 3301>
  965 																																																					oballoc: 530
  966 																																																	TEMPLATE_TYPE_IDX: <>
  967 																																																	cp_build_type_variant: tree (), <./cc/cp/tree.c 480>
  968 																																																		TREE_CODE: 162
  969 																																																		TYPE_MAIN_VARIANT: 324
  970 																																																		push_obstacks: 392
  971 																																																		TYPE_OBSTACK: <>
  972 																																																		build_cplus_array_type: tree (), <./cc/cp/tree.c 448>
  973 																																																			TREE_PERMANENT: if (), <./cc/cp/decl.c 10271>
  974 																																																			build_array_type: tree (), <./cc/tree.c 3786>
  975 																																																				TREE_CODE: 162
  976 																																																				build_pointer_type: 390
  977 																																																				make_node: 307
  978 																																																				TREE_TYPE: 160
  979 																																																				TYPE_DOMAIN: <>
  980 																																																				TYPE_HASH: <>
  981 																																																				type_hash_canon: 941
  982 																																																				TYPE_NEXT_VARIANT: <>
  983 																																																				TYPE_MAIN_VARIANT: 324
  984 																																																				change_main_variant: void (), <./cc/tree.c 3179>
  985 																																																					TYPE_MAIN_VARIANT: 324
  986 																																																					TYPE_NEXT_VARIANT: <>
  987 																																																				build_array_type: 974
  988 																																																				TYPE_SIZE: if (), <./cc/dwarfout.c 3636>
  989 																																																				layout_type: <>
  990 																																																			TYPE_NEEDS_CONSTRUCTING: <>
  991 																																																			TYPE_MAIN_VARIANT: 324
  992 																																																			TYPE_NEEDS_DESTRUCTOR: <>
  993 																																																		cp_build_type_variant: 967
  994 																																																		TREE_TYPE: 160
  995 																																																		TYPE_DOMAIN: <>
  996 																																																		copy_node: 874
  997 																																																		TYPE_POINTER_TO: <>
  998 																																																		TYPE_REFERENCE_TO: <>
  999 																																																		pop_obstacks: 396
 1000 																																																		build_type_variant: tree (), <./cc/tree.c 3146>
 1001 																																																			TYPE_MAIN_VARIANT: 324
 1002 																																																			TYPE_NEXT_VARIANT: <>
 1003 																																																			TYPE_READONLY: 217
 1004 																																																			TYPE_VOLATILE: <>
 1005 																																																			TYPE_NAME: 271
 1006 																																																			build_type_copy: tree (), <./cc/tree.c 3206>
 1007 																																																				TYPE_MAIN_VARIANT: 324
 1008 																																																				TYPE_OBSTACK: <>
 1009 																																																				copy_node: 874
 1010 																																																				TYPE_POINTER_TO: <>
 1011 																																																				TYPE_REFERENCE_TO: <>
 1012 																																																				TYPE_NEXT_VARIANT: <>
 1013 																																																	TYPE_READONLY: 217
 1014 																																																	TYPE_VOLATILE: <>
 1015 																																																	TEMPLATE_CONST_IDX: <>
 1016 																																																	DECL_CONTEXT: 267
 1017 																																																	TREE_CODE_CLASS: switch (), <./cc/dwarfout.c 3160>
 1018 																																																	DECL_ARGUMENTS: <>
 1019 																																																	DECL_RESULT: <>
 1020 																																																	DECL_NAME: 250
 1021 																																																	CLASSTYPE_METHOD_VEC: <>
 1022 																																																	TREE_VEC_LENGTH: <>
 1023 																																																	strncmp: 233
 1024 																																																	IDENTIFIER_POINTER: <>
 1025 																																																	build_typename_overload: 764
 1026 																																																	constructor_name: <>
 1027 																																																	DECL_CONSTRUCTOR_P: if (), <./cc/cp/decl2.c 951>
 1028 																																																	TYPE_USES_VIRTUAL_BASECLASSES: <>
 1029 																																																	TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 1030 																																																	TYPE_ARG_TYPES: 791
 1031 																																																	hash_tree_chain: tree (), <./cc/cp/tree.c 1061>
 1032 																																																		tree_cons: <>
 1033 																																																		list_hash: int (), <./cc/cp/tree.c 942>
 1034 																																																			TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 1035 																																																			TYPE_HASH: <>
 1036 																																																			TREE_VALUE: <>
 1037 																																																			TREE_PURPOSE: 215
 1038 																																																		list_hash_canon: tree (), <./cc/cp/tree.c 1017>
 1039 																																																			list_hash_lookup: tree (), <./cc/cp/tree.c 965>
 1040 																																																				list_hash: 1033
 1041 																																																				TREE_VIA_VIRTUAL: if (), <./cc/cp/typeck.c 6326>
 1042 																																																					build_unary_op: <>
 1043 																																																					build_indirect_ref: 329
 1044 																																																					convert_pointer_to: 381
 1045 																																																				TREE_VIA_PUBLIC: <>
 1046 																																																				TREE_VIA_PROTECTED: <>
 1047 																																																				TREE_PURPOSE: 215
 1048 																																																				TREE_VALUE: <>
 1049 																																																				TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 1050 																																																				my_friendly_assert: 379
 1051 																																																				TREE_TYPE: 160
 1052 																																																			obstack_free: 397
 1053 																																																			list_hash_add: void (), <./cc/cp/tree.c 989>
 1054 																																																				list_hash: 1033
 1055 																																																				obstack_alloc: <>
 1056 																																																	build_cplus_method_type: tree (), <./cc/cp/tree.c 384>
 1057 																																																		make_node: 307
 1058 																																																		TYPE_METHOD_BASETYPE: <>
 1059 																																																		TYPE_MAIN_VARIANT: 324
 1060 																																																		TREE_TYPE: 160
 1061 																																																		IS_SIGNATURE: else if (), <./cc/cp/decl2.c 2038>
 1062 																																																			signature_error: void (), <./cc/cp/typeck2.c 197>
 1063 																																																				TREE_CODE: 162
 1064 																																																				cp_error: 259
 1065 																																																				TREE_TYPE: 160
 1066 																																																		build_signature_pointer_type: tree (), <./cc/cp/sig.c 238>
 1067 																																																			build_signature_pointer_or_reference_type: tree (), <./cc/cp/sig.c 100>
 1068 																																																				SIGNATURE_REFERENCE_TO: <>
 1069 																																																				SIGNATURE_POINTER_TO: <>
 1070 																																																				build_signature_pointer_or_reference_type: 1067
 1071 																																																				TYPE_NEXT_VARIANT: <>
 1072 																																																				TYPE_READONLY: 217
 1073 																																																				TREE_TYPE: 160
 1074 																																																				TYPE_FIELDS: <>
 1075 																																																				TYPE_VOLATILE: <>
 1076 																																																				TREE_PERMANENT: if (), <./cc/cp/decl.c 10271>
 1077 																																																				make_lang_type: 843
 1078 																																																				build_type_variant: 1000
 1079 																																																				build_pointer_type: 390
 1080 																																																				build_lang_field_decl: 887
 1081 																																																				get_identifier: <>
 1082 																																																				DECL_FIELD_CONTEXT: <>
 1083 																																																				DECL_CLASS_CONTEXT: <>
 1084 																																																				TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 1085 																																																				cp_build_type_variant: 967
 1086 																																																				TYPE_ALIGN: <>
 1087 																																																				IS_AGGR_TYPE: else if (), <./cc/cp/typeck.c 6140>
 1088 																																																				build_signature_pointer_or_reference_name: tree (), <./cc/cp/sig.c 48>
 1089 																																																					TYPE_NAME_STRING: <>
 1090 																																																					TYPE_NAME_LENGTH: <>
 1091 																																																					alloca: <>
 1092 																																																					sprintf: <>
 1093 																																																					get_identifier: <>
 1094 																																																				build_signature_pointer_or_reference_decl: void (), <./cc/cp/sig.c 77>
 1095 																																																					build_decl: 888
 1096 																																																					TYPE_NAME: 271
 1097 																																																					TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 1098 																																																				CLASSTYPE_GOT_SEMICOLON: <>
 1099 																																																				IS_SIGNATURE_POINTER: <>
 1100 																																																				IS_SIGNATURE_REFERENCE: <>
 1101 																																																				SIGNATURE_TYPE: <>
 1102 																																																				layout_type: <>
 1103 																																																				rest_of_type_compilation: void (), <./cc/toplev.c 2938>
 1104 																																																					TIMEVAR: <>
 1105 																																																					dbxout_symbol: <>
 1106 																																																					TYPE_STUB_DECL: <>
 1107 																																																					sdbout_symbol: <>
 1108 																																																		TYPE_READONLY: 217
 1109 																																																		TYPE_VOLATILE: <>
 1110 																																																		build_pointer_type: 390
 1111 																																																		tree_cons: <>
 1112 																																																		TYPE_ARG_TYPES: 791
 1113 																																																		TREE_SIDE_EFFECTS: if (), <./cc/cp/typeck.c 4958>
 1114 																																																		TYPE_HASH: <>
 1115 																																																		type_hash_list: int (), <./cc/tree.c 3254>
 1116 																																																			TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 1117 																																																			TYPE_HASH: <>
 1118 																																																			TREE_VALUE: <>
 1119 																																																		type_hash_canon: 941
 1120 																																																		TYPE_SIZE: if (), <./cc/dwarfout.c 3636>
 1121 																																																		layout_type: <>
 1122 																																																	build_type_variant: 1000
 1123 																																																	copy_node: 874
 1124 																																																	build_decl: 888
 1125 																																																	SET_DECL_ARTIFICIAL: <>
 1126 																																																	DECL_ARG_TYPE: <>
 1127 																																																	DECL_REGISTER: <>
 1128 																																																	fprintf: <>
 1129 																																																	TYPE_IDENTIFIER: <>
 1130 																																																	TREE_VEC_ELT: <>
 1131 																																																	DECL_CHAIN: if (), <./cc/cp/decl2.c 1871>
 1132 																																																	my_friendly_assert: 379
 1133 																																																	comptypes: if (), <./cc/cp/typeck.c 6087>
 1134 																																																		TREE_CODE: 162
 1135 																																																		type_for_size: <>
 1136 																																																		TYPE_PRECISION: 211
 1137 																																																		TREE_UNSIGNED: 678
 1138 																																																		TYPE_READONLY: 217
 1139 																																																		TYPE_VOLATILE: <>
 1140 																																																		TYPE_MAIN_VARIANT: 324
 1141 																																																		COMP_TYPE_ATTRIBUTES: <>
 1142 																																																		TREE_TYPE: 160
 1143 																																																		comptypes: 1133
 1144 																																																		function_types_compatible_p: int (), <./cc/c-typeck.c 593>
 1145 																																																			TREE_TYPE: 160
 1146 																																																			comptypes: 1133
 1147 																																																			TYPE_ARG_TYPES: 791
 1148 																																																			self_promoting_args_p: int (), <./cc/c-typeck.c 723>
 1149 																																																				TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 1150 																																																				TREE_VALUE: <>
 1151 																																																				TYPE_MAIN_VARIANT: 324
 1152 																																																				C_PROMOTING_INTEGER_TYPE_P: if (), <./cc/cp/decl.c 11606>
 1153 																																																			TYPE_ACTUAL_ARG_TYPES: <>
 1154 																																																			type_lists_compatible_p: int (), <./cc/c-typeck.c 643>
 1155 																																																				TREE_VALUE: <>
 1156 																																																				self_promoting_type_p: int (), <./cc/c-typeck.c 749>
 1157 																																																					TYPE_MAIN_VARIANT: 324
 1158 																																																					C_PROMOTING_INTEGER_TYPE_P: if (), <./cc/cp/decl.c 11606>
 1159 																																																				comptypes: 1133
 1160 																																																				TREE_CODE: 162
 1161 																																																				TYPE_NAME: 271
 1162 																																																				TYPE_TRANSPARENT_UNION: <>
 1163 																																																				TYPE_SIZE: if (), <./cc/dwarfout.c 3636>
 1164 																																																				tree_int_cst_equal: 949
 1165 																																																				TYPE_FIELDS: <>
 1166 																																																				TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 1167 																																																				TREE_TYPE: 160
 1168 																																																		TYPE_DOMAIN: <>
 1169 																																																		TYPE_MIN_VALUE: <>
 1170 																																																		TYPE_MAX_VALUE: <>
 1171 																																																		TREE_INT_CST_LOW: <>
 1172 																																																		TREE_INT_CST_HIGH: <>
 1173 																																																		maybe_objc_comptypes: int (), <./cc/objc-act.c 967>
 1174 																																																			objc_comptypes: int (), <./cc/objc-act.c 1059>
 1175 																																																				TREE_CODE: 162
 1176 																																																				TREE_TYPE: 160
 1177 																																																				IS_PROTOCOL_QUALIFIED_ID: <>
 1178 																																																				TYPE_PROTOCOL_LIST: <>
 1179 																																																				TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 1180 																																																				TREE_VALUE: <>
 1181 																																																				lookup_protocol_in_reflist: tree (), <./cc/obcp/obcp-act.c 993>
 1182 																																																					TREE_CODE: 162
 1183 																																																					TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 1184 																																																					TREE_VALUE: <>
 1185 																																																					PROTOCOL_LIST: <>
 1186 																																																					lookup_protocol_in_reflist: 1181
 1187 																																																				warning: 281
 1188 																																																				IDENTIFIER_POINTER: <>
 1189 																																																				PROTOCOL_NAME: <>
 1190 																																																				TYPED_OBJECT: <>
 1191 																																																				TYPE_NAME: 271
 1192 																																																				lookup_interface: tree (), <./cc/objc-act.c 2845>
 1193 																																																					TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 1194 																																																					CLASS_NAME: <>
 1195 																																																				cat: <>
 1196 																																																				CLASS_PROTOCOL_LIST: <>
 1197 																																																				CLASS_CATEGORY_LIST: <>
 1198 																																																				CLASS_SUPER_NAME: <>
 1199 																																																				lookup_protocol_in_reflist: tree (), <./cc/objc-act.c 1020>
 1200 																																																					TREE_CODE: 162
 1201 																																																					TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 1202 																																																					TREE_VALUE: <>
 1203 																																																					PROTOCOL_LIST: <>
 1204 																																																					lookup_protocol_in_reflist: 1199
 1205 																																																	list_eq: int (), <./cc/cp/pt.c 1101>
 1206 																																																		TYPE_MAIN_VARIANT: 324
 1207 																																																		TREE_VALUE: <>
 1208 																																																		list_eq: 1205
 1209 																																																		TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 1210 																																																	build_function_type: tree (), <./cc/tree.c 3837>
 1211 																																																		TREE_CODE: 162
 1212 																																																		make_node: 307
 1213 																																																		TREE_TYPE: 160
 1214 																																																		TYPE_ARG_TYPES: 791
 1215 																																																		TYPE_HASH: <>
 1216 																																																		type_hash_list: 1115
 1217 																																																		type_hash_canon: 941
 1218 																																																		TYPE_SIZE: if (), <./cc/dwarfout.c 3636>
 1219 																																																		layout_type: <>
 1220 																																																	TYPE_METHOD_BASETYPE: <>
 1221 																																																	error: 52
 1222 																																																	DECL_ASSEMBLER_NAME: <>
 1223 																																																	DECL_ARTIFICIAL: 278
 1224 																																																	cp_error: 259
 1225 																																																	cp_error_at: void (), <./cc/cp/errfn.c 203>
 1226 																																																		cp_thing: 260
 1227 																																																		error_with_file_and_line: <>
 1228 																																																	TREE_PERMANENT: if (), <./cc/cp/decl.c 10271>
 1229 																																																	lookup_name_nonclass: tree (), <./cc/cp/decl.c 4525>
 1230 																																																		lookup_name_real: tree (), <./cc/cp/decl.c 4395>
 1231 																																																			IDENTIFIER_GLOBAL_VALUE: <>
 1232 																																																			TREE_CODE: 162
 1233 																																																			create_nested_upt: tree (), <./cc/cp/pt.c 2682>
 1234 																																																				make_lang_type: 843
 1235 																																																				build_decl: 888
 1236 																																																				TYPE_NAME: 271
 1237 																																																				TYPE_VALUES: <>
 1238 																																																				TYPE_CONTEXT: <>
 1239 																																																				pushdecl: <>
 1240 																																																			lookup_namespace_name: tree (), <./cc/cp/decl.c 4367>
 1241 																																																				NAMESPACE_LEVEL: <>
 1242 																																																				TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 1243 																																																				DECL_NAME: 250
 1244 																																																				DECL_ASSEMBLER_NAME: <>
 1245 																																																			IS_AGGR_TYPE: else if (), <./cc/cp/typeck.c 6140>
 1246 																																																			TYPE_BEING_DEFINED: <>
 1247 																																																			IDENTIFIER_CLASS_VALUE: <>
 1248 																																																			DECL_CONTEXT: 267
 1249 																																																			purpose_member: if (), <./cc/cp/decl.c 3686>
 1250 																																																				TREE_PURPOSE: 215
 1251 																																																				TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 1252 																																																			TREE_VALUE: <>
 1253 																																																			CLASSTYPE_LOCAL_TYPEDECLS: <>
 1254 																																																			lookup_field: <>
 1255 																																																			done: 61
 1256 																																																			IDENTIFIER_LOCAL_VALUE: <>
 1257 																																																			lookup_nested_field: <>
 1258 																																																			cp_error: 259
 1259 																																																			IDENTIFIER_HAS_TYPE_VALUE: else if (), <./cc/cp/call.c 1742>
 1260 																																																			TYPE_NAME: 271
 1261 																																																			IDENTIFIER_TYPE_VALUE: <>
 1262 																																																			TREE_TYPE: 160
 1263 																																																	TREE_VALUE: <>
 1264 																																																	build_decl_overload: tree (), <./cc/cp/method.c 951>
 1265 																																																		IDENTIFIER_POINTER: <>
 1266 																																																		TREE_CODE: 162
 1267 																																																		get_identifier: <>
 1268 																																																		TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 1269 																																																		OB_INIT: <>
 1270 																																																		OB_PUTCP: <>
 1271 																																																		OB_PUTC2: <>
 1272 																																																		OB_PUTC: <>
 1273 																																																		TREE_VALUE: <>
 1274 																																																		temp_tree_cons: <>
 1275 																																																		SIGNATURE_TYPE: <>
 1276 																																																		TREE_TYPE: 160
 1277 																																																		ALLOCATE_TYPEVEC: <>
 1278 																																																		build_overload_name: 767
 1279 																																																		TREE_USED: <>
 1280 																																																		DEALLOCATE_TYPEVEC: <>
 1281 																																																		obstack_base: <>
 1282 																																																		IDENTIFIER_OPNAME_P: <>
 1283 																																																	TYPE_VALUES: <>
 1284 																																																	build_lang_decl: tree (), <./cc/cp/lex.c 4778>
 1285 																																																		build_decl: 888
 1286 																																																		TREE_PERMANENT: if (), <./cc/cp/decl.c 10271>
 1287 																																																		TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 1288 																																																		obstack_alloc: <>
 1289 																																																		DECL_LANG_SPECIFIC: if (), <./cc/cp/decl.c 2992>
 1290 																																																		LANG_DECL_PERMANENT: else if (), <./cc/cp/decl.c 3026>
 1291 																																																		my_friendly_assert: 379
 1292 																																																		DECL_MAIN_VARIANT: <>
 1293 																																																		DECL_LANGUAGE: <>
 1294 																																																			DECL_LANGUAGE: 1293
 1295 																																																			cp_error_at: 1225
 1296 																																																			cp_error: 259
 1297 																																																		IDENTIFIER_LENGTH: <>
 1298 																																																		IDENTIFIER_POINTER: <>
 1299 																																																		strcmp: 157
 1300 																																																		strncmp: 233
 1301 																																																		TREE_OVERLOADED: <>
 1302 																																																		my_friendly_abort: 357
 1303 																																																		get_identifier: <>
 1304 																																																		build_overload_name: 767
 1305 																																																		DECL_ASSEMBLER_NAME: <>
 1306 																																																	TREE_STATIC: if (), <./cc/stor-layout.c 332>
 1307 																																																	TREE_PUBLIC: 194
 1308 																																																	DECL_EXTERNAL: else if (), <./cc/dwarfout.c 3220>
 1309 																																																	DECL_INTERFACE_KNOWN: if (), <./cc/cp/decl.c 11497>
 1310 																																																	DECL_INLINE: if (), <./cc/dwarfout.c 2737>
 1311 																																																	DECL_THIS_INLINE: <>
 1312 																																																		DECL_VINDEX: <>
 1313 																																																		DECL_ABSTRACT_VIRTUAL_P: <>
 1314 																																																		cp_pedwarn: void (), <./cc/cp/errfn.c 174>
 1315 																																																			cp_thing: 260
 1316 																																																			pedwarn: <>
 1317 																																																		cp_pedwarn_at: void (), <./cc/cp/errfn.c 223>
 1318 																																																			cp_thing: 260
 1319 																																																		TREE_ADDRESSABLE: <>
 1320 																																																	TREE_READONLY: if (), <./cc/cp/decl2.c 1229>
 1321 																																																	TREE_THIS_VOLATILE: <>
 1322 																																																	tinst_for_decl: struct tinst_level (), <./cc/cp/pt.c 975>
 1323 																																																	DECL_SOURCE_FILE: <>
 1324 																																																	DECL_SOURCE_LINE: 182
 1325 																																																	DECL_CLASS_CONTEXT: <>
 1326 																																																	make_decl_rtl: void (), <./cc/varasm.c 470>
 1327 																																																		bc_make_decl_rtl: void (), <./cc/varasm.c 351>
 1328 																																																			TREE_STRING_POINTER: <>
 1329 																																																			DECL_ASSEMBLER_NAME: <>
 1330 																																																			DECL_RTL: <>
 1331 																																																			DECL_REGISTER: <>
 1332 																																																			TREE_CODE: 162
 1333 																																																			DECL_EXTERNAL: else if (), <./cc/dwarfout.c 3220>
 1334 																																																			ASM_FORMAT_PRIVATE_NAME: <>
 1335 																																																			obstack_copy0: <>
 1336 																																																			strlen: <>
 1337 																																																			bc_gen_rtx: rtx (), <./cc/bc-emit.c 832>
 1338 																																																		decode_reg_name: int (), <./cc/varasm.c 410>
 1339 																																																			strip_reg_name: char * (), <./cc/varasm.c 389>
 1340 																																																				strncmp: 233
 1341 																																																				strlen: <>
 1342 																																																			strlen: <>
 1343 																																																			atoi: <>
 1344 																																																			strcmp: 157
 1345 																																																		DECL_ASSEMBLER_NAME: <>
 1346 																																																		IDENTIFIER_POINTER: <>
 1347 																																																		obstack_alloc: <>
 1348 																																																		strlen: <>
 1349 																																																		strcpy: <>
 1350 																																																		DECL_RTL: <>
 1351 																																																		DECL_REGISTER: <>
 1352 																																																		error_with_decl: <>
 1353 																																																		TREE_CODE: 162
 1354 																																																		TYPE_MODE: <>
 1355 																																																		TREE_TYPE: 160
 1356 																																																		HARD_REGNO_MODE_OK: <>
 1357 																																																		DECL_INITIAL: 168
 1358 																																																		TREE_THIS_VOLATILE: <>
 1359 																																																		gen_rtx: <>
 1360 																																																		DECL_MODE: <>
 1361 																																																		REGNO: 93
 1362 																																																		REG_USERVAR_P: <>
 1363 																																																		HARD_REGNO_NREGS: <>
 1364 																																																		init_reg_sets_1: void (), <./cc/regclass.c 364>
 1365 																																																			warning: 281
 1366 																																																			CLEAR_HARD_REG_SET: <>
 1367 																																																			bcopy: <>
 1368 																																																			SET_HARD_REG_BIT: <>
 1369 																																																		globalize_reg: void (), <./cc/regclass.c 527>
 1370 																																																		DECL_SECTION_NAME: <>
 1371 																																																		DECL_COMMON: <>
 1372 																																																		warning_with_decl: <>
 1373 																																																		DECL_EXTERNAL: else if (), <./cc/dwarfout.c 3220>
 1374 																																																		ASM_FORMAT_PRIVATE_NAME: <>
 1375 																																																		obstack_copy0: <>
 1376 																																																		abort: <>
 1377 																																																		TREE_PUBLIC: 194
 1378 																																																		TREE_SIDE_EFFECTS: if (), <./cc/cp/typeck.c 4958>
 1379 																																																		MEM_VOLATILE_P: <>
 1380 																																																		TREE_READONLY: if (), <./cc/cp/decl2.c 1229>
 1381 																																																		RTX_UNCHANGING_P: It is correct to set, <./cc/stmt.c 3489>
 1382 																																																		MEM_IN_STRUCT_P: <>
 1383 																																																		AGGREGATE_TYPE_P: <>
 1384 																																																			fprintf: <>
 1385 																																																		ENCODE_SECTION_INFO: <>
 1386 																																																		GET_MODE: 139
 1387 																																																		PUT_MODE: <>
 1388 																																																	push_overloaded_decl_top_level: <>
 1389 																																																	DECL_INITIAL: 168
 1390 																																																	TYPE_PRECISION: 211
 1391 																																																	TREE_VIA_PUBLIC: <>
 1392 																																																	TREE_VIA_PROTECTED: <>
 1393 																																																	TREE_VIA_VIRTUAL: 1041
 1394 																																																	TREE_PURPOSE: 215
 1395 																																																	hash_tree_cons: tree (), <./cc/cp/tree.c 1040>
 1396 																																																		tree_cons: <>
 1397 																																																		TREE_VIA_PUBLIC: <>
 1398 																																																		TREE_VIA_PROTECTED: <>
 1399 																																																		TREE_VIA_VIRTUAL: 1041
 1400 																																																		list_hash: 1033
 1401 																																																		list_hash_canon: 1038
 1402 																																																	TREE_PARMLIST: <>
 1403 																																																	alloca: <>
 1404 																																																	bzero: <>
 1405 																																																	make_tree_vec: 857
 1406 																																																	build_pointer_type: 390
 1407 																																																	build_reference_type: tree (), <./cc/tree.c 3866>
 1408 																																																		TYPE_REFERENCE_TO: <>
 1409 																																																		TREE_PERMANENT: if (), <./cc/cp/decl.c 10271>
 1410 																																																		make_node: 307
 1411 																																																		TREE_TYPE: 160
 1412 																																																		layout_type: <>
 1413 																																																	layout_type: <>
 1414 																																																	build_offset_type: tree (), <./cc/tree.c 3941>
 1415 																																																		make_node: 307
 1416 																																																		TYPE_OFFSET_BASETYPE: <>
 1417 																																																		TYPE_MAIN_VARIANT: 324
 1418 																																																		TREE_TYPE: 160
 1419 																																																		TYPE_HASH: <>
 1420 																																																		type_hash_canon: 941
 1421 																																																		TYPE_SIZE: if (), <./cc/dwarfout.c 3636>
 1422 																																																		layout_type: <>
 1423 																																																	TYPE_OFFSET_BASETYPE: <>
 1424 																																																	TYPE_CONTEXT: <>
 1425 																																																	make_node: 307
 1426 																																																	TYPE_SIZE: if (), <./cc/dwarfout.c 3636>
 1427 																																																	TYPE_ALIGN: <>
 1428 																																																	TYPE_MODE: <>
 1429 																																																	my_friendly_abort: 357
 1430 																																																	TYPE_DOMAIN: <>
 1431 																																																	build_cplus_array_type: 972
 1432 																																																	DECL_TEMPLATE_PARMS: <>
 1433 																																																	UPT_TEMPLATE: <>
 1434 																																																	UPT_PARMS: <>
 1435 																																																	lookup_template_class: tree (), <./cc/cp/pt.c 573>
 1436 																																																		my_friendly_assert: 379
 1437 																																																		TREE_CODE: 162
 1438 																																																		IDENTIFIER_GLOBAL_VALUE: <>
 1439 																																																		IDENTIFIER_CLASS_VALUE: <>
 1440 																																																		cp_error: 259
 1441 																																																		cp_error_at: 1225
 1442 																																																		DECL_TEMPLATE_PARMS: <>
 1443 																																																		coerce_template_parms: tree (), <./cc/cp/pt.c 337>
 1444 																																																			TREE_CODE: 162
 1445 																																																			TREE_VEC_LENGTH: <>
 1446 																																																			list_length: int (), <./cc/tree.c 1765>
 1447 																																																				TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 1448 																																																			TREE_PURPOSE: 215
 1449 																																																			TREE_VEC_ELT: <>
 1450 																																																			error: 52
 1451 																																																			cp_error_at: 1225
 1452 																																																			copy_node: 874
 1453 																																																			make_tree_vec: 857
 1454 																																																			TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 1455 																																																			TREE_VALUE: <>
 1456 																																																			TREE_CODE_CLASS: switch (), <./cc/dwarfout.c 3160>
 1457 																																																			cp_error: 259
 1458 																																																			groktypename: tree (), <./cc/cp/decl.c 5796>
 1459 																																																				TREE_CODE: 162
 1460 																																																				grokdeclarator: tree (), <./cc/c-decl.c 4130>
 1461 																																																					push_obstacks_nochange: 517
 1462 																																																					allocation_temporary_p: int (), <./cc/tree.c 554>
 1463 																																																					end_temporary_allocation: void (), <./cc/tree.c 462>
 1464 																																																					TREE_CODE: 162
 1465 																																																					TREE_OPERAND: <>
 1466 																																																					IDENTIFIER_POINTER: <>
 1467 																																																					abort: <>
 1468 																																																					TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 1469 																																																					TREE_VALUE: <>
 1470 																																																					error: 52
 1471 																																																					pedwarn: <>
 1472 																																																					TREE_TYPE: 160
 1473 																																																					DECL_MACHINE_ATTRIBUTES: <>
 1474 																																																					lookup_name: tree (), <./cc/cp/decl.c 4532>
 1475 																																																						IDENTIFIER_LOCAL_VALUE: <>
 1476 																																																						IDENTIFIER_GLOBAL_VALUE: <>
 1477 																																																						lookup_name_real: 1230
 1478 																																																					C_TYPE_VARIABLE_SIZE: <>
 1479 																																																					TYPE_MAIN_VARIANT: 324
 1480 																																																					C_TYPEDEF_EXPLICITLY_SIGNED: <>
 1481 																																																					unsigned_type: 699
 1482 																																																					build_complex_type: tree (), <./cc/tree.c 3966>
 1483 																																																						make_node: 307
 1484 																																																						TREE_TYPE: 160
 1485 																																																						TYPE_MAIN_VARIANT: 324
 1486 																																																						TYPE_VOLATILE: <>
 1487 																																																						TYPE_READONLY: 217
 1488 																																																						TYPE_HASH: <>
 1489 																																																						type_hash_canon: 941
 1490 																																																						TYPE_SIZE: if (), <./cc/dwarfout.c 3636>
 1491 																																																						layout_type: <>
 1492 																																																					TYPE_READONLY: 217
 1493 																																																					TYPE_VOLATILE: <>
 1494 																																																					warning: 281
 1495 																																																					signed_type: 701
 1496 																																																					STRIP_TYPE_NOPS: <>
 1497 																																																					integer_zerop: 405
 1498 																																																					constant_expression_warning: void (), <./cc/c-common.c 1363>
 1499 																																																						TREE_CODE: 162
 1500 																																																						TREE_CONSTANT_OVERFLOW: <>
 1501 																																																						pedwarn: <>
 1502 																																																					tree_int_cst_sgn: 688
 1503 																																																					TREE_CONSTANT: if (), <./cc/fold-const.c 3102>
 1504 																																																					fold: <>
 1505 																																																					build: <>
 1506 																																																					convert: 427
 1507 																																																					variable_size: tree (), <./cc/stor-layout.c 98>
 1508 																																																						TREE_CONSTANT: if (), <./cc/fold-const.c 3102>
 1509 																																																						global_bindings_p: int (), <./cc/cp/decl.c 831>
 1510 																																																						contains_placeholder_p: <>
 1511 																																																						save_expr: <>
 1512 																																																						error: 52
 1513 																																																						size_int: <>
 1514 																																																						expand_expr: <>
 1515 																																																						tree_cons: <>
 1516 																																																					build_index_type: tree (), <./cc/tree.c 3685>
 1517 																																																						make_node: 307
 1518 																																																						TYPE_PRECISION: 211
 1519 																																																						TYPE_MIN_VALUE: <>
 1520 																																																						build_int_2: <>
 1521 																																																						TREE_TYPE: 160
 1522 																																																						TYPE_MAX_VALUE: <>
 1523 																																																						convert: 427
 1524 																																																						TYPE_MODE: <>
 1525 																																																						TYPE_SIZE: if (), <./cc/dwarfout.c 3636>
 1526 																																																						TYPE_ALIGN: <>
 1527 																																																						TREE_CODE: 162
 1528 																																																						TREE_INT_CST_LOW: <>
 1529 																																																						INT_CST_LT: <>
 1530 																																																						type_hash_canon: 941
 1531 																																																					TYPE_SIZE: if (), <./cc/dwarfout.c 3636>
 1532 																																																					C_TYPE_BEING_DEFINED: <>
 1533 																																																					build_array_type: 974
 1534 																																																					c_build_type_variant: <>
 1535 																																																					grokparms: tree (), <./cc/c-decl.c 5302>
 1536 																																																						TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 1537 																																																						TREE_PURPOSE: 215
 1538 																																																						TREE_VALUE: <>
 1539 																																																						warning: 281
 1540 																																																						TREE_CODE: 162
 1541 																																																						pedwarn: <>
 1542 																																																						TYPE_SIZE: if (), <./cc/dwarfout.c 3636>
 1543 																																																						DECL_NAME: 250
 1544 																																																						error: 52
 1545 																																																						IDENTIFIER_POINTER: <>
 1546 																																																						TREE_TYPE: 160
 1547 																																																						warn: void (), <./bison/main.c 155>
 1548 																																																							fprintf: <>
 1549 																																																						TYPE_MAIN_VARIANT: 324
 1550 																																																						TREE_PERMANENT: if (), <./cc/cp/decl.c 10271>
 1551 																																																						saveable_tree_cons: <>
 1552 																																																						nreverse: <>
 1553 																																																					build_function_type: 1210
 1554 																																																					build_type_copy: 1006
 1555 																																																					TYPE_STDCALL: <>
 1556 																																																					TYPE_CONTEXT: <>
 1557 																																																					build_pointer_type: 390
 1558 																																																					pop_obstacks: 396
 1559 																																																					build_decl: 888
 1560 																																																					TYPE_DOMAIN: <>
 1561 																																																					C_DECL_VARIABLE_SIZE: <>
 1562 																																																					DECL_ARG_TYPE: <>
 1563 																																																					C_PROMOTING_INTEGER_TYPE_P: if (), <./cc/cp/decl.c 11606>
 1564 																																																					TYPE_PRECISION: 211
 1565 																																																					TREE_UNSIGNED: 678
 1566 																																																					DECL_ARG_TYPE_AS_WRITTEN: <>
 1567 																																																					build_decl_attribute_variant: tree (), <./cc/tree.c 2901>
 1568 																																																						DECL_MACHINE_ATTRIBUTES: <>
 1569 																																																					DECL_STDCALL: <>
 1570 																																																					DECL_IN_SYSTEM_HEADER: <>
 1571 																																																					DECL_EXTERNAL: else if (), <./cc/dwarfout.c 3220>
 1572 																																																					TREE_PUBLIC: 194
 1573 																																																					DECL_PRIVATE_EXTERN: <>
 1574 																																																					tree_last: <>
 1575 																																																					TYPE_ARG_TYPES: 791
 1576 																																																					strcmp: 157
 1577 																																																					DECL_INLINE: if (), <./cc/dwarfout.c 2737>
 1578 																																																					pedwarn_with_decl: <>
 1579 																																																					error_with_decl: <>
 1580 																																																					DECL_SIZE: <>
 1581 																																																					warning_with_decl: <>
 1582 																																																					TREE_STATIC: if (), <./cc/stor-layout.c 332>
 1583 																																																					ITERATOR_P: <>
 1584 																																																					DECL_RELATIVE: <>
 1585 																																																					DECL_REGISTER: <>
 1586 																																																					TREE_READONLY: if (), <./cc/cp/decl2.c 1229>
 1587 																																																					TREE_SIDE_EFFECTS: if (), <./cc/cp/typeck.c 4958>
 1588 																																																					TREE_THIS_VOLATILE: <>
 1589 																																																					malloc: <>
 1590 																																																					strlen: <>
 1591 																																																					DECL_NAME: 250
 1592 																																																					sprintf: <>
 1593 																																																					DECL_ASSEMBLER_NAME: <>
 1594 																																																					get_identifier: <>
 1595 																																																					DECL_DLLIMPORT: <>
 1596 																																																					strncmp: 233
 1597 																																																					realloc: <>
 1598 																																																					C_TYPE_FIELDS_VOLATILE: <>
 1599 																																																					mark_addressable: <>
 1600 																																																				TREE_VALUE: <>
 1601 																																																				TREE_PURPOSE: 215
 1602 																																																				grokdeclarator: tree (), <./cc/cp/decl.c 7599>
 1603 																																																					RIDBIT_RESET_ALL: <>
 1604 																																																					allocation_temporary_p: 1462
 1605 																																																					end_temporary_allocation: 1463
 1606 																																																					TREE_CODE: 162
 1607 																																																					TREE_OPERAND: <>
 1608 																																																					rename: <>
 1609 																																																					my_friendly_assert: 379
 1610 																																																					constructor_name: <>
 1611 																																																					IDENTIFIER_POINTER: <>
 1612 																																																					parmlist_is_exprlist: int (), <./cc/cp/decl.c 9971>
 1613 																																																						TREE_PARMLIST: <>
 1614 																																																						toplevel_bindings_p: int (), <./cc/cp/decl.c 841>
 1615 																																																						TREE_CODE: 162
 1616 																																																						TREE_VALUE: <>
 1617 																																																						TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 1618 																																																					start_decl: tree (), <./cc/cp/decl.c 5841>
 1619 																																																						grokdeclarator: 1460
 1620 																																																						push_obstacks_nochange: 517
 1621 																																																						TREE_CODE: 162
 1622 																																																						list_length: 1446
 1623 																																																						error: 52
 1624 																																																						IDENTIFIER_POINTER: <>
 1625 																																																						DECL_NAME: 250
 1626 																																																						TYPE_SIZE: if (), <./cc/dwarfout.c 3636>
 1627 																																																						TREE_TYPE: 160
 1628 																																																						C_DECL_VARIABLE_SIZE: <>
 1629 																																																						DECL_EXTERNAL: else if (), <./cc/dwarfout.c 3220>
 1630 																																																						warning: 281
 1631 																																																						TREE_STATIC: if (), <./cc/stor-layout.c 332>
 1632 																																																						DECL_INITIAL: 168
 1633 																																																						gen_aux_info_record: void (), <./cc/c-aux-info.c 601>
 1634 																																																							fprintf: <>
 1635 																																																							DECL_SOURCE_FILE: <>
 1636 																																																							DECL_SOURCE_LINE: 182
 1637 																																																							gen_decl: char * (), <./cc/c-aux-info.c 521>
 1638 																																																								DECL_NAME: 250
 1639 																																																								IDENTIFIER_POINTER: <>
 1640 																																																								TREE_THIS_VOLATILE: <>
 1641 																																																								concat: char * (), <./cc/c-aux-info.c 54>
 1642 																																																									strlen: <>
 1643 																																																									xmalloc: pointer_type (), <./cc/protoize.c 653>
 1644 																																																										malloc: <>
 1645 																																																										fprintf: <>
 1646 																																																										exit: 5
 1647 																																																									strcpy: <>
 1648 																																																								TREE_READONLY: if (), <./cc/cp/decl2.c 1229>
 1649 																																																								TREE_CODE: 162
 1650 																																																								gen_formal_list_for_func_def: char * (), <./cc/c-aux-info.c 282>
 1651 																																																									DECL_ARGUMENTS: <>
 1652 																																																									concat: 1641
 1653 																																																									gen_decl: 1637
 1654 																																																									concat3: char * (), <./cc/c-aux-info.c 77>
 1655 																																																										strlen: <>
 1656 																																																										xmalloc: 1643
 1657 																																																										strcpy: <>
 1658 																																																									TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 1659 																																																									deserves_ellipsis: int (), <./cc/c-aux-info.c 246>
 1660 																																																										TYPE_ARG_TYPES: 791
 1661 																																																										TREE_VALUE: <>
 1662 																																																										TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 1663 																																																									TREE_TYPE: 160
 1664 																																																								gen_type: char * (), <./cc/c-aux-info.c 357>
 1665 																																																									TYPE_NAME: 271
 1666 																																																									DECL_NAME: 250
 1667 																																																									IDENTIFIER_POINTER: <>
 1668 																																																									TREE_CODE: 162
 1669 																																																									TYPE_READONLY: 217
 1670 																																																									concat: 1641
 1671 																																																									TYPE_VOLATILE: <>
 1672 																																																									TREE_TYPE: 160
 1673 																																																									concat3: 1654
 1674 																																																									gen_type: 1664
 1675 																																																									TYPE_SIZE: if (), <./cc/dwarfout.c 3636>
 1676 																																																									int_size_in_bytes: <>
 1677 																																																									sprintf: <>
 1678 																																																									gen_formal_list_for_type: char * (), <./cc/c-aux-info.c 162>
 1679 																																																										TYPE_ARG_TYPES: 791
 1680 																																																										TREE_VALUE: <>
 1681 																																																										concat: 1641
 1682 																																																										gen_type: 1664
 1683 																																																										strlen: <>
 1684 																																																										affix_data_type: char * (), <./cc/c-aux-info.c 117>
 1685 																																																											strncmp: 233
 1686 																																																											concat3: 1654
 1687 																																																											concat: 1641
 1688 																																																										TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 1689 																																																										concat3: 1654
 1690 																																																									TYPE_FIELDS: <>
 1691 																																																									gen_decl: 1637
 1692 																																																									TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 1693 																																																									TYPE_VALUES: <>
 1694 																																																									TREE_PURPOSE: 215
 1695 																																																									TREE_UNSIGNED: 678
 1696 																																																									abort: <>
 1697 																																																								TREE_TYPE: 160
 1698 																																																								affix_data_type: 1684
 1699 																																																								DECL_REGISTER: <>
 1700 																																																								TREE_PUBLIC: 194
 1701 																																																							gen_formal_list_for_func_def: 1650
 1702 																																																						TYPE_ARG_TYPES: 791
 1703 																																																						DECL_COMMON: <>
 1704 																																																						decl_attributes: void (), <./cc/c-common.c 325>
 1705 																																																							init_attributes: void (), <./cc/c-common.c 300>
 1706 																																																								add_attribute: void (), <./cc/c-common.c 274>
 1707 																																																									get_identifier: <>
 1708 																																																									sprintf: <>
 1709 																																																							TREE_CODE_CLASS: switch (), <./cc/dwarfout.c 3160>
 1710 																																																							TREE_CODE: 162
 1711 																																																							TREE_TYPE: 160
 1712 																																																							chainon: tree (), <./cc/tree.c 1782>
 1713 																																																								TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 1714 																																																								abort: <>
 1715 																																																							TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 1716 																																																							TREE_PURPOSE: 215
 1717 																																																							TREE_VALUE: <>
 1718 																																																							valid_machine_attribute: int (), <./cc/tree.c 2971>
 1719 																																																								DECL_MACHINE_ATTRIBUTES: <>
 1720 																																																								TYPE_ATTRIBUTES: <>
 1721 																																																								TREE_CODE: 162
 1722 																																																								abort: <>
 1723 																																																								VALID_MACHINE_DECL_ATTRIBUTE: <>
 1724 																																																								lookup_attribute: 222
 1725 																																																								IDENTIFIER_POINTER: <>
 1726 																																																								TREE_VALUE: <>
 1727 																																																								tree_cons: <>
 1728 																																																								build_decl_attribute_variant: 1567
 1729 																																																								VALID_MACHINE_TYPE_ATTRIBUTE: <>
 1730 																																																								build_type_attribute_variant: tree (), <./cc/tree.c 2914>
 1731 																																																									attribute_list_equal: 945
 1732 																																																									TYPE_ATTRIBUTES: <>
 1733 																																																									TYPE_OBSTACK: <>
 1734 																																																									copy_node: 874
 1735 																																																									TYPE_POINTER_TO: <>
 1736 																																																									TYPE_REFERENCE_TO: <>
 1737 																																																									TYPE_MAIN_VARIANT: 324
 1738 																																																									TYPE_NEXT_VARIANT: <>
 1739 																																																									TYPE_READONLY: 217
 1740 																																																									TYPE_VOLATILE: <>
 1741 																																																									TYPE_HASH: <>
 1742 																																																									TREE_CODE: 162
 1743 																																																									TREE_TYPE: 160
 1744 																																																									attribute_hash_list: int (), <./cc/tree.c 3361>
 1745 																																																										TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 1746 																																																										TYPE_HASH: <>
 1747 																																																										TREE_PURPOSE: 215
 1748 																																																									TYPE_ARG_TYPES: 791
 1749 																																																									TYPE_DOMAIN: <>
 1750 																																																									TYPE_MAX_VALUE: <>
 1751 																																																									TYPE_PRECISION: 211
 1752 																																																									type_hash_canon: 941
 1753 																																																									build_type_variant: 1000
 1754 																																																								TREE_TYPE: 160
 1755 																																																								build_pointer_type: 390
 1756 																																																							warning: 281
 1757 																																																							IDENTIFIER_POINTER: <>
 1758 																																																							list_length: 1446
 1759 																																																							error: 52
 1760 																																																							TYPE_PACKED: <>
 1761 																																																							DECL_PACKED: <>
 1762 																																																							DECL_COMMON: <>
 1763 																																																							TREE_THIS_VOLATILE: <>
 1764 																																																							build_pointer_type: 390
 1765 																																																							build_type_variant: 1000
 1766 																																																							TREE_READONLY: if (), <./cc/cp/decl2.c 1229>
 1767 																																																							TREE_USED: <>
 1768 																																																							TYPE_MODE: <>
 1769 																																																							DECL_MODE: <>
 1770 																																																							TYPE_FIELDS: <>
 1771 																																																							TYPE_TRANSPARENT_UNION: <>
 1772 																																																							DECL_TRANSPARENT_UNION: <>
 1773 																																																							decl_function_context: <>
 1774 																																																							DECL_STATIC_CONSTRUCTOR: <>
 1775 																																																							DECL_STATIC_DESTRUCTOR: <>
 1776 																																																							strlen: <>
 1777 																																																							alloca: <>
 1778 																																																							strcpy: <>
 1779 																																																							strcmp: 157
 1780 																																																							GET_MODE_NAME: <>
 1781 																																																							type_for_mode: <>
 1782 																																																							TREE_UNSIGNED: 678
 1783 																																																							DECL_SIZE: <>
 1784 																																																							layout_decl: <>
 1785 																																																							error_with_decl: <>
 1786 																																																							DECL_SECTION_NAME: <>
 1787 																																																							TREE_STRING_POINTER: <>
 1788 																																																							size_int: <>
 1789 																																																							TREE_OPERAND: <>
 1790 																																																							TREE_INT_CST_LOW: <>
 1791 																																																							exact_log2:  () >= 0 (nzb (true_code == EQ && true_val == const0_rtx && () (reg_mentioned_p () (known_cond (), pc_rtx, pc_rtx, 0, 0 (reg_mentioned_p () (known_cond (), pc_rtx, pc_rtx, 0, 0 (XEXP (), swapped false true (XEXP (), swapped true false (x, 1 (x, 2 (cond (comparison_p && reversible_comparison_p () && () (true_code (XEXP (), gen_binary () (XEXP (), false (XEXP (), true (x, 0 (rtx_equal_p () && ! side_effects_p () (GET_MODE_CLASS () == MODE_INT && GET_CODE () == NEG && rtx_equal_p () && comparison_p && rtx_equal_p () && ! side_effects_p () (true_code (ABS, mode, mode, true (NEG, mode, mode, gen_unary () (() && comparison_p && rtx_equal_p () && rtx_equal_p () && ! side_effects_p () (true_code (SMAX, mode, true, false (SMIN, mode, true, false (UMAX, mode, true, false (UMIN, mode, true, false (comparison_p && mode != VOIDmode && ! side_effects_p () (true, SET (false, SET (cond, 0 (cond, 1 (() && rtx_equal_p () (t, 1 (t (() && rtx_equal_p () (t, 0 (t (GET_CODE () == SIGN_EXTEND && () && GET_CODE () == SUBREG && subreg_lowpart_p () && rtx_equal_p () && () (XEXP (), 1 (XEXP () (XEXP () (GET_CODE () == SIGN_EXTEND && () && GET_CODE () == SUBREG && subreg_lowpart_p () && rtx_equal_p () && () (XEXP (), 0 (XEXP () (XEXP () (GET_CODE () == ZERO_EXTEND && () && GET_CODE () == SUBREG && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT && subreg_lowpart_p () && rtx_equal_p () && () (XEXP (), 1 (XEXP () (XEXP () (GET_CODE () == ZERO_EXTEND && () && GET_CODE () == SUBREG && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT && subreg_lowpart_p () && rtx_equal_p () && () (XEXP (), 0 (XEXP () (XEXP () (z (gen_binary (), pc_rtx, pc_rtx, 0, 0 (MULT, m, temp, gen_binary () (temp, pc_rtx, pc_rtx, 0, 0 (op, m, gen_lowpart_for_combine (), temp (extend_op != NIL (extend_op, mode, m, temp (true_code == NE && XEXP () == const0_rtx && false == const0_rtx && GET_CODE () == CONST_INT && () (NULL_RTX, ASHIFT, mode, gen_lowpart_for_combine (), i (x (x (x (src (src (dest (GET_CODE () == PC && GET_CODE () == RETURN (GET_MODE_CLASS () == MODE_INT (src, mode, GET_MODE_MASK (), NULL_RTX, 0 (() && () != 0 && () && GET_RTX_CLASS () == && rtx_equal_p () (*cc_use (dest (GET_CODE () == COMPARE (src, 0 (src, 1 (old_code, & op0, & op1 (new_code, op0, op1 (compare_mode != GET_MODE () (dest (REG, compare_mode, regno (regno < FIRST_PSEUDO_REGISTER || () (regno >= FIRST_PSEUDO_REGISTER (regno_reg_rtx[regno], new_dest (SET_DEST (), new_dest (XEXP (), new_dest (new_code != old_code (*cc_use, gen_rtx_combine () (() && ! other_changed && op1 == const0_rtx && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT && exact_log2 () >= 0 (other_insn (() (*cc_use, old_code (XOR, GET_MODE (), op0, GEN_INT () (other_changed (op1 == const0_rtx && dest == cc0_rtx (SET_SRC (), op0 (GET_CODE () != COMPARE || GET_MODE () != compare_mode (SET_SRC (), gen_rtx_combine () (x (XEXP (), op0 (XEXP (), op1 (src, SET (SET_SRC (), src (GET_CODE () == SUBREG && subreg_lowpart_p () && GET_RTX_CLASS () != && () && () && ! () && () (SET_DEST (), gen_lowpart_for_combine () (SET_SRC (), SUBREG_REG () (x (x (GET_CODE () == SUBREG && subreg_lowpart_p () && LOAD_EXTEND_OP () != NIL && SUBREG_WORD () == 0 && () && GET_CODE () == MEM (SET_SRC (), gen_rtx_combine () (x (GET_CODE () != PC && GET_CODE () == IF_THEN_ELSE && GET_MODE_CLASS () == MODE_INT && () && XEXP () == const0_rtx && GET_MODE () == GET_MODE () && ! can_conditionally_move_p () && () && ! side_effects_p () (GET_CODE () == NE XEXP () XEXP () (GET_CODE () == NE XEXP () XEXP () (GET_CODE () == IOR && rtx_equal_p () (true, 1 (GET_CODE () == IOR && rtx_equal_p () (true, 0 (GET_CODE () == IOR && rtx_equal_p () (false, 1 (GET_CODE () == IOR && rtx_equal_p () (false, 0 (AND, GET_MODE (), XEXP (), true (AND, GET_MODE (), gen_unary (), false (SET_SRC (), gen_binary () (x (GET_CODE () == CLOBBER && XEXP () == const0_rtx (GET_CODE () == CLOBBER && XEXP () == const0_rtx (x (x, last (x (x, 0 (x, 1 (GET_CODE () (GET_CODE () == XOR && rtx_equal_p () && ! side_effects_p () (AND, mode, gen_unary (), op1 (GET_CODE () == XOR && rtx_equal_p () && ! side_effects_p () (AND, mode, gen_unary (), op1 (GET_CODE () == NOT && GET_CODE () == XOR && rtx_equal_p () && ! side_effects_p () (AND, mode, XEXP (), op1 (GET_CODE () == NOT && GET_CODE () == XOR && rtx_equal_p () && ! side_effects_p () (AND, mode, XEXP (), op1 (GET_CODE () == CONST_INT (x, mode, op0, INTVAL () (last && GET_CODE () == IOR && GET_CODE () == AND && GET_CODE () == CONST_INT && GET_CODE () == CONST_INT (IOR, mode, gen_binary (), op1 (GET_CODE () != AND (GET_RTX_CLASS () == || GET_RTX_CLASS () == (x, 0 (x, 1 (GET_CODE () == IOR && () && ! side_effects_p () && ! side_effects_p () (GET_CODE () == IOR || GET_CODE () == XOR (gen_binary () (GET_CODE () != AND (GET_CODE () == IOR || GET_CODE () == XOR (gen_binary () (GET_CODE () == NOT && GET_CODE () == XOR (gen_binary () (GET_CODE () == NOT && GET_CODE () == XOR (gen_binary () (GET_CODE () == CONST_INT && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT && () == 0 (GET_CODE () == AND && () && ! side_effects_p () && ! side_effects_p () (GET_CODE () == AND (gen_binary () (GET_CODE () != IOR (GET_CODE () == AND (gen_binary () (GET_CODE () != IOR (() && rtx_equal_p () && GET_CODE () == CONST_INT && GET_CODE () == CONST_INT && () (ROTATE, mode, XEXP (), () (GET_CODE () == CONST_INT && GET_CODE () == ASHIFTRT && GET_CODE () == PLUS && GET_CODE () == CONST_INT && GET_CODE () == CONST_INT && INTVAL () < HOST_BITS_PER_WIDE_INT (XEXP () (op1 (mask >> count == INTVAL () && () == 0 (XEXP (), GEN_INT () (GET_CODE () == NOT (op0, 0 (GET_CODE () == NOT (op1, 0 (num_negated == 2 (XEXP (), op0 (XEXP (), op1 (num_negated == 1 (NOT, mode, mode, gen_binary () (GET_CODE () == AND && rtx_equal_p () && ! side_effects_p () (AND, mode, gen_unary (), op1 (GET_CODE () == AND && rtx_equal_p () && ! side_effects_p () (AND, mode, gen_unary (), op1 (op1 == const1_rtx && GET_RTX_CLASS () == && reversible_comparison_p () (reverse_condition (), mode, XEXP (), XEXP () (op1 == const1_rtx && GET_CODE () == LSHIFTRT && GET_CODE () == CONST_INT && INTVAL () == GET_MODE_BITSIZE () - 1 (GE, mode, XEXP (), const0_rtx (GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT && () && op1 == const_true_rtx && GET_RTX_CLASS () == && reversible_comparison_p () (reverse_condition (), mode, XEXP (), XEXP () (x (GET_CODE () (GET_CODE () == CONST_INT (GET_MODE_SIZE () > UNITS_PER_WORD (GET_MODE () (len == 0 (GET_CODE () == CLOBBER (x, 0 (GET_CODE () != CONST_INT || GET_CODE () != CONST_INT || GET_MODE () == VOIDmode (XEXP () (XEXP () (len + pos > GET_MODE_BITSIZE () (XEXP (), gen_rtx () (BITS_BIG_ENDIAN (GET_MODE () (GET_MODE () (modewidth >= pos - len (NULL_RTX, unsignedp LSHIFTRT ASHIFTRT, GET_MODE (), simplify_shift_const (), modewidth - len (unsignedp && len < HOST_BITS_PER_WIDE_INT (NULL_RTX, GET_MODE (), simplify_shift_const (), () - 1 (GET_CODE () == CLOBBER (x (1 (GET_CODE () == STRICT_LOW_PART && GET_CODE () == SUBREG (XEXP () (GET_MODE () (GET_CODE () == ZERO_EXTRACT && GET_CODE () == CONST_INT (SET_DEST (), 0 (XEXP () (SET_DEST (), 2 (GET_CODE () == CONST_INT && INTVAL () + len > GET_MODE_BITSIZE () (USE, GET_MODE (), inner (BITS_BIG_ENDIAN (GET_CODE () == CONST_INT (GET_MODE_BITSIZE () - len - INTVAL () (GET_CODE () == MINUS && GET_CODE () == CONST_INT && () (pos, 0 (MINUS, GET_MODE (), GEN_INT (), pos (GET_CODE () == SUBREG && () (SET, VOIDmode, SUBREG_REG (), gen_lowpart_for_combine () (GET_CODE () == SUBREG && subreg_lowpart_p () (inner (inner (len < HOST_BITS_PER_WIDE_INT (() - 1 (SET, VOIDmode, copy_rtx (), gen_binary () (mode, inner, pos, pos_rtx, len, unsignedp, in_dest, in_compare (inner (len, MODE_INT, 1 (GET_CODE () == USE (inner, 0 (GET_CODE () == SUBREG && subreg_lowpart_p () (GET_CODE () == MEM (SUBREG_REG () (inner (inner (pos_rtx && GET_CODE () == CONST_INT (pos_rtx (tmode != BLKmode && ! () && () (GET_CODE () == MEM (BYTES_BIG_ENDIAN (GET_MODE_BITSIZE () - len - pos (MEM, tmode, plus_constant () (new (inner (new (inner (new (inner (GET_CODE () == REG (tmode != inner_mode (SUBREG, tmode, inner, () (inner, tmode, len >= HOST_BITS_PER_WIDE_INT GET_MODE_MASK () () - 1, NULL_RTX, 0 (in_dest (GET_CODE () == MEM new () (mode == tmode new gen_rtx_combine () (pos_rtx == 0 && pos == 0 && ! in_dest && ! in_compare && ! spans_byte && unsignedp ( ! spans_byte && () (in_dest (int (int (int ( ! in_dest && unsignedp (int (int (int ( ! in_dest && ! unsignedp (int (int (int (mode != VOIDmode && GET_MODE_SIZE () < GET_MODE_SIZE () (pos_rtx && GET_MODE () != VOIDmode && GET_MODE_SIZE () < GET_MODE_SIZE () (pos_rtx (GET_CODE () != MEM || () (BITS_BIG_ENDIAN (pos_rtx == 0 (MAX () - len - pos (MINUS, GET_MODE (), GEN_INT (), pos_rtx (wanted_mem_mode != VOIDmode && GET_MODE_SIZE () < GET_MODE_SIZE () && () (BYTES_BIG_ENDIAN && ! spans_byte && GET_MODE_SIZE () < GET_MODE_SIZE () (is_mode (inner_mode (pos_rtx == 0 (wanted_mem_mode (BYTES_BIG_ENDIAN != BITS_BIG_ENDIAN && ! spans_byte && is_mode != wanted_mem_mode (GET_MODE_SIZE () - GET_MODE_SIZE () - offset (offset != 0 || inner_mode != wanted_mem_mode (MEM, wanted_mem_mode, plus_constant () (newmem (inner (newmem (inner (newmem (inner (GET_CODE () != MEM (inner, extraction_mode, pos_rtx || len + orig_pos >= HOST_BITS_PER_WIDE_INT GET_MODE_MASK () () << orig_pos, NULL_RTX, 0 (pos_rtx != 0 && GET_MODE_SIZE () > GET_MODE_SIZE () (ZERO_EXTEND, pos_mode, pos_rtx (pos_rtx != 0 && GET_MODE_SIZE () < GET_MODE_SIZE () (pos_mode, pos_rtx (pos_rtx == 0 && orig_pos_rtx != 0 && INTVAL () == pos (pos_rtx == 0 (pos (unsignedp ZERO_EXTRACT SIGN_EXTRACT, extraction_mode, inner, GEN_INT (), pos_rtx ( ! in_dest (mode, new (x, count (x (x (code (GET_CODE () == CONST_INT && INTVAL () >= count (NULL_RTX, ASHIFT, mode, XEXP (), INTVAL () - count (() != 0 (code, mode, mode, tem (GET_CODE () == CONST_INT && () == 0 && () != 0 (code, mode, tem, GEN_INT () (x, in_code (x (x (mode (code == MEM || code == PLUS || code == MINUS MEM () COMPARE in_code == COMPARE SET in_code (code (in_code == MEM && GET_CODE () == CONST_INT && INTVAL () < HOST_BITS_PER_WIDE_INT && INTVAL () >= 0 (XEXP (), next_code (MULT, mode, new, GEN_INT () (GET_CODE () != CONST_INT (GET_CODE () == LSHIFTRT && () >= 0 (XEXP (), next_code (mode, new, 0, XEXP (), i, 1, 0, in_code == COMPARE (GET_CODE () == SUBREG && subreg_lowpart_p () && GET_CODE () == LSHIFTRT && () >= 0 (XEXP (), next_code (GET_MODE (), new, 0, XEXP (), i, 1, 0, in_code == COMPARE (() && GET_CODE () == LSHIFTRT && GET_CODE () == LSHIFTRT && () >= 0 (GET_CODE (), mode, gen_rtx (), gen_rtx () (new, in_code (GET_CODE () == ROTATE && GET_CODE () == CONST_INT && () >= 0 && i <= INTVAL () (XEXP (), next_code (mode, new, (), NULL_RTX, i, 1, 0, in_code == COMPARE (ashr_optab handlers[() mode]insn_code != CODE_FOR_nothing && () && GET_CODE () == LSHIFTRT && GET_CODE () == CONST_INT && INTVAL () >= 0 && INTVAL () < HOST_BITS_PER_WIDE_INT && mode_width <= HOST_BITS_PER_WIDE_INT (mode (XEXP () (() == 0 (XEXP (), gen_rtx_combine () (() >= 0 (mode, make_compound_operation (), 0, NULL_RTX, i, 1, 0, in_code == COMPARE (in_code == COMPARE && () >= 0 (mode, make_compound_operation (), i, NULL_RTX, 1, 1, 0, 1 (ashr_optab handlers[() mode]insn_code == CODE_FOR_nothing && lshr_optab handlers[() mode]insn_code != CODE_FOR_nothing && mode_width <= HOST_BITS_PER_WIDE_INT && () == 0 (ASHIFTRT, mode, make_compound_operation (), XEXP () (x, 0 (x, 1 (GET_CODE () == CONST_INT && GET_CODE () == ASHIFT && GET_CODE () == CONST_INT && INTVAL () >= INTVAL () (XEXP (), next_code (mode, new, INTVAL () - INTVAL (), NULL_RTX, mode_width - INTVAL (), code == LSHIFTRT, 0, in_code == COMPARE (GET_RTX_CLASS () != && ! () && GET_CODE () == CONST_INT && INTVAL () < HOST_BITS_PER_WIDE_INT && () != 0 (mode, make_compound_operation (), 0, NULL_RTX, mode_width - INTVAL (), code == LSHIFTRT, 0, in_code == COMPARE (SUBREG_REG (), in_code (GET_CODE () != GET_CODE () && GET_MODE_SIZE () < GET_MODE_SIZE () && subreg_lowpart_p () (tem, mode, GET_MODE_MASK (), NULL_RTX, 0 (GET_CODE () != SUBREG (newer, in_code (new (mode, new (x (code (i 0 i < GET_RTX_LENGTH () i ++ (fmt[i] == (XEXP (), next_code (XEXP (), new (m, plen (m & - m (pos < 0 (() + 1 (*plen <= 0 (x, mode, mask, reg, just_select (x (code == CALL (() mode GET_MODE () (() && GET_MODE_BITSIZE () < GET_MODE_BITSIZE () (x (op_mode (op_mode (op_mode (GET_MODE_BITSIZE () >= HOST_BITS_PER_WIDE_INT GET_MODE_MASK () () - 1 (HOST_WIDE_INT (x, mode ( ! just_select && () == 0 (GET_CODE () == CONST_INT (x (mode (width > 0 && width < HOST_BITS_PER_WIDE_INT && () != 0 (HOST_WIDE_INT (cval (GET_MODE_SIZE () < GET_MODE_SIZE () && () == 0 (mode, x (GET_MODE () == mode && code != SUBREG && () == 0 (code ( ! BITS_BIG_ENDIAN && () == 0 (XEXP (), mode, mask, reg, next_select (x (GET_CODE () != code (x, mode, mask, reg, next_select (reg != 0 && () (subreg_lowpart_p () && () (SUBREG_REG (), mode, mask, reg, next_select (GET_CODE () == CONST_INT (x, op_mode, XEXP (), mask & INTVAL () (GET_CODE () == AND && GET_CODE () == CONST_INT && INTVAL () == mask (x, 0 (GET_CODE () == AND && GET_CODE () == CONST_INT && GET_MODE_MASK () != mask && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT (INTVAL () | () (GET_MODE () (width > 0 && width < HOST_BITS_PER_WIDE_INT && () != 0 (HOST_WIDE_INT (AND, GET_MODE (), XEXP (), GEN_INT () (rtx_cost () < rtx_cost () (mode (width < HOST_BITS_PER_WIDE_INT && () != 0 (HOST_WIDE_INT (GET_CODE () == CONST_INT && exact_log2 () >= 0 && () == 0 && () != 0 (plus_constant (), mode, mask, reg, next_select (GET_CODE () == LSHIFTRT && GET_CODE () == CONST_INT && INTVAL () >= 0 && INTVAL () < HOST_BITS_PER_WIDE_INT && GET_CODE () == CONST_INT && () && () (() << INTVAL () (GET_CODE (), GET_MODE (), XEXP (), temp (LSHIFTRT, GET_MODE (), temp, XEXP () (x, mode, mask, reg, next_select (op_mode, force_to_mode () (op_mode, force_to_mode () (GET_CODE () == CONST_INT && () && () != 0 (INTVAL () & mask (op_mode != GET_MODE () || op0 != XEXP () || op1 != XEXP () (code, op_mode, op0, op1 ( ! () && ! () (GET_CODE () == CONST_INT && INTVAL () >= 0 && INTVAL () < GET_MODE_BITSIZE () && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT (XEXP () (op_mode, force_to_mode () (op_mode != GET_MODE () || op0 != XEXP () (code, op_mode, op0, XEXP () (GET_CODE () == CONST_INT && INTVAL () < HOST_BITS_PER_WIDE_INT && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT (x, 0 (XEXP () (GET_MODE_BITSIZE () > HOST_BITS_PER_WIDE_INT || () != 0 (x (inner, op_mode, mask, reg, next_select (GET_MODE () != op_mode || inner != XEXP () (LSHIFTRT, op_mode, inner, XEXP () (GET_CODE () == LSHIFTRT && GET_CODE () == CONST_INT && () && exact_log2 () >= 0 && () (LSHIFTRT, GET_MODE (), XEXP (), GEN_INT () (GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT && () (XEXP (), mode, mask, reg, next_select (GET_CODE () == CONST_INT && INTVAL () >= 0 && INTVAL () < HOST_BITS_PER_WIDE_INT (GET_MODE_BITSIZE () > HOST_BITS_PER_WIDE_INT (HOST_WIDE_INT (GET_MODE_BITSIZE () - INTVAL () < HOST_BITS_PER_WIDE_INT (XEXP () (GET_MODE () (GET_MODE () (XEXP () (() == 0 || () >= 0 (x, LSHIFTRT, GET_MODE (), XEXP (), i < 0 INTVAL () GET_MODE_BITSIZE () - 1 - i (GET_CODE () != ASHIFTRT (x, mode, mask, reg, next_select (mask == 1 (LSHIFTRT, GET_MODE (), XEXP (), XEXP () (() && GET_CODE () == CONST_INT && INTVAL () >= 0 && () && GET_CODE () == ASHIFT && GET_CODE () == CONST_INT && INTVAL () == INTVAL () (XEXP (), mode, mask, reg, next_select (GET_CODE () == CONST_INT && INTVAL () >= 0 (code == ROTATE ROTATERT ROTATE, GET_MODE (), GEN_INT (), XEXP () (temp && GET_CODE () == CONST_INT (XEXP (), force_to_mode () (mask == 1 (XEXP (), mode, mask, reg, just_select (GET_CODE () == LSHIFTRT && GET_CODE () == CONST_INT && INTVAL () >= 0 && () && INTVAL () < HOST_BITS_PER_WIDE_INT (mask << INTVAL () (XOR, GET_MODE (), XEXP (), temp (LSHIFTRT, GET_MODE (), temp, XEXP () (x, mode, mask, reg, next_select (op_mode, force_to_mode () (op_mode != GET_MODE () || op0 != XEXP () (code, op_mode, op_mode, op0 (() == 0 && XEXP () == const0_rtx && () == 0 (XEXP (), mode, mask, reg, next_select (XEXP (), gen_lowpart_for_combine () (XEXP (), gen_lowpart_for_combine () (mode, x (x, ptrue, pfalse (x (x (mode (GET_RTX_CLASS () == && () != 0 (code, mode, GET_MODE (), true0 (code, mode, GET_MODE (), false0 (code == COMPARE (GET_RTX_CLASS () == || GET_RTX_CLASS () == || GET_RTX_CLASS () == (XEXP (), & true0, & false0 (XEXP (), & true1, & false1 (() && ! () (code, mode, true0, true1 (code, mode, false0, false1 (() && GET_CODE () == MULT && GET_CODE () == MULT (XEXP (), 1 (XEXP (), 1 (XEXP (), 0 (XEXP (), 0 (GET_RTX_CLASS () == && GET_RTX_CLASS () == && reversible_comparison_p () && () && ! side_effects_p () (MULT, mode, op0, const_true_rtx (MULT, mode, (), const_true_rtx (() && GET_CODE () == MULT && GET_CODE () == MULT (XEXP (), 0 (XEXP (), 0 (GET_RTX_CLASS () == && GET_RTX_CLASS () == && reversible_comparison_p () && () && ! side_effects_p () (code == IF_THEN_ELSE (x, 0 (x, 1 (x, 2 (GET_CODE () == NE && XEXP () == const0_rtx (cond0, 0 (GET_CODE () == EQ && XEXP () == const0_rtx (x, 2 (x, 1 (cond0, 0 (code == SUBREG && GET_MODE_CLASS () == MODE_INT && GET_MODE_CLASS () == MODE_INT && GET_MODE_SIZE () <= GET_MODE_SIZE () && 0 != () (true0, mode, GET_MODE_MASK (), NULL_RTX, 0 (false0, mode, GET_MODE_MASK (), NULL_RTX, 0 (CONSTANT_P () || () (num_sign_bit_copies () == size (exact_log2 () >= 0 (nz (x, cond, reg, val (x (side_effects_p () (cond == EQ && rtx_equal_p () (code == ABS && rtx_equal_p () && val == const0_rtx (cond (x, 0 (NEG, GET_MODE (), GET_MODE (), XEXP () (GET_RTX_CLASS () == || GET_RTX_CLASS () == (rtx_equal_p () (cond (rtx_equal_p () && rtx_equal_p () (GET_RTX_CLASS () == (comparison_dominates_p () const_true_rtx () (code == SMAX || code == SMIN || code == UMIN || code == UMAX (code == UMIN || code == UMAX (code == SMAX || code == UMAX (cond (cond (x, 1 (x, 0 (x, 1 (x, 0 (code (i GET_RTX_LENGTH () - 1 i >= 0 i -- (fmt[i] == (XEXP (), known_cond () (fmt[i] == (j XVECLEN () - 1 j >= 0 j -- (XVECEXP (), known_cond () (x (x (x (GET_CODE () == AND && GET_CODE () == ROTATE && GET_CODE () == CONST_INT && INTVAL () == -2 && () (VOIDmode, dest, 0, XEXP (), 1, 1, 1, 0 (SET, VOIDmode, assign, const0_rtx (GET_CODE () == AND && GET_CODE () == SUBREG && subreg_lowpart_p () && () && GET_CODE () == ROTATE && INTVAL () == -2 && () (VOIDmode, dest, 0, XEXP (), 1, 1, 1, 0 (SET, VOIDmode, assign, const0_rtx (GET_CODE () == IOR && GET_CODE () == ASHIFT && XEXP () == const1_rtx && () (VOIDmode, dest, 0, XEXP (), 1, 1, 1, 0 (SET, VOIDmode, assign, const1_rtx (GET_CODE () == IOR && GET_CODE () == AND && GET_CODE () == CONST_INT && () (XEXP () (src, 1 (GET_CODE () == IOR && GET_CODE () == AND && GET_CODE () == CONST_INT && () (XEXP () (src, 0 (c1 ^ GET_MODE_MASK (), & len (pos < 0 || pos + len > GET_MODE_BITSIZE () || () (VOIDmode, dest, pos, NULL_RTX, len, 1, 1, 0 (GET_CODE () == STRICT_LOW_PART GET_MODE () GET_MODE () (simplify_shift_const (), mode, GET_MODE_BITSIZE () >= HOST_BITS_PER_WIDE_INT GET_MODE_MASK () () - 1, dest, 0 (SET, VOIDmode, assign, src (x (x (FLOAT_MODE_P () (code != IOR && code != AND && code != XOR && code != PLUS && code != MINUS (x, 0 (x, 1 (GET_RTX_CLASS () == || GET_RTX_CLASS () == (lhs (rhs (lhs (inner_code != GET_CODE () (inner_code (code == PLUS || code == MINUS (code != PLUS && code != MINUS (GET_MODE () != GET_MODE () || SUBREG_WORD () != SUBREG_WORD () || ! subreg_lowpart_p () || () || () || GET_MODE_SIZE () > UNITS_PER_WORD (code, GET_MODE (), SUBREG_REG (), SUBREG_REG () (GET_MODE (), tem (GET_RTX_CLASS () == && rtx_equal_p () (lhs, 0 (lhs, 1 (rhs, 1 (GET_RTX_CLASS () == && rtx_equal_p () (lhs, 0 (lhs, 1 (rhs, 0 (GET_RTX_CLASS () == && rtx_equal_p () (lhs, 1 (lhs, 0 (rhs, 1 (rtx_equal_p () (lhs, 1 (lhs, 0 (rhs, 0 (code, GET_MODE (), lhs, rhs (code == XOR && inner_code == IOR (NOT, GET_MODE (), GET_MODE (), other (inner_code, GET_MODE (), apply_distributive_law (), other (x, mode, varop, constop (mode (varop, mode, constop, NULL_RTX, 0 (GET_CODE () == CLOBBER || GET_CODE () == CONST_INT (varop, mode (mode (BITS_PER_WORD < HOST_BITS_PER_WIDE_INT && BITS_PER_WORD == width && () (() () << width (constop == 0 (GET_CODE () == NEG && nonzero_bits () == 1 && () >= 0 (NULL_RTX, ASHIFT, mode, XEXP (), i (GET_CODE () == IOR || GET_CODE () == XOR (mode, apply_distributive_law () (x && GET_CODE () == SUBREG && GET_MODE () == mode && SUBREG_REG () == varop (x, 0 (mode, varop (GET_CODE () == CLOBBER (constop == nonzero (x == 0 || GET_CODE () != AND || GET_MODE () != mode (AND, mode, varop, GEN_INT () (GET_CODE () != CONST_INT || INTVAL () != constop (XEXP (), GEN_INT () (XEXP (), varop (x, mode (mode (mode (FLOAT_MODE_P () || FLOAT_MODE_P () (GET_MODE_BITSIZE () > mode_width (x (mode (mode (mode_width > HOST_BITS_PER_WIDE_INT (GET_MODE () != VOIDmode && GET_MODE () != mode && GET_MODE_BITSIZE () <= BITS_PER_WORD && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT && GET_MODE_BITSIZE () > GET_MODE_BITSIZE () (x, GET_MODE () (mode (GET_MODE () (x (code (POINTERS_EXTEND_UNSIGNED && GET_MODE () == Pmode && REGNO_POINTER_FLAG () (ptr_mode (x == stack_pointer_rtx (PUSH_ROUNDING (), sp_alignment (sp_alignment - 1 (reg_last_set_value[REGNO ()] != 0 && reg_last_set_mode[REGNO ()] == mode && () && INSN_CUID () < subst_low_cuid (x (x (tem (GET_MODE_BITSIZE () < mode_width && GET_CODE () == CONST_INT && INTVAL () > 0 && 0 != () (INTVAL () | () (tem, mode (nonzero_sign_valid && reg_nonzero_bits[REGNO ()](x (INTVAL () > 0 && mode_width < BITS_PER_WORD && 0 != () (INTVAL () | () (x (LOAD_EXTEND_OP () == ZERO_EXTEND (GET_MODE () (GET_MODE_CLASS () == MODE_INT && mode_width <= HOST_BITS_PER_WIDE_INT (num_sign_bit_copies () == GET_MODE_BITSIZE () (GET_MODE_SIZE () < mode_width (GET_MODE_MASK () & GET_MODE_MASK () (num_sign_bit_copies () == GET_MODE_BITSIZE () (nonzero_bits () & GET_MODE_MASK () (XEXP (), mode (GET_MODE () != VOIDmode (GET_MODE () (XEXP (), mode (GET_MODE () != VOIDmode (GET_MODE () (inner_nz & () (GET_MODE_MASK () & GET_MODE_MASK () (nonzero_bits () & nonzero_bits () (nonzero_bits () | nonzero_bits () (XEXP (), mode (XEXP (), mode (nz0 (nz1 (nz0 & - nz0 (nz1 & - nz1 (nz0 & () (nz1 & () (code (width0, width1 (low0, low1 (low0, low1 ( ! op0_maybe_minusp && ! op1_maybe_minusp ( ! op0_maybe_minusp && ! op1_maybe_minusp (width0, width1 (low0, low1 (width0, width1 (low0, low1 (result_width < mode_width (() 1 << result_width (result_low > 0 (() - 1 (GET_CODE () == CONST_INT && INTVAL () < HOST_BITS_PER_WIDE_INT (() 1 << INTVAL () (SUBREG_PROMOTED_VAR_P () && SUBREG_PROMOTED_UNSIGNED_P () (GET_MODE_MASK () & nonzero_bits () (GET_MODE_BITSIZE () <= BITS_PER_WORD && () (SUBREG_REG (), mode (GET_MODE_SIZE () > GET_MODE_SIZE () (GET_MODE_MASK () & GET_MODE_MASK () (GET_CODE () == CONST_INT && INTVAL () >= 0 && INTVAL () < HOST_BITS_PER_WIDE_INT (x (inner_mode (XEXP () (inner_mode (XEXP (), mode (mode_width > width (op_nonzero & nonzero & mode_mask (code == LSHIFTRT (code == ASHIFTRT (inner & () (() - 1 (width - count (code == ASHIFT (() & mode_mask (outer | inner (() 1 << () (nonzero_bits () | nonzero_bits () (x, mode (x (mode == VOIDmode (x (mode == VOIDmode || FLOAT_MODE_P () || FLOAT_MODE_P () (mode (bitwidth < GET_MODE_BITSIZE () (1, () (GET_MODE () != VOIDmode && bitwidth > GET_MODE_BITSIZE () (code ( ! POINTERS_EXTEND_UNSIGNED && GET_MODE () == Pmode && mode == Pmode && REGNO_POINTER_FLAG () (Pmode (ptr_mode (reg_last_set_value[REGNO ()] != 0 && reg_last_set_mode[REGNO ()] == mode && () && INSN_CUID () < subst_low_cuid (x (x (tem != 0 (tem, mode (nonzero_sign_valid && reg_sign_bit_copies[REGNO ()] != 0 (x (LOAD_EXTEND_OP () == SIGN_EXTEND (1, bitwidth - GET_MODE_BITSIZE () + 1 (x (mode (bitwidth <= HOST_BITS_PER_WIDE_INT && () != 0 (nonzero (mode (nonzero == 0 bitwidth bitwidth - floor_log2 () - 1 (SUBREG_PROMOTED_VAR_P () && ! SUBREG_PROMOTED_UNSIGNED_P () (bitwidth - GET_MODE_BITSIZE () + 1, num_sign_bit_copies () (bitwidth <= GET_MODE_BITSIZE () (SUBREG_REG (), VOIDmode (1, () (() && LOAD_EXTEND_OP () == SIGN_EXTEND (SUBREG_REG (), mode (GET_CODE () == CONST_INT (1, bitwidth - INTVAL () (bitwidth - GET_MODE_BITSIZE () + num_sign_bit_copies () (XEXP (), VOIDmode (1, () (XEXP (), mode (GET_CODE () == CONST_INT && INTVAL () >= 0 && INTVAL () < bitwidth (XEXP (), mode (1, num0 - () (XEXP (), mode (nonzero == 1 (XEXP (), mode (num0 > 1 && bitwidth <= HOST_BITS_PER_WIDE_INT && () (XEXP (), mode (XEXP (), mode (num0, num1 (code == PLUS && XEXP () == constm1_rtx && bitwidth <= HOST_BITS_PER_WIDE_INT (XEXP (), mode (() == 0 (nonzero == 1 || nonzero == 0 bitwidth bitwidth - floor_log2 () - 1 (XEXP (), mode (XEXP (), mode (1, MIN () - 1 (XEXP (), mode (XEXP (), mode (bitwidth - num0 (bitwidth - num1 (result > 0 && bitwidth <= HOST_BITS_PER_WIDE_INT && () && () (1, result (XEXP (), mode (XEXP (), mode (XEXP (), mode (result > 1 && bitwidth <= HOST_BITS_PER_WIDE_INT && () != 0 (XEXP (), mode (result > 1 && bitwidth <= HOST_BITS_PER_WIDE_INT && () != 0 (XEXP (), mode (GET_CODE () == CONST_INT && INTVAL () > 0 (bitwidth, num0 + INTVAL () (GET_CODE () != CONST_INT || INTVAL () < 0 || INTVAL () >= bitwidth (XEXP (), mode (1, num0 - INTVAL () (XEXP (), mode (XEXP (), mode (num0, num1 (bitwidth > HOST_BITS_PER_WIDE_INT (x, mode (nonzero & () 1 bitwidth - floor_log2 () - 1 (x, mode, unsignedp (nonzero_sign_valid == 0 (unsignedp () num_sign_bit_copies () - 1 (pop0, pconst0, op1, const1, mode, pcomp_p (mode (mode (mode (op0 == AND (op1 == NIL || op0 == SET (op0 == NIL (op0 == op1 (op0 (op0 == PLUS || op1 == PLUS || op0 == NEG || op1 == NEG (const0 != const1 (op0 (op1 == AND (op1 == AND (op1 == IOR (mode (const0 == 0 && () (const0 == 0 && op0 == AND (const0 == GET_MODE_MASK () && op0 == AND (BITS_PER_WORD < HOST_BITS_PER_WIDE_INT && BITS_PER_WORD == width && () (() () << width (x, code, result_mode, varop, count (GET_MODE_SIZE () + () (count < 0 || count > GET_MODE_BITSIZE () (x (code, mode, varop, GEN_INT () (count != 0 (GET_CODE () == CLOBBER (complement_p (code == ROTATERT (result_mode (code == ASHIFTRT || code == LSHIFTRT || code == ROTATE result_mode mode (count > GET_MODE_BITSIZE () - 1 (code == ASHIFTRT (shift_mode (code == ROTATE || code == ROTATERT (shift_mode (count < 0 ((code == ASHIFTRT && () (code == ASHIFTRT && () (shift_mode (GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT && code == ASHIFTRT && () (GET_CODE () (varop (new != varop (() && ! mode_dependent_address_p () && ! MEM_VOLATILE_P () && () != BLKmode (BYTES_BIG_ENDIAN (MEM, tmode, XEXP () (MEM, tmode, plus_constant () (new (varop (new (varop (new (varop (code == ASHIFTRT SIGN_EXTEND ZERO_EXTEND, mode, new (() && () != BLKmode && tmode == GET_MODE () (BITS_BIG_ENDIAN (varop, 0 (XEXP () (XEXP (), plus_constant () (code == ASHIFTRT SIGN_EXTEND ZERO_EXTEND, mode, new (subreg_lowpart_p () && () && () (varop (GET_MODE_SIZE () > GET_MODE_SIZE () (varop (GET_CODE () == CONST_INT && exact_log2 () >= 0 (ASHIFT, GET_MODE (), XEXP (), GEN_INT () (GET_CODE () == CONST_INT && exact_log2 () >= 0 (LSHIFTRT, GET_MODE (), XEXP (), GEN_INT () (code == LSHIFTRT && count == GET_MODE_BITSIZE () - 1 (varop, 0 (GET_CODE () == CONST_INT && INTVAL () >= 0 && INTVAL () < GET_MODE_BITSIZE () && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT (varop (XEXP () (code == ASHIFT && first_code == ASHIFTRT && () == count (GET_MODE_MASK () & () (NULL_RTX, result_mode, XEXP (), mask (NULL_RTX, ASHIFT, result_mode, varop, count (code == ASHIFTRT && first_code == ASHIFT && GET_MODE () == shift_mode && () (count < 0 (varop, 0 (code == first_code (GET_MODE () != result_mode && () (varop, 0 (code == ASHIFTRT || () || GET_MODE_BITSIZE () > HOST_BITS_PER_WIDE_INT || () (nonzero_bits () (code, result_mode, mask_rtx, GEN_INT () (mask_rtx == 0 || GET_CODE () != CONST_INT || ! merge_outer_ops () (() == () (count > 0 && () (count < 0 (varop, 0 (GET_CODE () == code && GET_CODE () != CONST_INT && 0 != () (code, mode, new, XEXP () (XOR, mode, XEXP (), GEN_INT () (GET_CODE () == IOR && GET_CODE () == PLUS && XEXP () == constm1_rtx && () && () && count == GET_MODE_BITSIZE () - 1 && rtx_equal_p () (LE, GET_MODE (), XEXP (), const0_rtx (STORE_FLAG_VALUE == 1 code == ASHIFTRT code == LSHIFTRT (NEG, GET_MODE (), varop (GET_CODE () == CONST_INT && () != 0 && GET_CODE () == CONST_INT && merge_outer_ops () (varop, 0 (NULL_RTX, code, shift_mode, XEXP (), count (NULL_RTX, code, shift_mode, XEXP (), count (GET_CODE (), shift_mode, lhs, rhs (varop (code == LSHIFTRT && XEXP () == const0_rtx && GET_MODE () == result_mode && count == GET_MODE_BITSIZE () - 1 && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT && () && nonzero_bits () == 1 && merge_outer_ops () (varop, 0 (code == LSHIFTRT && count == GET_MODE_BITSIZE () - 1 && nonzero_bits () == 1 (varop, 0 (code == ASHIFT && merge_outer_ops () (varop, 0 (code == LSHIFTRT && count == GET_MODE_BITSIZE () - 1 && XEXP () == constm1_rtx && nonzero_bits () == 1 && merge_outer_ops () (varop, 0 (() && count < HOST_BITS_PER_WIDE_INT && nonzero_bits () >> count == 0 && () == 0 (varop, 0 (() && count < HOST_BITS_PER_WIDE_INT && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT && 0 == () && 0 == () (varop, 1 (code == ASHIFT && GET_CODE () == CONST_INT && () != 0 && GET_CODE () == CONST_INT && merge_outer_ops () (varop, 0 (GET_CODE () == ASHIFTRT && count == GET_MODE_BITSIZE () - 1 && () && () && GET_CODE () == CONST_INT && INTVAL () == count && rtx_equal_p () (GT, GET_MODE (), XEXP (), const0_rtx (STORE_FLAG_VALUE == 1 code == ASHIFTRT code == LSHIFTRT (NEG, GET_MODE (), varop (code == ASHIFTRT || code == LSHIFTRT || code == ROTATE result_mode mode (x && GET_RTX_CLASS () == && GET_CODE () == CONST_INT && INTVAL () == count (x, 1 (count (x && GET_CODE () == SUBREG && GET_MODE () == shift_mode && SUBREG_REG () == varop (x, 0 (GET_MODE () != shift_mode (shift_mode, varop (GET_CODE () == CLOBBER (code, shift_mode, varop, const_rtx (new != 0 (x == 0 || GET_CODE () != code || GET_MODE () != shift_mode (code, shift_mode, varop, const_rtx (XEXP (), varop (XEXP (), const_rtx (outer_op != NIL && GET_CODE () == code && GET_CODE () == CONST_INT (x, code, shift_mode, XEXP (), INTVAL () (orig_code == LSHIFTRT && result_mode != shift_mode (NULL_RTX, shift_mode, x, GET_MODE_MASK () >> orig_count (result_mode, x (complement_p (NOT, result_mode, result_mode, x (outer_op != NIL (GET_MODE_BITSIZE () < HOST_BITS_PER_WIDE_INT (result_mode (result_mode (BITS_PER_WORD < HOST_BITS_PER_WIDE_INT && BITS_PER_WORD == width && () (() () << width (outer_op == AND (NULL_RTX, result_mode, x, outer_const (outer_op == SET (outer_const (GET_RTX_CLASS () == (outer_op, result_mode, result_mode, x (outer_op, result_mode, x, GEN_INT () (pnewpat, insn, pnotes, padded_scratches (GET_CODE () == PARALLEL (i XVECLEN () - 1 i >= 0 i -- (GET_CODE () == CLOBBER && XEXP () == const0_rtx (pat, insn, & num_clobbers_to_add (insn_code_number < 0 && ! check_asm_operands () && GET_CODE () == PARALLEL (pos 0, i 0 i < XVECLEN () i ++ (GET_CODE () != CLOBBER (i != pos (XVECEXP (), XVECEXP () (XVECLEN (), pos (pos == 1 (pat, 0, 0 (pat, insn, & num_clobbers_to_add (num_clobbers_to_add (PARALLEL, VOIDmode, gen_rtvec () (GET_CODE () == PARALLEL (i 0 i < XVECLEN () i ++ (newpat, 0, i (pat, 0, i (newpat, 0, 0 (newpat, insn_code_number (i XVECLEN () - num_clobbers_to_add i < XVECLEN () i ++ (GET_CODE () == REG && ! reg_dead_at_p () (GET_CODE () == SCRATCH (*padded_scratches (EXPR_LIST, REG_UNUSED, XEXP (), notes (mode, x (GET_MODE () == mode (GET_MODE_SIZE () > UNITS_PER_WORD && ! () (CLOBBER, GET_MODE (), const0_rtx (GET_CODE () == SUBREG && GET_CODE () == MEM (x (GET_MODE () == mode (mode, x (result != 0 && GET_CODE () == SUBREG && GET_CODE () == REG && REGNO () >= FIRST_PSEUDO_REGISTER && () (SUBREG_REG () (result (GET_CODE () == MEM (MEM_VOLATILE_P () || mode_dependent_address_p () (CLOBBER, GET_MODE (), const0_rtx (GET_MODE_SIZE () < GET_MODE_SIZE () (SUBREG, mode, x, 0 (WORDS_BIG_ENDIAN (MAX () - MAX () (BYTES_BIG_ENDIAN (MIN () - MIN () (MEM, mode, plus_constant () (new (x (new (x (new (x (GET_RTX_CLASS () == (GET_CODE (), mode, XEXP (), XEXP () (WORDS_BIG_ENDIAN && GET_MODE_SIZE () > UNITS_PER_WORD (() / UNITS_PER_WORD (SUBREG, mode, x, word (() (p, mode (p, enum rtx_code (p, enum machine_mode (code (code (n_args == 0 || n_args > 3 ((j 0 j < n_args j ++ (*fmt ++ != ((p, rtx (i previous_num_undos i < undobuf num_undo i ++ ( ! undobuf undo[i]is_int && GET_CODE () == code && GET_MODE () == mode (j 0 j < n_args j ++ (XEXP () != args[j](j == n_args (code (rt, mode (rt, 0 (n_args > 1 (rt, 1 (n_args > 2 (rt, 2 (code, mode, op0, op1 (GET_RTX_CLASS () == && () (GET_RTX_CLASS () == (op0 (GET_CODE () == COMPARE && op1 == const0_rtx (op0, 1 (op0, 0 (op0 (op_mode == VOIDmode (op1 (code, op_mode, op0, op1 (code, mode, op0, op1 (result (GET_RTX_CLASS () == && () (code, mode, op1, op0 (code, mode, op0, op1 (code, mode, op0_mode, op0 (code, mode, op0, op0_mode (result (code, mode, op0 (code, pop0, pop1 (1 (code != GTU && code != GEU && code != LTU && code != LEU && GET_CODE () == ASHIFTRT && GET_CODE () == ASHIFTRT && GET_CODE () == ASHIFT && GET_CODE () == ASHIFT && GET_CODE () == SUBREG && GET_CODE () == SUBREG && () && GET_CODE () == CONST_INT && GET_CODE () == CONST_INT && GET_CODE () == CONST_INT && GET_CODE () == CONST_INT && INTVAL () == INTVAL () && INTVAL () == INTVAL () && INTVAL () == INTVAL () && () (XEXP () (XEXP () (GET_CODE () == GET_CODE () && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT && () && GET_CODE () == CONST_INT && INTVAL () >= 0 && INTVAL () < HOST_BITS_PER_WIDE_INT && XEXP () == XEXP () (op0 (mode (XEXP () (GET_CODE () == LSHIFTRT || GET_CODE () == ASHIFTRT (mask >> shift_count (GET_CODE () == ASHIFT (mask & () (() == 0 && () == 0 (op0, 0 (op1, 0 (GET_CODE () == AND && GET_CODE () == AND && GET_CODE () == CONST_INT && GET_CODE () == CONST_INT (op0, 0 (op1, 0 (XEXP () (XEXP () (GET_CODE () == SUBREG && GET_CODE () == SUBREG && () && () && () && () && () (inner_op0 (inner_op1 (code (c0 == c1 (tmode GET_CLASS_NARROWEST_MODE () tmode != GET_MODE () tmode GET_MODE_WIDER_MODE () (c0 == GET_MODE_MASK () (tmode, inner_op0 (tmode, inner_op1 (code ( ! changed (() || () (op0, 0 (op1, 0 (code (CONSTANT_P () (code (GET_CODE () == CONST_INT (op0 (mode (mode (GET_MODE_CLASS () != MODE_INT && ! () (op1 (mode_width <= HOST_BITS_PER_WIDE_INT (const_op && () && mode_width <= HOST_BITS_PER_WIDE_INT && exact_log2 () >= 0 && nonzero_bits () == const_op (code == EQ || code == GE || code == GEU NE EQ (const_op == -1 && () && num_sign_bit_copies () == mode_width (code == EQ || code == LE || code == GEU NE EQ (code (const_op > 0 (const_op (const_op < 0 (const_op (const_op == 0 && mode_width <= HOST_BITS_PER_WIDE_INT && () == 0 (const_op > 0 (const_op (const_op < 0 (const_op (const_op == 0 && mode_width <= HOST_BITS_PER_WIDE_INT && () == 0 (const_op > 0 (const_op (const_op == () 1 << () (const_op == 0 (const_op == () - 1 (const_op > 1 (const_op (const_op == () 1 << () (const_op == 0 (const_op == () - 1 (code == EQ || code == NE (() && const_op == 0 (code == LTU || code == LEU || code == GTU || code == LEU (sign_bit_comparison_p && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT (op0, mode, (), NULL_RTX, 0 (GET_CODE () (GET_CODE () == CONST_INT && XEXP () == const1_rtx && equality_comparison_p && const_op == 0 && () >= 0 && () (BITS_BIG_ENDIAN (GET_MODE_BITSIZE () - 1 - i (op0, 2 (i (code (op0 (tem != op0 (equality_comparison_p && () != 0 (op0, 0 (sign_bit_comparison_p (op0, 0 (code == GE LT GE (equality_comparison_p && () != 0 (op0, 0 (const_op != 0 (sign_bit_comparison_p && () (op0, 0 (code == LT NE EQ (num_sign_bit_copies () >= 2 (op0, 0 (code (equality_comparison_p && GET_CODE () == CONST_INT && () != 0 (op0, 0 (const_op == 0 && sign_bit_comparison_p && GET_CODE () == CONST_INT && mode_width <= HOST_BITS_PER_WIDE_INT (NULL_RTX, mode, XEXP (), () (code == LT NE EQ (const_op == 0 && equality_comparison_p (op0, 0 ( ! unsigned_comparison_p && () && () (op0, 0 (mode_width <= HOST_BITS_PER_WIDE_INT && subreg_lowpart_p () && GET_CODE () == PLUS && GET_CODE () == CONST_INT && INTVAL () < 0 && () && () const_op < GET_MODE_MASK () / 2 && () (op0 (subreg_lowpart_p () && GET_MODE_BITSIZE () < mode_width (() && () && () (op0, 0 (equality_comparison_p && 0 != () (op0, 0 (const_op == 0 && XEXP () == constm1_rtx && GET_CODE () == ABS && sign_bit_comparison_p (XEXP (), 0 (code == LT EQ NE (equality_comparison_p && 0 != () (op0, 0 (equality_comparison_p && 0 != () (op0, 1 (sign_bit_comparison_p && GET_CODE () == ASHIFTRT && GET_CODE () == CONST_INT && INTVAL () == mode_width - 1 && rtx_equal_p () (op0, 1 (code == GE LE GT (equality_comparison_p && 0 != () (op0, 0 (const_op != 0 || XEXP () == cc0_rtx || GET_MODE_CLASS () == MODE_CC (GET_CODE () == COMPARE (XEXP (), 0 (XEXP (), 1 (op0, 0 (op0, 1 (code == NE || () || () (code == LT || code == NE GET_CODE () reverse_condition () (sign_bit_comparison_p && GET_CODE () == PLUS && XEXP () == constm1_rtx && rtx_equal_p () (op0, 1 (code == GE GT LE (const_op == 0 && equality_comparison_p && GET_CODE () == ASHIFT && XEXP () == const1_rtx (op0, mode, gen_rtx_combine (), () 1 (const_op == 0 && equality_comparison_p && mode_width <= HOST_BITS_PER_WIDE_INT && GET_CODE () == CONST_INT && GET_CODE () == LSHIFTRT && GET_CODE () == CONST_INT && INTVAL () >= 0 && INTVAL () < HOST_BITS_PER_WIDE_INT (() << INTVAL () (() == 0 && () (XEXP (), 0 (equality_comparison_p && const_op == 0 && GET_CODE () == CONST_INT && mode_width <= HOST_BITS_PER_WIDE_INT && () (op0, 0 (code == EQ GE LT (() && GET_CODE () == CONST_INT && () >= 0 && const_op >> i == 0 && () != BLKmode (tmode, XEXP () (GET_CODE () == CONST_INT && INTVAL () >= 0 && () && () && mode_width <= HOST_BITS_PER_WIDE_INT && () == 0 (XEXP () (const_op (op0, 0 (sign_bit_comparison_p && GET_CODE () == CONST_INT && mode_width <= HOST_BITS_PER_WIDE_INT (NULL_RTX, mode, XEXP (), () (code == LT NE EQ (const_op == 0 && equality_comparison_p && GET_CODE () == CONST_INT && INTVAL () == mode_width - 1 (NULL_RTX, mode, XEXP (), () 1 (equality_comparison_p && const_op == 0 && GET_CODE () == CONST_INT (NULL_RTX, LSHIFTRT, mode, XEXP (), INTVAL () ( ! unsigned_comparison_p && GET_CODE () == CONST_INT && GET_CODE () == ASHIFT && XEXP () == XEXP () && () != BLKmode && () (tmode, XEXP () (GET_CODE () == CONST_INT && INTVAL () >= 0 && INTVAL () < HOST_BITS_PER_WIDE_INT && mode_width <= HOST_BITS_PER_WIDE_INT && () == 0 && () (XEXP () (const_op (op0, 0 (const_op == 0 && () && GET_CODE () == CONST_INT && INTVAL () == mode_width - 1 (op0, 0 (code == NE || code == GT LT GE (op0, op1 == const0_rtx COMPARE SET (op1, SET (GET_CODE () == SUBREG && subreg_lowpart_p () && GET_MODE_CLASS () == MODE_INT && () && () (op0 (GET_MODE (), op1 (GET_CODE () == SUBREG && subreg_lowpart_p () && GET_MODE_CLASS () == MODE_INT && () && () && () == 0 && () (op0 (op0 (mode != VOIDmode && GET_MODE_CLASS () == MODE_INT && GET_MODE_SIZE () < UNITS_PER_WORD && cmp_optab handlers[() mode]insn_code == CODE_FOR_nothing (tmode GET_MODE_WIDER_MODE () () tmode GET_MODE_WIDER_MODE () (cmp_optab handlers[() tmode]insn_code != CODE_FOR_nothing (() || () (tmode, op0 (tmode, op1 (op1 == const0_rtx && () && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT (AND, tmode, gen_lowpart_for_combine (), GEN_INT () (code == LT (code, op0, op1 (x (TARGET_FLOAT_FORMAT != IEEE_FLOAT_FORMAT || flag_fast_math || GET_CODE () == NE || GET_CODE () == EQ (GET_MODE_CLASS () (REVERSIBLE_CC_MODE () (XEXP () (x && GET_CODE () == COMPARE && ! FLOAT_MODE_P () (x (x (code (code == REG (x (regno < FIRST_PSEUDO_REGISTER HARD_REGNO_NREGS () 1 (i regno i < endregno i ++ (i GET_RTX_LENGTH () - 1 i >= 0 i -- (fmt[i] == (XEXP () (reg, insn, value (reg (regno < FIRST_PSEUDO_REGISTER HARD_REGNO_NREGS () 1 (value && insn && reg_overlap_mentioned_p () (insn (reg (tem (copy_rtx (), reg, tem (i regno i < endregno i ++ (insn (value (value (i regno i < endregno i ++ (value && reg_last_set_table_tick[i] == label_tick (value && ! get_last_value_validate () (value ( ! get_last_value_validate () (value (insn (reg (value, GET_MODE () (value, GET_MODE () (dest, setter (GET_CODE () == SUBREG (dest (GET_CODE () == REG (GET_CODE () == SET && dest == SET_DEST () (dest, record_dead_insn, SET_SRC () (GET_CODE () == SET && GET_CODE () == SUBREG && SUBREG_REG () == dest && GET_MODE_BITSIZE () <= BITS_PER_WORD && subreg_lowpart_p () (dest, record_dead_insn, gen_lowpart_for_combine () (dest, record_dead_insn, NULL_RTX (GET_CODE () == MEM && ! push_operand () (record_dead_insn (insn (link REG_NOTES () link link XEXP () (REG_NOTE_KIND () == REG_DEAD && GET_CODE () == REG (XEXP () (regno < FIRST_PSEUDO_REGISTER HARD_REGNO_NREGS () 1 (i regno i < endregno i ++ (REG_NOTE_KIND () == REG_INC (XEXP (), insn, NULL_RTX (GET_CODE () == CALL_INSN (i 0 i < FIRST_PSEUDO_REGISTER i ++ (call_used_regs[i](insn (PATTERN (), record_dead_and_set_regs_1 (loc, tick, replace (GET_CODE () (GET_CODE () (GET_CODE () == REG (x (regno < FIRST_PSEUDO_REGISTER HARD_REGNO_NREGS () 1 (j regno j < endregno j ++ (reg_last_set_invalid[j] || () (replace (CLOBBER, GET_MODE (), const0_rtx (i 0 i < len i ++ (() || fmt[i] == (x (GET_CODE () == SUBREG && subreg_lowpart_p () && () && () != 0 (GET_MODE (), value (GET_CODE () != REG (x (value == 0 || () (INSN_CUID () >= subst_low_cuid (subst_prev_insn (insn prev_nonnote_insn () insn && () insn prev_nonnote_insn () (insn && () != 0 && rtx_equal_p () (set (reg_mentioned_p () (copy_rtx (), x, gen_rtx () (reg_overlap_mentioned_p () (get_last_value_validate () (value (get_last_value_validate () (x, from_cuid (x (code == REG (x (regno < FIRST_PSEUDO_REGISTER HARD_REGNO_NREGS () 1 (regno == STACK_POINTER_REGNUM (regno < endreg regno ++ (reg_last_set[regno] && INSN_CUID () > from_cuid (code == MEM && mem_last_set > from_cuid (code (i GET_RTX_LENGTH () - 1 i >= 0 i -- (fmt[i] == (j XVECLEN () - 1 j >= 0 j -- (use_crosses_set_p () (fmt[i] == && use_crosses_set_p () (dest, x (GET_CODE () != REG (dest (regno < FIRST_PSEUDO_REGISTER HARD_REGNO_NREGS () 1 (reg_dead_endregno > regno && reg_dead_regno < endregno (GET_CODE () == CLOBBER (reg, insn (reg (reg_dead_regno < FIRST_PSEUDO_REGISTER HARD_REGNO_NREGS () 1 (reg_dead_regno < FIRST_PSEUDO_REGISTER (i reg_dead_regno i < reg_dead_endregno i ++ (TEST_HARD_REG_BIT () (insn && GET_CODE () != CODE_LABEL && GET_CODE () != BARRIER insn prev_nonnote_insn () (PATTERN (), reg_dead_at_p_1 (reg_dead_flag (find_regno_note () (insn == 0 (block 0 block < n_basic_blocks block ++ (insn == basic_block_head[block](block == n_basic_blocks (i reg_dead_regno i < reg_dead_endregno i ++ (basic_block_live_at_start[block][i / REGSET_ELT_BITS] & () (x (x (code (GET_CODE () == MEM (XEXP () (x (regno < FIRST_PSEUDO_REGISTER (regno == STACK_POINTER_REGNUM || regno == HARD_FRAME_POINTER_REGNUM || () || regno == FRAME_POINTER_REGNUM (regno, GET_MODE () (i -- > 0 (newpat_used_regs, regno + i (x (GET_CODE () == SUBREG || GET_CODE () == ZERO_EXTRACT || GET_CODE () == SIGN_EXTRACT || GET_CODE () == STRICT_LOW_PART (testreg, 0 (GET_CODE () == MEM (XEXP () (SET_SRC () (code (i GET_RTX_LENGTH () - 1 i >= 0 i -- (fmt[i] == (XEXP () (fmt[i] == (j 0 j < XVECLEN () j ++ (XVECEXP () (regno, insn (insn, REG_DEAD, regno (note (insn, note (x, from_cuid, to_insn, pnotes (x (code == REG (x (before_dead && INSN_UID () > max_uid_cuid (before_dead (after_dead && INSN_UID () > max_uid_cuid (after_dead (before_dead && after_dead && INSN_CUID () >= from_cuid && () (regno, where_dead (note != 0 && regno < FIRST_PSEUDO_REGISTER && () (XEXP () (deadregno + HARD_REGNO_NREGS () (regno, GET_MODE () (i deadregno i < deadend i ++ (i < regno || i >= ourend (where_dead (EXPR_LIST, REG_DEAD, gen_rtx (), REG_NOTES () (note == 0 && regno < FIRST_PSEUDO_REGISTER && HARD_REGNO_NREGS () > 1 (regno, GET_MODE () (i regno + 1 i < ourend i ++ (gen_rtx (), from_cuid, to_insn, & oldnotes (note != 0 && GET_MODE () == GET_MODE () (note, 1 (EXPR_LIST, REG_DEAD, x, *pnotes (GET_CODE () == SET (x (SET_SRC (), from_cuid, to_insn, pnotes (GET_CODE () == ZERO_EXTRACT || GET_CODE () == STRICT_LOW_PART || () (dest, from_cuid, to_insn, pnotes (GET_CODE () == SUBREG (dest (GET_CODE () == MEM (XEXP (), from_cuid, to_insn, pnotes (GET_CODE () == CLOBBER (code (code (i 0 i < len i ++ (fmt[i] == (j XVECLEN () - 1 j >= 0 j -- (XVECEXP (), from_cuid, to_insn, pnotes (fmt[i] == (XEXP (), from_cuid, to_insn, pnotes (x, body (GET_CODE () == SET (body (GET_CODE () == ZERO_EXTRACT (dest, 0 (GET_CODE () == STRICT_LOW_PART (XEXP () (GET_CODE () == SUBREG (target (GET_CODE () != REG (target (x (tregno >= FIRST_PSEUDO_REGISTER || regno >= FIRST_PSEUDO_REGISTER (tregno, GET_MODE () (regno, GET_MODE () (GET_CODE () == PARALLEL (i XVECLEN () - 1 i >= 0 i -- (reg_bitfield_target_p () (notes, from_insn, i3, i2, elim_i2, elim_i1 (note notes note note next_note (XEXP () && GET_CODE () == REG && REGNO () >= FIRST_PSEUDO_REGISTER (note, 0 (XEXP () (note, 1 (REG_NOTE_KIND () (reg_set_p () (from_insn != i3 ( ! () (reg_referenced_p () && ! () (note, REG_DEAD (from_insn == i3 && () (reg_mentioned_p () (i2 && reg_mentioned_p () (place (GET_CODE () != NOTE (XEXP (), REG_LIBCALL, NULL_RTX (from_insn (tem && place (tem, 0 (GET_CODE () != NOTE (XEXP (), REG_RETVAL, NULL_RTX (from_insn (tem && place (tem, 0 (from_insn && GET_CODE () == CALL_INSN && find_reg_fusage () (reg_referenced_p () (i2 != 0 && next_nonnote_insn () == i3 && reg_referenced_p () (XEXP () == elim_i2 || XEXP () == elim_i1 (place == i3 && i2 != 0 && GET_CODE () == REG && reg_n_refs[REGNO ()] == 2 && reg_referenced_p () (XEXP () (place == 0 (tem prev_nonnote_insn () place == 0 && tem && () tem prev_nonnote_insn () (reg_set_p () (tem (set != 0 && ! side_effects_p () && () (tem (REG_NOTES (), tem, tem, NULL_RTX, NULL_RTX, NULL_RTX (LOG_LINKS () (tem, NOTE (tem (tem (note, REG_UNUSED ( ! find_regno_note () (reg_referenced_p () || () (i2 && INSN_UID () <= max_uid_cuid && INSN_CUID () > INSN_CUID () && from_insn && INSN_CUID () > INSN_CUID () && reg_referenced_p () (place (place (links (REG_NOTE_KIND () == REG_DEAD && place == 0 && tem != 0 (gen_rtx (), tem (basic_block_end[this_basic_block - 1] == tem (place && REG_NOTE_KIND () == REG_DEAD (XEXP () (dead_or_set_p () || reg_bitfield_target_p () (reg_last_death[regno] != place (place && regno < FIRST_PSEUDO_REGISTER && HARD_REGNO_NREGS () > 1 (regno, GET_MODE () (i regno i < endregno i ++ ( ! refers_to_regno_p () && ! find_regno_fusage () (REG, reg_raw_mode[i], i (p place GET_CODE () == INSN && GET_CODE () == USE p PREV_INSN () (rtx_equal_p () (p (gen_rtx (), p (use_insn (EXPR_LIST, REG_DEAD, piece, REG_NOTES () (all_used (i regno i < endregno i ++ (dead_or_set_regno_p () ( ! all_used (i regno i < endregno i ++ (REG, reg_raw_mode[i], i (() && ! dead_or_set_p () && ! reg_bitfield_target_p () (place (EXPR_LIST, REG_DEAD, piece, REG_NOTES () ((place (note, 1 (place (place (() && GET_CODE () == REG (XEXP () (place2 (() && GET_CODE () == REG (XEXP () (place2 (GET_CODE (), REG_NOTE_KIND (), XEXP (), REG_NOTES () (links (link links link link next_link (link, 1 (GET_CODE () == NOTE || () == 0 (set (GET_CODE () == SUBREG || GET_CODE () == ZERO_EXTRACT || GET_CODE () == SIGN_EXTRACT || GET_CODE () == STRICT_LOW_PART (reg, 0 (insn NEXT_INSN () () insn NEXT_INSN () (GET_RTX_CLASS () == && reg_overlap_mentioned_p () (reg_referenced_p () (GET_CODE () == CALL_INSN && find_reg_fusage () (place (link2 LOG_LINKS () link2 link2 XEXP () (XEXP () == XEXP () (link2 == 0 (link, 1 (place (place (added_links_insn == 0 || INSN_CUID () > INSN_CUID () (file (file,, combine_attempts, combine_merges, combine_extras, combine_successes (file (file,, total_attempts, total_merges, total_extras, total_successes, <./cc/combine.c 3968>
 1792 																																																							TYPE_ALIGN: <>
 1793 																																																							DECL_ALIGN: <>
 1794 																																																							TYPE_ARG_TYPES: 791
 1795 																																																							TYPE_MAIN_VARIANT: 324
 1796 																																																							record_function_format: void (), <./cc/c-common.c 823>
 1797 																																																								xmalloc: 416
 1798 																																																							DECL_NAME: 250
 1799 																																																							DECL_ASSEMBLER_NAME: <>
 1800 																																																							declare_weak: <>
 1801 																																																							DECL_INITIAL: 168
 1802 																																																							DECL_EXTERNAL: else if (), <./cc/dwarfout.c 3220>
 1803 																																																							get_identifier: <>
 1804 																																																							assemble_alias: void (), <./cc/varasm.c 4127>
 1805 																																																								make_decl_rtl: 1326
 1806 																																																								XSTR: <>
 1807 																																																								XEXP: 105
 1808 																																																								DECL_RTL: <>
 1809 																																																								TREE_PUBLIC: 194
 1810 																																																								DECL_WEAK: <>
 1811 																																																								ASM_WEAKEN_LABEL: <>
 1812 																																																								BC_GLOBALIZE_LABEL: <>
 1813 																																																								ASM_GLOBALIZE_LABEL: <>
 1814 																																																								ASM_OUTPUT_DEF: <>
 1815 																																																								IDENTIFIER_POINTER: <>
 1816 																																																								TREE_ASM_WRITTEN: else if (), <./cc/dwarfout.c 3566>
 1817 																																																						pushdecl: <>
 1818 																																																						DECL_RTL: <>
 1819 																																																						expand_decl: <>
 1820 																																																						temporary_allocation: void (), <./cc/tree.c 446>
 1821 																																																						decl_tree_cons: <>
 1822 																																																						get_identifier: <>
 1823 																																																						grokdeclarator: 1602
 1824 																																																						TYPE_NEEDS_DESTRUCTOR: <>
 1825 																																																						TREE_PERMANENT: if (), <./cc/cp/decl.c 10271>
 1826 																																																						push_obstacks: 392
 1827 																																																						copy_node: 874
 1828 																																																						TYPE_DOMAIN: <>
 1829 																																																						build_index_type: 1516
 1830 																																																						copy_to_permanent: tree (), <./cc/cp/tree.c 1799>
 1831 																																																							TREE_PERMANENT: if (), <./cc/cp/decl.c 10271>
 1832 																																																							suspend_momentary: int (), <./cc/tree.c 863>
 1833 																																																							mapcar: , <./cc/cp/tree.c 1621>
 1834 																																																								TREE_CODE: 162
 1835 																																																								TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 1836 																																																								copy_node: 874
 1837 																																																								mapcar: 1833
 1838 																																																								TREE_TYPE: 160
 1839 																																																								DECL_INITIAL: 168
 1840 																																																								DECL_SIZE: <>
 1841 																																																								TREE_PURPOSE: 215
 1842 																																																								TREE_VALUE: <>
 1843 																																																								TREE_VEC_LENGTH: <>
 1844 																																																								TREE_VEC_ELT: <>
 1845 																																																								TREE_OPERAND: <>
 1846 																																																								build_pointer_type: 390
 1847 																																																								build_reference_type: 1407
 1848 																																																								build_function_type: 1210
 1849 																																																								TYPE_ARG_TYPES: 791
 1850 																																																								build_array_type: 974
 1851 																																																								TYPE_DOMAIN: <>
 1852 																																																								build_index_type: 1516
 1853 																																																								TYPE_MAX_VALUE: <>
 1854 																																																								build_offset_type: 1414
 1855 																																																								TYPE_OFFSET_BASETYPE: <>
 1856 																																																								build_method_type: tree (), <./cc/tree.c 3904>
 1857 																																																									make_node: 307
 1858 																																																									TREE_CODE: 162
 1859 																																																									abort: <>
 1860 																																																									TYPE_METHOD_BASETYPE: <>
 1861 																																																									TYPE_MAIN_VARIANT: 324
 1862 																																																									TREE_TYPE: 160
 1863 																																																									TYPE_ARG_TYPES: 791
 1864 																																																									tree_cons: <>
 1865 																																																									build_pointer_type: 390
 1866 																																																									TYPE_HASH: <>
 1867 																																																									type_hash_canon: 941
 1868 																																																									TYPE_SIZE: if (), <./cc/dwarfout.c 3636>
 1869 																																																									layout_type: <>
 1870 																																																								TYPE_METHOD_BASETYPE: <>
 1871 																																																								TYPE_PTRMEMFUNC_P: 258
 1872 																																																								build_ptrmemfunc_type: 839
 1873 																																																								TYPE_PTRMEMFUNC_FN_TYPE: <>
 1874 																																																								sorry: <>
 1875 																																																								my_friendly_abort: 357
 1876 																																																							perm_manip: tree (), <./cc/cp/tree.c 1788>
 1877 																																																								TREE_PERMANENT: if (), <./cc/cp/decl.c 10271>
 1878 																																																							resume_momentary: void (), <./cc/tree.c 876>
 1879 																																																						TYPE_MAX_VALUE: <>
 1880 																																																						build_cplus_array_type: 972
 1881 																																																						pop_obstacks: 396
 1882 																																																						DECL_VIRTUAL_P: if (), <./cc/dwarfout.c 2795>
 1883 																																																						DECL_CLASS_CONTEXT: <>
 1884 																																																						DECL_CONTEXT: 267
 1885 																																																						TYPE_METHOD_BASETYPE: <>
 1886 																																																						build_pointer_type: 390
 1887 																																																						build_type_variant: 1000
 1888 																																																						build: <>
 1889 																																																						TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 1890 																																																						DECL_ARGUMENTS: <>
 1891 																																																						build_lang_decl: 1284
 1892 																																																						TREE_PUBLIC: 194
 1893 																																																						DECL_THIS_EXTERN: <>
 1894 																																																						DECL_TEMPLATE_RESULT: <>
 1895 																																																						pushlevel_temporary: void (), <./cc/cp/decl.c 971>
 1896 																																																							pushlevel: void (), <./cc/cp/decl.c 931>
 1897 																																																								make_binding_level: struct binding_level (), <./cc/c-decl.c 863>
 1898 																																																								my_friendly_assert: 379
 1899 																																																								xmalloc: 1643
 1900 																																																								push_binding_level: void (), <./cc/cp/decl.c 666>
 1901 																																																									indent: void (), <./cc/cp/decl.c 654>
 1902 																																																										putc: <>
 1903 																																																									fprintf: <>
 1904 																																																								GNU_xref_start_scope: void (), <./cc/cp/xref.c 251>
 1905 																																																									find_file: XREF_FILE (), <./cc/cp/xref.c 655>
 1906 																																																										STREQL: <>
 1907 																																																									PALLOC: <>
 1908 																																																							clear_last_expr: void (), <./cc/stmt.c 1864>
 1909 																																																							expand_start_bindings: void (), <./cc/stmt.c 2964>
 1910 																																																								ALLOC_NESTING: <>
 1911 																																																								emit_note: 170
 1912 																																																								tree_cons: <>
 1913 																																																								gen_label_rtx: rtx (), <./cc/emit-rtl.c 1327>
 1914 																																																								push_temp_slots: void (), <./cc/function.c 1195>
 1915 																																																						cp_error: 259
 1916 																																																						IS_AGGR_TYPE: else if (), <./cc/cp/typeck.c 6140>
 1917 																																																						TYPE_NEEDS_CONSTRUCTING: <>
 1918 																																																						toplevel_bindings_p: 1614
 1919 																																																						cp_warning: 279
 1920 																																																						lookup_field: <>
 1921 																																																						duplicate_decls: <>
 1922 																																																						check_classfn: <>
 1923 																																																						DECL_LANG_SPECIFIC: if (), <./cc/cp/decl.c 2992>
 1924 																																																						DECL_IN_AGGR_P: if (), <./cc/cp/decl2.c 1860>
 1925 																																																						DECL_USE_TEMPLATE: <>
 1926 																																																						CLASSTYPE_USE_TEMPLATE: <>
 1927 																																																						SET_DECL_TEMPLATE_SPECIALIZATION: <>
 1928 																																																						DECL_TEMPLATE_SPECIALIZATION: <>
 1929 																																																						cp_pedwarn: 1314
 1930 																																																						pushclass: void (), <./cc/cp/class.c 4363>
 1931 																																																							push_memoized_context: <>
 1932 																																																							xrealloc: 420
 1933 																																																							TYPE_NAME: 271
 1934 																																																							TREE_CODE: 162
 1935 																																																							DECL_NAME: 250
 1936 																																																							TYPE_SIZE: if (), <./cc/dwarfout.c 3636>
 1937 																																																							popclass: void (), <./cc/cp/class.c 4461>
 1938 																																																								cadillac_pop_class: void (), <./cc/cp/edsel.c 904>
 1939 																																																								CLASSTYPE_TAGS: <>
 1940 																																																								TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 1941 																																																								IDENTIFIER_CLASS_VALUE: <>
 1942 																																																								TREE_PURPOSE: 215
 1943 																																																								TREE_NONLOCAL_FLAG: <>
 1944 																																																								TREE_VALUE: <>
 1945 																																																								IDENTIFIER_TEMPLATE: <>
 1946 																																																								TYPE_IDENTIFIER: <>
 1947 																																																								undo_template_name_overload: void (), <./cc/cp/pt.c 1827>
 1948 																																																									IDENTIFIER_TEMPLATE: <>
 1949 																																																									poplevel: tree (), <./cc/cp/decl.c 1007>
 1950 																																																										TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 1951 																																																										TYPE_SIZE: if (), <./cc/dwarfout.c 3636>
 1952 																																																										TREE_VALUE: <>
 1953 																																																										TREE_CODE: 162
 1954 																																																										TYPE_NAME: 271
 1955 																																																										error: 52
 1956 																																																										IDENTIFIER_POINTER: <>
 1957 																																																										DECL_NAME: 250
 1958 																																																										nreverse: <>
 1959 																																																										TREE_ASM_WRITTEN: else if (), <./cc/dwarfout.c 3566>
 1960 																																																										DECL_INITIAL: 168
 1961 																																																										TREE_ADDRESSABLE: <>
 1962 																																																										DECL_ABSTRACT_ORIGIN: <>
 1963 																																																										push_function_context: void (), <./cc/function.c 549>
 1964 																																																										output_inline_function: <>
 1965 																																																										pop_function_context: void (), <./cc/function.c 638>
 1966 																																																											pop_function_context_from: void (), <./cc/function.c 558>
 1967 																																																												restore_tree_status: void (), <./cc/tree.c 408>
 1968 																																																													obstack_free: 397
 1969 																																																													free: <>
 1970 																																																												restore_storage_status: <>
 1971 																																																												restore_expr_status: void (), <./cc/expr.c 370>
 1972 																																																												restore_emit_status: void (), <./cc/emit-rtl.c 1419>
 1973 																																																												restore_stmt_status: void (), <./cc/stmt.c 525>
 1974 																																																												restore_varasm_status: void (), <./cc/varasm.c 3019>
 1975 																																																												fixup_var_refs: void (), <./cc/function.c 1373>
 1976 																																																													get_insns: rtx (), <./cc/emit-rtl.c 1696>
 1977 																																																													fixup_var_refs_insns: <>
 1978 																																																													push_to_sequence: void (), <./cc/emit-rtl.c 2959>
 1979 																																																														start_sequence: void (), <./cc/emit-rtl.c 2919>
 1980 																																																														NEXT_INSN: <>
 1981 																																																													get_last_insn: rtx (), <./cc/emit-rtl.c 1704>
 1982 																																																													end_sequence: 479
 1983 																																																													TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 1984 																																																													RTL_EXPR_SEQUENCE: <>
 1985 																																																													TREE_VALUE: <>
 1986 																																																												free: <>
 1987 																																																										make_node: 307
 1988 																																																										BLOCK_VARS: <>
 1989 																																																										BLOCK_TYPE_TAGS: <>
 1990 																																																										BLOCK_SUBBLOCKS: <>
 1991 																																																										remember_end_note: <>
 1992 																																																										BLOCK_SUPERCONTEXT: <>
 1993 																																																										DECL_EXTERNAL: else if (), <./cc/dwarfout.c 3220>
 1994 																																																										TREE_USED: <>
 1995 																																																										DECL_ASSEMBLER_NAME: <>
 1996 																																																										IDENTIFIER_LOCAL_VALUE: <>
 1997 																																																										TREE_PURPOSE: 215
 1998 																																																										error_with_decl: <>
 1999 																																																										define_label: tree (), <./cc/cp/decl.c 3949>
 2000 																																																										warning_with_decl: <>
 2001 																																																										IDENTIFIER_LABEL_VALUE: <>
 2002 																																																										chainon: 1712
 2003 																																																										TYPE_CONTEXT: <>
 2004 																																																										GNU_xref_end_scope: void (), <./cc/cp/xref.c 278>
 2005 																																																											find_file: 1905
 2006 																																																											fprintf: <>
 2007 																																																											free: <>
 2008 																																																										TYPE_NAME_STRING: <>
 2009 																																																										decl_function_context: <>
 2010 																																																										DECL_DEAD_FOR_LOCAL: <>
 2011 																																																										DECL_SHADOWED_FOR_VAR: <>
 2012 																																																										IDENTIFIER_CLASS_VALUE: <>
 2013 																																																										IDENTIFIER_TYPE_VALUE: <>
 2014 																																																										cp_error_at: 1225
 2015 																																																										cp_warning_at: 283
 2016 																																																										SET_IDENTIFIER_LABEL_VALUE: <>
 2017 																																																										TREE_TYPE: 160
 2018 																																																										pop_binding_level: void (), <./cc/cp/decl.c 697>
 2019 																																																											my_friendly_abort: 357
 2020 																																																											indent: 1901
 2021 																																																											fprintf: <>
 2022 																																																											abort: <>
 2023 																																																										pop_momentary: void (), <./cc/tree.c 836>
 2024 																																																											obstack_free: 397
 2025 																																																										expand_end_bindings: <>
 2026 																																																										getdecls: tree (), <./cc/cp/decl.c 4117>
 2027 																																																										poplevel: 1949
 2028 																																																								poplevel_class: tree (), <./cc/cp/decl.c 1441>
 2029 																																																									my_friendly_assert: 379
 2030 																																																									pop_stack_level: <>
 2031 																																																									TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 2032 																																																									IDENTIFIER_LOCAL_VALUE: <>
 2033 																																																									TREE_PURPOSE: 215
 2034 																																																									TREE_VALUE: <>
 2035 																																																									IDENTIFIER_CLASS_VALUE: <>
 2036 																																																									IDENTIFIER_TYPE_VALUE: <>
 2037 																																																									GNU_xref_end_scope: 2004
 2038 																																																									pop_binding_level: 2018
 2039 																																																								pop_class_decls: void (), <./cc/cp/search.c 3440>
 2040 																																																									pop_search_level: <>
 2041 																																																								pop_memoized_context: void (), <./cc/cp/search.c 353>
 2042 																																																							pushlevel_class: void (), <./cc/cp/decl.c 1399>
 2043 																																																							DECL_CONTEXT: 267
 2044 																																																							declare_uninstantiated_type_level: void (), <./cc/cp/decl.c 890>
 2045 																																																							build_mi_matrix: void (), <./cc/cp/search.c 3039>
 2046 																																																								TYPE_BINFO: if (), <./cc/cp/search.c 454>
 2047 																																																								CLASSTYPE_MI_MATRIX: <>
 2048 																																																								CLASSTYPE_N_SUPERCLASSES: <>
 2049 																																																								CLASSTYPE_N_VBASECLASSES: <>
 2050 																																																								dfs_walk: void (), <./cc/cp/search.c 2326>
 2051 																																																									BINFO_BASETYPES: <>
 2052 																																																									TREE_VEC_LENGTH: <>
 2053 																																																									TREE_VEC_ELT: <>
 2054 																																																									dfs_init_vbase_pointers: void (), <./cc/cp/search.c 2550>
 2055 																																																										BINFO_TYPE: <>
 2056 																																																										TYPE_FIELDS: <>
 2057 																																																										CLEAR_BINFO_VTABLE_PATH_MARKED: <>
 2058 																																																										CLASSTYPE_RTTI: <>
 2059 																																																										VFIELD_NAME_P: <>
 2060 																																																										DECL_NAME: 250
 2061 																																																										TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 2062 																																																										VBASE_NAME_P: <>
 2063 																																																										build_pointer_type: 390
 2064 																																																										TYPE_MAIN_VARIANT: 324
 2065 																																																										TREE_TYPE: 160
 2066 																																																										my_friendly_abort: 357
 2067 																																																										build: <>
 2068 																																																										build_indirect_ref: 329
 2069 																																																										CLASSTYPE_SEARCH_SLOT: <>
 2070 																																																										tree_cons: <>
 2071 																																																										binfo_member: tree (), <./cc/tree.c 1692>
 2072 																																																											BINFO_TYPE: <>
 2073 																																																											TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 2074 																																																											BINFO_INHERITANCE_CHAIN: <>
 2075 																																																										build_modify_expr: <>
 2076 																																																									TREE_VIA_VIRTUAL: 1041
 2077 																																																									CLASSTYPE_SEARCH_SLOT: <>
 2078 																																																									BINFO_TYPE: <>
 2079 																																																									convert_pointer_to_single_level: tree (), <./cc/cp/search.c 2307>
 2080 																																																										TYPE_BINFO: if (), <./cc/cp/search.c 454>
 2081 																																																										TREE_TYPE: 160
 2082 																																																										get_binfo: <>
 2083 																																																										BINFO_INHERITANCE_CHAIN: <>
 2084 																																																										build_vbase_path: tree (), <./cc/cp/class.c 181>
 2085 																																																											resolves_to_fixed_type_p: int (), <./cc/cp/class.c 4201>
 2086 																																																												TREE_CODE: 162
 2087 																																																												TREE_TYPE: 160
 2088 																																																												TREE_OPERAND: <>
 2089 																																																												TREE_HAS_CONSTRUCTOR: <>
 2090 																																																												resolves_to_fixed_type_p: 2085
 2091 																																																												TREE_CALLS_NEW: <>
 2092 																																																												IS_AGGR_TYPE: else if (), <./cc/cp/typeck.c 6140>
 2093 																																																												DESTRUCTOR_NAME_P: <>
 2094 																																																												DECL_ASSEMBLER_NAME: <>
 2095 																																																											complete_type_p: int (), <./cc/cp/class.c 130>
 2096 																																																												TYPE_MAIN_VARIANT: 324
 2097 																																																												TREE_TYPE: 160
 2098 																																																												TREE_CODE: 162
 2099 																																																												TREE_OPERAND: <>
 2100 																																																												TREE_HAS_CONSTRUCTOR: <>
 2101 																																																												IS_AGGR_TYPE: else if (), <./cc/cp/typeck.c 6140>
 2102 																																																											TREE_SIDE_EFFECTS: if (), <./cc/cp/typeck.c 4958>
 2103 																																																											save_expr: <>
 2104 																																																											BINFO_INHERITANCE_CHAIN: <>
 2105 																																																											reverse_path: tree (), <./cc/cp/tree.c 1276>
 2106 																																																												BINFO_INHERITANCE_CHAIN: <>
 2107 																																																											copy_node: 874
 2108 																																																											BINFO_TYPE: <>
 2109 																																																											TREE_VIA_VIRTUAL: 1041
 2110 																																																											get_binfo: <>
 2111 																																																											TYPE_MAIN_VARIANT: 324
 2112 																																																											TREE_TYPE: 160
 2113 																																																											convert_pointer_to_real: 385
 2114 																																																											build_indirect_ref: 329
 2115 																																																											build_vbase_pointer: tree (), <./cc/cp/class.c 117>
 2116 																																																												alloca: <>
 2117 																																																												TYPE_NAME_LENGTH: <>
 2118 																																																												sprintf: <>
 2119 																																																												TYPE_NAME_STRING: <>
 2120 																																																												build_component_ref: 159
 2121 																																																												get_identifier: <>
 2122 																																																											TREE_CODE: 162
 2123 																																																											build1: 334
 2124 																																																											build_pointer_type: 390
 2125 																																																											build: <>
 2126 																																																											cp_error: 259
 2127 																																																											TREE_OPERAND: <>
 2128 																																																											BINFO_OFFSET: <>
 2129 																																																											binfo_member: 2071
 2130 																																																											CLASSTYPE_VBASECLASSES: <>
 2131 																																																											size_binop: <>
 2132 																																																											TREE_INT_CST_LOW: <>
 2133 																																																											convert: 427
 2134 																																																										build_pointer_type: 390
 2135 																																																									dfs_walk: 2050
 2136 																																																								dfs_number: void (), <./cc/cp/search.c 2430>
 2137 																																																									BINFO_CID: <>
 2138 																																																								unnumberedp: int (), <./cc/cp/search.c 2388>
 2139 																																																									BINFO_CID: <>
 2140 																																																								xmalloc: 1643
 2141 																																																								dfs_record_inheritance: void (), <./cc/cp/search.c 3001>
 2142 																																																									BINFO_BASETYPES: <>
 2143 																																																									TREE_VEC_LENGTH: <>
 2144 																																																									BINFO_DERIVES_FROM_STAR: <>
 2145 																																																									TREE_VEC_ELT: <>
 2146 																																																									BINFO_TYPE: <>
 2147 																																																									TYPE_BINFO_BASETYPES: <>
 2148 																																																									CLASSTYPE_CID: <>
 2149 																																																									TYPE_DERIVES_FROM: <>
 2150 																																																									SET_BINFO_MARKED: <>
 2151 																																																								unmarkedp: int (), <./cc/cp/search.c 2395>
 2152 																																																									BINFO_MARKED: <>
 2153 																																																								dfs_unmark: void (), <./cc/cp/search.c 2448>
 2154 																																																									CLEAR_BINFO_MARKED: <>
 2155 																																																								markedp: int (), <./cc/cp/search.c 2391>
 2156 																																																									BINFO_MARKED: <>
 2157 																																																							push_class_decls: void (), <./cc/cp/search.c 3347>
 2158 																																																								push_search_level: <>
 2159 																																																								TYPE_IDENTIFIER: <>
 2160 																																																								IDENTIFIER_TEMPLATE: <>
 2161 																																																								push_template_decls: void (), <./cc/cp/pt.c 628>
 2162 																																																									pushlevel: 1896
 2163 																																																									declare_pseudo_global_level: void (), <./cc/cp/decl.c 902>
 2164 																																																									TREE_VEC_LENGTH: <>
 2165 																																																									TREE_VALUE: <>
 2166 																																																									TREE_VEC_ELT: <>
 2167 																																																									TREE_CODE: 162
 2168 																																																									TREE_CODE_CLASS: switch (), <./cc/dwarfout.c 3160>
 2169 																																																									error: 52
 2170 																																																									my_friendly_assert: 379
 2171 																																																									build_decl: 888
 2172 																																																									DECL_NAME: 250
 2173 																																																									tsubst: 834
 2174 																																																									TREE_TYPE: 160
 2175 																																																									digest_init: tree (), <./cc/cp/typeck2.c 713>
 2176 																																																										TREE_CODE: 162
 2177 																																																										TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 2178 																																																										TREE_VALUE: <>
 2179 																																																										TREE_OPERAND: <>
 2180 																																																										TREE_TYPE: 160
 2181 																																																										TYPE_PTRMEMFUNC_P: 258
 2182 																																																										default_conversion: 165
 2183 																																																										integer_zerop: 405
 2184 																																																										build_ptrmemfunc: <>
 2185 																																																										TYPE_PTRMEMFUNC_FN_TYPE: <>
 2186 																																																										CONSTRUCTOR_ELTS: <>
 2187 																																																										TYPE_MAIN_VARIANT: 324
 2188 																																																										comptypes: 1133
 2189 																																																										pedwarn: <>
 2190 																																																										DECL_INITIAL: 168
 2191 																																																										TREE_READONLY_DECL_P: if (), <./cc/cp/decl.c 11146>
 2192 																																																										decl_constant_value: tree (), <./cc/cp/init.c 2291>
 2193 																																																											TREE_THIS_VOLATILE: <>
 2194 																																																											TREE_PUBLIC: 194
 2195 																																																											DECL_INITIAL: 168
 2196 																																																											TREE_CODE: 162
 2197 																																																											TREE_CONSTANT: if (), <./cc/fold-const.c 3102>
 2198 																																																											DECL_MODE: <>
 2199 																																																										TYPE_PRECISION: 211
 2200 																																																										error: 52
 2201 																																																										TYPE_DOMAIN: <>
 2202 																																																										TREE_CONSTANT: if (), <./cc/fold-const.c 3102>
 2203 																																																										TYPE_SIZE: if (), <./cc/dwarfout.c 3636>
 2204 																																																										TREE_INT_CST_LOW: <>
 2205 																																																										TREE_STRING_LENGTH: <>
 2206 																																																										IS_SIGNATURE_POINTER: <>
 2207 																																																										IS_SIGNATURE_REFERENCE: <>
 2208 																																																										cp_pedwarn: 1314
 2209 																																																										convert_for_initialization: <>
 2210 																																																										cp_error: 259
 2211 																																																										TYPE_NON_AGGREGATE_CLASS: <>
 2212 																																																										process_init_constructor: tree (), <./cc/cp/typeck2.c 952>
 2213 																																																											warning: 281
 2214 																																																											CONSTRUCTOR_ELTS: <>
 2215 																																																											TREE_CODE: 162
 2216 																																																											TYPE_DOMAIN: <>
 2217 																																																											TREE_INT_CST_LOW: <>
 2218 																																																											TYPE_MAX_VALUE: <>
 2219 																																																											TYPE_MIN_VALUE: <>
 2220 																																																											TREE_VALUE: <>
 2221 																																																											digest_init: 2175
 2222 																																																											TYPE_MAIN_VARIANT: 324
 2223 																																																											TREE_TYPE: 160
 2224 																																																											TYPE_NEEDS_CONSTRUCTING: <>
 2225 																																																											convert_for_initialization: <>
 2226 																																																											my_friendly_assert: 379
 2227 																																																											error: 52
 2228 																																																											TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 2229 																																																											TREE_CONSTANT: if (), <./cc/fold-const.c 3102>
 2230 																																																											initializer_constant_valid_p: tree (), <./cc/cp/typeck2.c 400>
 2231 																																																												TREE_CODE: 162
 2232 																																																												TREE_TYPE: 160
 2233 																																																												TREE_CONSTANT: if (), <./cc/fold-const.c 3102>
 2234 																																																												initializer_constant_valid_p: 2230
 2235 																																																												TREE_VALUE: <>
 2236 																																																												CONSTRUCTOR_ELTS: <>
 2237 																																																												TREE_STATIC: if (), <./cc/stor-layout.c 332>
 2238 																																																												TREE_OPERAND: <>
 2239 																																																												TYPE_PRECISION: 211
 2240 																																																											tree_cons: <>
 2241 																																																											TYPE_USES_VIRTUAL_BASECLASSES: <>
 2242 																																																											sorry: <>
 2243 																																																											TYPE_BINFO_BASETYPES: <>
 2244 																																																											TYPE_VIRTUAL_P: <>
 2245 																																																											TYPE_FIELDS: <>
 2246 																																																											DECL_NAME: 250
 2247 																																																											DECL_INITIAL: 168
 2248 																																																											TREE_READONLY: if (), <./cc/cp/decl2.c 1229>
 2249 																																																											IDENTIFIER_POINTER: <>
 2250 																																																											TYPE_LANG_SPECIFIC: 370
 2251 																																																											CLASSTYPE_READONLY_FIELDS_NEED_INIT: <>
 2252 																																																											TREE_PURPOSE: 215
 2253 																																																											cp_error: 259
 2254 																																																											my_friendly_abort: 357
 2255 																																																											pedwarn: <>
 2256 																																																											build: <>
 2257 																																																											nreverse: <>
 2258 																																																											TREE_HAS_CONSTRUCTOR: <>
 2259 																																																											TREE_STATIC: if (), <./cc/stor-layout.c 332>
 2260 																																																										build_nt: <>
 2261 																																																										tree_cons: <>
 2262 																																																									DECL_INITIAL: 168
 2263 																																																									TREE_READONLY: if (), <./cc/cp/decl2.c 1229>
 2264 																																																									SET_DECL_ARTIFICIAL: <>
 2265 																																																									layout_decl: <>
 2266 																																																									pushdecl_class_level: <>
 2267 																																																									pushdecl: <>
 2268 																																																								DECL_ARGUMENTS: <>
 2269 																																																								TREE_PURPOSE: 215
 2270 																																																								TREE_VALUE: <>
 2271 																																																								overload_template_name: void (), <./cc/cp/pt.c 1849>
 2272 																																																									my_friendly_assert: 379
 2273 																																																									TREE_CODE: 162
 2274 																																																									IDENTIFIER_TEMPLATE: <>
 2275 																																																									TREE_PURPOSE: 215
 2276 																																																									DECL_TEMPLATE_INFO: <>
 2277 																																																									DECL_NAME: 250
 2278 																																																									pushlevel: 1896
 2279 																																																									declare_pseudo_global_level: 2163
 2280 																																																									xref_tag: tree (), <./cc/c-decl.c 5541>
 2281 																																																										allocation_temporary_p: 1462
 2282 																																																										lookup_tag: 302
 2283 																																																										push_obstacks_nochange: 517
 2284 																																																										end_temporary_allocation: 1463
 2285 																																																										make_node: 307
 2286 																																																										pedwarn: <>
 2287 																																																										TYPE_MODE: <>
 2288 																																																										TYPE_ALIGN: <>
 2289 																																																										TREE_UNSIGNED: 678
 2290 																																																										TYPE_PRECISION: 211
 2291 																																																										TYPE_MIN_VALUE: <>
 2292 																																																										TYPE_MAX_VALUE: <>
 2293 																																																										pushtag: void (), <./cc/cp/decl.c 2104>
 2294 																																																											TYPE_NAME: 271
 2295 																																																											perm_tree_cons: <>
 2296 																																																											saveable_tree_cons: <>
 2297 																																																											TYPE_STUB_DECL: <>
 2298 																																																											pushdecl: <>
 2299 																																																											build_decl: 888
 2300 																																																											toplevel_bindings_p: 1614
 2301 																																																											TYPE_CONTEXT: <>
 2302 																																																											current_scope: tree (), <./cc/cp/search.c 780>
 2303 																																																											TREE_CODE: 162
 2304 																																																											TYPE_MAIN_DECL: <>
 2305 																																																											IDENTIFIER_TYPE_VALUE: <>
 2306 																																																											TYPE_SIZE: if (), <./cc/dwarfout.c 3636>
 2307 																																																											lookup_nested_type: tree (), <./cc/cp/decl.c 4327>
 2308 																																																												TREE_CODE: 162
 2309 																																																												TREE_TYPE: 160
 2310 																																																												value_member: tree (), <./cc/tree.c 1660>
 2311 																																																													TREE_VALUE: <>
 2312 																																																													TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 2313 																																																												CLASSTYPE_TAGS: <>
 2314 																																																												TREE_VALUE: <>
 2315 																																																												DECL_CONTEXT: 267
 2316 																																																												TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 2317 																																																												TYPE_NAME: 271
 2318 																																																												TYPE_IDENTIFIER: <>
 2319 																																																												lookup_name: 1474
 2320 																																																												my_friendly_abort: 357
 2321 																																																											make_type_decl: 911
 2322 																																																											DECL_ASSEMBLER_NAME: <>
 2323 																																																											current_namespace_id: tree (), <./cc/cp/decl2.c 3505>
 2324 																																																												get_namespace_id: tree (), <./cc/cp/decl2.c 3495>
 2325 																																																													TREE_PURPOSE: 215
 2326 																																																												alloca: <>
 2327 																																																												IDENTIFIER_LENGTH: <>
 2328 																																																												sprintf: <>
 2329 																																																												IDENTIFIER_POINTER: <>
 2330 																																																												get_identifier: <>
 2331 																																																											SET_DECL_ARTIFICIAL: <>
 2332 																																																											DECL_IGNORED_P: if (), <./cc/dwarfout.c 4741>
 2333 																																																											set_identifier_type_value_with_scope: void (), <./cc/cp/decl.c 1972>
 2334 																																																												IDENTIFIER_TYPE_VALUE: <>
 2335 																																																												tree_cons: <>
 2336 																																																												SET_IDENTIFIER_TYPE_VALUE: <>
 2337 																																																											ANON_AGGRNAME_P: <>
 2338 																																																											pushdecl_class_level: <>
 2339 																																																											pushdecl_with_scope: <>
 2340 																																																											pushclass: 1930
 2341 																																																											popclass: 1937
 2342 																																																											set_nested_typename: void (), <./cc/cp/decl.c 2001>
 2343 																																																												my_friendly_assert: 379
 2344 																																																												TREE_CODE: 162
 2345 																																																												ANON_AGGRNAME_P: <>
 2346 																																																												DECL_NESTED_TYPENAME: <>
 2347 																																																												get_identifier: <>
 2348 																																																												alloca: <>
 2349 																																																												IDENTIFIER_LENGTH: <>
 2350 																																																												sprintf: <>
 2351 																																																												IDENTIFIER_POINTER: <>
 2352 																																																												TREE_MANGLED: <>
 2353 																																																												build_decl: 888
 2354 																																																												SET_DECL_ARTIFICIAL: <>
 2355 																																																												DECL_IGNORED_P: if (), <./cc/dwarfout.c 4741>
 2356 																																																												SET_IDENTIFIER_TYPE_VALUE: <>
 2357 																																																												pushdecl_nonclass_level: <>
 2358 																																																											DECL_NESTED_TYPENAME: <>
 2359 																																																											DECL_CONTEXT: 267
 2360 																																																											get_identifier: <>
 2361 																																																											build_overload_name: 767
 2362 																																																											TREE_NONLOCAL_FLAG: <>
 2363 																																																											CLASSTYPE_TAGS: <>
 2364 																																																										pop_obstacks: 396
 2365 																																																									build_decl: 888
 2366 																																																									SET_DECL_ARTIFICIAL: <>
 2367 																																																									IDENTIFIER_CLASS_VALUE: <>
 2368 																																																									IDENTIFIER_LOCAL_VALUE: <>
 2369 																																																									TREE_TYPE: 160
 2370 																																																									my_friendly_abort: 357
 2371 																																																									pushdecl_class_level: <>
 2372 																																																									pushdecl: <>
 2373 																																																									DECL_CONTEXT: 267
 2374 																																																								dfs_walk: 2050
 2375 																																																								TYPE_BINFO: if (), <./cc/cp/search.c 454>
 2376 																																																								dfs_pushdecls: void (), <./cc/cp/search.c 3218>
 2377 																																																									BINFO_TYPE: <>
 2378 																																																									TYPE_FIELDS: <>
 2379 																																																									TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 2380 																																																									TREE_CODE: 162
 2381 																																																									TREE_USED: <>
 2382 																																																									DECL_NAME: 250
 2383 																																																									TREE_TYPE: 160
 2384 																																																									dfs_pushdecls: 2376
 2385 																																																									TYPE_BINFO: if (), <./cc/cp/search.c 454>
 2386 																																																									IDENTIFIER_CLASS_VALUE: <>
 2387 																																																									TREE_PURPOSE: 215
 2388 																																																									tree_cons: <>
 2389 																																																									envelope_add_decl: void (), <./cc/cp/search.c 3104>
 2390 																																																										DECL_NAME: 250
 2391 																																																										VBASE_NAME_P: <>
 2392 																																																										TREE_CODE: 162
 2393 																																																										DECL_LANG_SPECIFIC: if (), <./cc/cp/decl.c 2992>
 2394 																																																										DECL_CLASS_CONTEXT: <>
 2395 																																																										TREE_PRIVATE: <>
 2396 																																																										cp_warning_at: 283
 2397 																																																										DECL_VIRTUAL_P: if (), <./cc/dwarfout.c 2795>
 2398 																																																										DECL_CONTEXT: 267
 2399 																																																										DECL_ARTIFICIAL: 278
 2400 																																																										TYPE_DERIVES_FROM: <>
 2401 																																																										build_tree_list: <>
 2402 																																																										TREE_VALUE: <>
 2403 																																																										my_friendly_assert: 379
 2404 																																																										TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 2405 																																																										tree_cons: <>
 2406 																																																										TREE_NONLOCAL_FLAG: <>
 2407 																																																										TREE_TYPE: 160
 2408 																																																									CLASSTYPE_METHOD_VEC: <>
 2409 																																																									TREE_VEC_ELT: <>
 2410 																																																									TREE_VEC_END: <>
 2411 																																																									maybe_push_cache_obstack: void (), <./cc/cp/class.c 5123>
 2412 																																																										push_obstacks_nochange: 517
 2413 																																																									pop_obstacks: 396
 2414 																																																									SET_BINFO_MARKED: <>
 2415 																																																								unmarkedp: 2151
 2416 																																																								dfs_compress_decls: void (), <./cc/cp/search.c 3305>
 2417 																																																									BINFO_TYPE: <>
 2418 																																																									CLASSTYPE_METHOD_VEC: <>
 2419 																																																									TREE_VEC_ELT: <>
 2420 																																																									TREE_VEC_END: <>
 2421 																																																									IDENTIFIER_CLASS_VALUE: <>
 2422 																																																									DECL_NAME: 250
 2423 																																																									TREE_PURPOSE: 215
 2424 																																																									TREE_CODE: 162
 2425 																																																									TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 2426 																																																									TREE_VALUE: <>
 2427 																																																									DECL_CHAIN: if (), <./cc/cp/decl2.c 1871>
 2428 																																																									CLEAR_BINFO_MARKED: <>
 2429 																																																								markedp: 2155
 2430 																																																								TREE_CODE: 162
 2431 																																																								DECL_NAME: 250
 2432 																																																								IDENTIFIER_CLASS_VALUE: <>
 2433 																																																								push_class_level_binding: <>
 2434 																																																								pushdecl_class_level: <>
 2435 																																																								TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 2436 																																																							free_mi_matrix: void (), <./cc/cp/search.c 3066>
 2437 																																																								dfs_walk: 2050
 2438 																																																								TYPE_BINFO: if (), <./cc/cp/search.c 454>
 2439 																																																								dfs_unnumber: void (), <./cc/cp/search.c 2437>
 2440 																																																									BINFO_CID: <>
 2441 																																																								numberedp: int (), <./cc/cp/search.c 2386>
 2442 																																																									BINFO_CID: <>
 2443 																																																								CLASSTYPE_MI_MATRIX: <>
 2444 																																																								free: <>
 2445 																																																							set_class_shadows: void (), <./cc/cp/decl.c 920>
 2446 																																																							TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 2447 																																																							TREE_PURPOSE: 215
 2448 																																																							IDENTIFIER_CLASS_VALUE: <>
 2449 																																																							set_identifier_type_value: void (), <./cc/cp/decl.c 1989>
 2450 																																																								set_identifier_type_value_with_scope: 2333
 2451 																																																							TREE_TYPE: 160
 2452 																																																							unuse_fields: void (), <./cc/cp/search.c 3433>
 2453 																																																								dfs_walk: 2050
 2454 																																																								TYPE_BINFO: if (), <./cc/cp/search.c 454>
 2455 																																																								dfs_unuse_fields: void (), <./cc/cp/search.c 3414>
 2456 																																																									TREE_TYPE: 160
 2457 																																																									TYPE_FIELDS: <>
 2458 																																																									TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 2459 																																																									TREE_CODE: 162
 2460 																																																									TREE_USED: <>
 2461 																																																									DECL_NAME: 250
 2462 																																																									unuse_fields: 2452
 2463 																																																								unmarkedp: 2151
 2464 																																																							IDENTIFIER_TEMPLATE: <>
 2465 																																																							TYPE_IDENTIFIER: <>
 2466 																																																							overload_template_name: 2271
 2467 																																																							CLASSTYPE_TAGS: <>
 2468 																																																							TREE_NONLOCAL_FLAG: <>
 2469 																																																							TREE_VALUE: <>
 2470 																																																							pushtag: 2293
 2471 																																																							cadillac_push_class: void (), <./cc/cp/edsel.c 900>
 2472 																																																						global_bindings_p: 1509
 2473 																																																						UPT_TEMPLATE: <>
 2474 																																																						fprintf: <>
 2475 																																																						print_node_brief: void (), <./cc/print-tree.c 67>
 2476 																																																							TREE_CODE_CLASS: switch (), <./cc/dwarfout.c 3160>
 2477 																																																							TREE_CODE: 162
 2478 																																																							fprintf: <>
 2479 																																																							DECL_NAME: 250
 2480 																																																							IDENTIFIER_POINTER: <>
 2481 																																																							TYPE_NAME: 271
 2482 																																																							TREE_CONSTANT_OVERFLOW: <>
 2483 																																																							TREE_INT_CST_HIGH: <>
 2484 																																																							TREE_INT_CST_LOW: <>
 2485 																																																							TREE_OVERFLOW: <>
 2486 																																																							TREE_REAL_CST: <>
 2487 																																																							REAL_VALUE_ISINF: <>
 2488 																																																							REAL_VALUE_ISNAN: if (), <./cc/fold-const.c 1483>
 2489 																																																							REAL_VALUE_TO_DECIMAL: <>
 2490 																																																						DECL_TEMPLATE_MEMBERS: <>
 2491 																																																						perm_tree_cons: <>
 2492 																																																						sorry: <>
 2493 																																																						my_friendly_abort: 357
 2494 																																																						TREE_READONLY: if (), <./cc/cp/decl2.c 1229>
 2495 																																																						cadillac_start_decl: void (), <./cc/cp/edsel.c 860>
 2496 																																																							TREE_CODE: 162
 2497 																																																							cadillac_printf: void (), <./cc/cp/edsel.c 307>
 2498 																																																								printf: <>
 2499 																																																							IDENTIFIER_POINTER: <>
 2500 																																																							DECL_NAME: 250
 2501 																																																							my_friendly_abort: 357
 2502 																																																							DECL_ASSEMBLER_NAME: <>
 2503 																																																							CWriteTopLevel: void (), <./cc/cp/edsel.c 623>
 2504 																																																								CWriteHeader: <>
 2505 																																																								cadillac_note_filepos: void (), <./cc/cp/edsel.c 640>
 2506 																																																									ftell: <>
 2507 																																																									CWriteSomething: <>
 2508 																																																								CWriteSomething: <>
 2509 																																																								CWriteLength: <>
 2510 																																																							CWriteLanguageDecl: void (), <./cc/cp/edsel.c 704>
 2511 																																																								CWriteHeader: <>
 2512 																																																								decl_type_context: <>
 2513 																																																								TREE_PRIVATE: <>
 2514 																																																								TREE_PROTECTED: else if (), <./cc/cp/search.c 906>
 2515 																																																								TREE_PUBLIC: 194
 2516 																																																								DECL_NAME: 250
 2517 																																																								IDENTIFIER_LENGTH: <>
 2518 																																																								CWriteLanguageElem: void (), <./cc/cp/edsel.c 685>
 2519 																																																									CWriteSomething: <>
 2520 																																																									CWriteVstring0: <>
 2521 																																																									CWriteLength: <>
 2522 																																																								IDENTIFIER_POINTER: <>
 2523 																																																								CWriteRequestBuffer: <>
 2524 																																																								cadillac_process_requests: void (), <./cc/cp/edsel.c 214>
 2525 																																																									CPeekNextRequest: <>
 2526 																																																									CReadCompilerMessage: <>
 2527 																																																									cadillac_process_request: void (), <./cc/cp/edsel.c 226>
 2528 																																																										my_friendly_abort: 357
 2529 																																																										fprintf: <>
 2530 																																																										fatal: 49
 2531 																																																							CWriteRequestBuffer: <>
 2532 																																																							cadillac_process_requests: 2524
 2533 																																																					finish_decl: void (), <./cc/cp/decl.c 7001>
 2534 																																																						TREE_TYPE: 160
 2535 																																																						DECL_SIZE: <>
 2536 																																																						allocation_temporary_p: 1462
 2537 																																																						TREE_STRING_POINTER: <>
 2538 																																																						DECL_INITIAL: 168
 2539 																																																						TREE_CODE: 162
 2540 																																																						ITERATOR_P: <>
 2541 																																																						error_with_decl: <>
 2542 																																																						save_expr: <>
 2543 																																																						store_init_value: tree (), <./cc/cp/typeck2.c 540>
 2544 																																																							TREE_TYPE: 160
 2545 																																																							TREE_CODE: 162
 2546 																																																							digest_init: tree (), <./cc/c-typeck.c 4755>
 2547 																																																								TREE_CODE: 162
 2548 																																																								TREE_OPERAND: <>
 2549 																																																								TYPE_MAIN_VARIANT: 324
 2550 																																																								TREE_TYPE: 160
 2551 																																																								comptypes: 1133
 2552 																																																								TYPE_PRECISION: 211
 2553 																																																								error_init: void (), <./cc/c-typeck.c 4678>
 2554 																																																									print_spelling: <>
 2555 																																																									alloca: <>
 2556 																																																									spelling_length: 414
 2557 																																																									strlen: <>
 2558 																																																									sprintf: <>
 2559 																																																									error: 52
 2560 																																																								TYPE_DOMAIN: <>
 2561 																																																								TYPE_SIZE: if (), <./cc/dwarfout.c 3636>
 2562 																																																								TREE_INT_CST_LOW: <>
 2563 																																																								TREE_STRING_LENGTH: <>
 2564 																																																								pedwarn_init: void (), <./cc/c-typeck.c 4704>
 2565 																																																									print_spelling: <>
 2566 																																																									alloca: <>
 2567 																																																									spelling_length: 414
 2568 																																																									strlen: <>
 2569 																																																									sprintf: <>
 2570 																																																									pedwarn: <>
 2571 																																																								default_conversion: 165
 2572 																																																								decl_constant_value: 193
 2573 																																																								valid_compound_expr_initializer: tree (), <./cc/c-typeck.c 4418>
 2574 																																																									TREE_CODE: 162
 2575 																																																									valid_compound_expr_initializer: 2573
 2576 																																																									TREE_OPERAND: <>
 2577 																																																									TREE_CONSTANT: if (), <./cc/fold-const.c 3102>
 2578 																																																									initializer_constant_valid_p: 2230
 2579 																																																								TREE_CONSTANT: if (), <./cc/fold-const.c 3102>
 2580 																																																								initializer_constant_valid_p: 2230
 2581 																																																								convert_for_assignment: <>
 2582 																																																								build: <>
 2583 																																																								build_tree_list: <>
 2584 																																																								TYPE_FIELDS: <>
 2585 																																																								digest_init: 2546
 2586 																																																							TREE_STATIC: if (), <./cc/stor-layout.c 332>
 2587 																																																							TREE_CONSTANT: if (), <./cc/fold-const.c 3102>
 2588 																																																							error: 52
 2589 																																																							initializer_constant_valid_p: 2230
 2590 																																																							pedwarn: <>
 2591 																																																							DECL_INITIAL: 168
 2592 																																																							STRIP_TYPE_NOPS: <>
 2593 																																																							constant_expression_warning: 1498
 2594 																																																							TYPE_MAIN_VARIANT: 324
 2595 																																																							IS_AGGR_TYPE: else if (), <./cc/cp/typeck.c 6140>
 2596 																																																							TYPE_HAS_TRIVIAL_INIT_REF: <>
 2597 																																																								cp_warning: 279
 2598 																																																								tree_cons: <>
 2599 																																																							my_friendly_abort: 357
 2600 																																																							IS_SIGNATURE: 1061
 2601 																																																							cp_error: 259
 2602 																																																							build_nt: <>
 2603 																																																							nreverse: <>
 2604 																																																							CLASSTYPE_N_BASECLASSES: <>
 2605 																																																							cp_error_at: 1225
 2606 																																																							CLASSTYPE_VTBL_PTR: <>
 2607 																																																							TYPE_NEEDS_CONSTRUCTING: <>
 2608 																																																							TYPE_FIELDS: <>
 2609 																																																							TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 2610 																																																							TREE_PRIVATE: <>
 2611 																																																							TREE_PROTECTED: else if (), <./cc/cp/search.c 906>
 2612 																																																							TYPE_METHODS: <>
 2613 																																																							TREE_VEC_LENGTH: <>
 2614 																																																							TREE_VEC_ELT: <>
 2615 																																																							warning: 281
 2616 																																																							build_compound_expr: <>
 2617 																																																							TREE_VALUE: <>
 2618 																																																							instantiate_type: tree (), <./cc/cp/class.c 4651>
 2619 																																																								TREE_CODE: 162
 2620 																																																								error: 52
 2621 																																																								TREE_TYPE: 160
 2622 																																																								type_unknown_p: else if (), <./cc/cp/typeck.c 2650>
 2623 																																																									TREE_CODE: 162
 2624 																																																									TREE_TYPE: 160
 2625 																																																								my_friendly_abort: 357
 2626 																																																								build_pointer_type: 390
 2627 																																																								TREE_OPERAND: <>
 2628 																																																								instantiate_type: 2618
 2629 																																																								copy_node: 874
 2630 																																																								my_friendly_assert: 379
 2631 																																																								DECL_VINDEX: <>
 2632 																																																								build_unary_op: <>
 2633 																																																								convert_pointer_to: 381
 2634 																																																								DECL_CONTEXT: 267
 2635 																																																								build_vfn_ref: tree (), <./cc/cp/class.c 426>
 2636 																																																									TREE_TYPE: 160
 2637 																																																									TREE_CODE: 162
 2638 																																																									build_indirect_ref: 329
 2639 																																																									build_vfield_ref: <>
 2640 																																																									TREE_OPERAND: <>
 2641 																																																									DECL_INITIAL: 168
 2642 																																																									IS_AGGR_TYPE: else if (), <./cc/cp/typeck.c 6140>
 2643 																																																									TYPE_BINFO_VTABLE: <>
 2644 																																																									assemble_external: <>
 2645 																																																									build_array_ref: tree (), <./cc/c-typeck.c 1391>
 2646 																																																										error: 52
 2647 																																																										TREE_TYPE: 160
 2648 																																																										TREE_CODE: 162
 2649 																																																										TYPE_MAIN_VARIANT: 324
 2650 																																																										warning: 281
 2651 																																																										default_conversion: 165
 2652 																																																										TYPE_SIZE: if (), <./cc/dwarfout.c 3636>
 2653 																																																										mark_addressable: <>
 2654 																																																										TYPE_VALUES: <>
 2655 																																																										int_fits_type_p: <>
 2656 																																																										lvalue_p: int (), <./cc/cp/tree.c 110>
 2657 																																																											language_lvalue_valid: <>
 2658 																																																											TREE_CODE: 162
 2659 																																																											TREE_TYPE: 160
 2660 																																																											lvalue_p: 2656
 2661 																																																											TREE_OPERAND: <>
 2662 																																																											TREE_READONLY: if (), <./cc/cp/decl2.c 1229>
 2663 																																																											TREE_STATIC: if (), <./cc/stor-layout.c 332>
 2664 																																																											DECL_LANG_SPECIFIC: if (), <./cc/cp/decl.c 2992>
 2665 																																																											DECL_IN_AGGR_P: if (), <./cc/cp/decl2.c 1860>
 2666 																																																											IS_AGGR_TYPE: else if (), <./cc/cp/typeck.c 6140>
 2667 																																																											my_friendly_abort: 357
 2668 																																																										DECL_REGISTER: <>
 2669 																																																										pedwarn: <>
 2670 																																																										foo:  (), <./cc/libgcc1-test.c 76>
 2671 																																																										TREE_OPERAND: <>
 2672 																																																										build: <>
 2673 																																																										TREE_READONLY: if (), <./cc/cp/decl2.c 1229>
 2674 																																																										TYPE_READONLY: 217
 2675 																																																										TREE_SIDE_EFFECTS: if (), <./cc/cp/typeck.c 4958>
 2676 																																																										TYPE_VOLATILE: <>
 2677 																																																										TREE_THIS_VOLATILE: <>
 2678 																																																										require_complete_type: 345
 2679 																																																										fold: <>
 2680 																																																										build_indirect_ref: 329
 2681 																																																										build_binary_op: 164
 2682 																																																									save_expr: <>
 2683 																																																									build: <>
 2684 																																																									convert: 427
 2685 																																																									build_component_ref: 159
 2686 																																																								DECL_CHAIN: if (), <./cc/cp/decl2.c 1871>
 2687 																																																								comptypes: 1133
 2688 																																																								overloaded_globals_p: <>
 2689 																																																								TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 2690 																																																								TREE_VALUE: <>
 2691 																																																								TYPE_PTRMEMFUNC_P: 258
 2692 																																																								TYPE_PTRMEMFUNC_FN_TYPE: <>
 2693 																																																								cp_error: 259
 2694 																																																								TREE_PURPOSE: 215
 2695 																																																								get_first_fn: tree (), <./cc/cp/tree.c 1427>
 2696 																																																									TREE_CODE: 162
 2697 																																																									my_friendly_assert: 379
 2698 																																																									TREE_VALUE: <>
 2699 																																																								TREE_VEC_LENGTH: <>
 2700 																																																								DECL_TEMPLATE_PARMS: <>
 2701 																																																								alloca: <>
 2702 																																																								type_unification: int (), <./cc/cp/pt.c 2028>
 2703 																																																									TREE_VEC_LENGTH: <>
 2704 																																																									my_friendly_assert: 379
 2705 																																																									TREE_CODE: 162
 2706 																																																									bzero: <>
 2707 																																																									TREE_VALUE: <>
 2708 																																																									TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 2709 																																																									uses_template_parms: int (), <./cc/cp/pt.c 710>
 2710 																																																										TREE_CODE: 162
 2711 																																																										uses_template_parms: 2709
 2712 																																																										TREE_TYPE: 160
 2713 																																																										IDENTIFIER_TEMPLATE: <>
 2714 																																																										TREE_VALUE: <>
 2715 																																																										TREE_VEC_LENGTH: <>
 2716 																																																										TREE_VEC_ELT: <>
 2717 																																																										TREE_PURPOSE: 215
 2718 																																																										TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 2719 																																																										TYPE_PTRMEMFUNC_FLAG: <>
 2720 																																																										TYPE_PTRMEMFUNC_FN_TYPE: <>
 2721 																																																										TYPE_NAME: 271
 2722 																																																										TYPE_IDENTIFIER: <>
 2723 																																																										TYPE_ARG_TYPES: 791
 2724 																																																										TYPE_DOMAIN: <>
 2725 																																																										TYPE_OFFSET_BASETYPE: <>
 2726 																																																										TYPE_METHOD_BASETYPE: <>
 2727 																																																										DECL_NAME: 250
 2728 																																																										DECL_CONTEXT: 267
 2729 																																																										error: 52
 2730 																																																										TREE_OPERAND: <>
 2731 																																																										TYPE_MIN_VALUE: <>
 2732 																																																										TYPE_MAX_VALUE: <>
 2733 																																																										my_friendly_assert: 379
 2734 																																																										TYPE_PTRMEMFUNC_P: 258
 2735 																																																										TREE_CODE_CLASS: switch (), <./cc/dwarfout.c 3160>
 2736 																																																										sorry: <>
 2737 																																																										my_friendly_abort: 357
 2738 																																																									TREE_CODE_CLASS: switch (), <./cc/dwarfout.c 3160>
 2739 																																																									can_convert_arg: <>
 2740 																																																									TREE_TYPE: 160
 2741 																																																									DECL_TEMPLATE_PARMS: <>
 2742 																																																									alloca: <>
 2743 																																																									tree_cons: <>
 2744 																																																									type_unification: 2702
 2745 																																																									TYPE_ARG_TYPES: 791
 2746 																																																									build_pointer_type: 390
 2747 																																																									TYPE_MAIN_VARIANT: 324
 2748 																																																									unify: int (), <./cc/cp/pt.c 2142>
 2749 																																																										TREE_CODE: 162
 2750 																																																										TREE_OPERAND: <>
 2751 																																																										TEMPLATE_TYPE_TPARMLIST: <>
 2752 																																																										error: 52
 2753 																																																										my_friendly_abort: 357
 2754 																																																										TEMPLATE_TYPE_IDX: <>
 2755 																																																										TYPE_READONLY: 217
 2756 																																																										TYPE_VOLATILE: <>
 2757 																																																										TYPE_MAIN_VARIANT: 324
 2758 																																																										cp_build_type_variant: 967
 2759 																																																										TREE_VALUE: <>
 2760 																																																										TREE_VEC_ELT: <>
 2761 																																																										TEMPLATE_CONST_IDX: <>
 2762 																																																										tree_int_cst_equal: 949
 2763 																																																										REAL_VALUES_EQUAL: <>
 2764 																																																										TREE_REAL_CST: <>
 2765 																																																										copy_to_permanent: 1830
 2766 																																																										unify: 2748
 2767 																																																										TREE_TYPE: 160
 2768 																																																										TYPE_DOMAIN: <>
 2769 																																																										TYPE_MIN_VALUE: <>
 2770 																																																										TYPE_MAX_VALUE: <>
 2771 																																																										fold: <>
 2772 																																																										build: <>
 2773 																																																										TREE_VEC_LENGTH: <>
 2774 																																																										IS_AGGR_TYPE: else if (), <./cc/cp/typeck.c 6140>
 2775 																																																										IDENTIFIER_TEMPLATE: <>
 2776 																																																										TYPE_IDENTIFIER: <>
 2777 																																																										UPT_TEMPLATE: <>
 2778 																																																										TREE_PURPOSE: 215
 2779 																																																										UPT_PARMS: <>
 2780 																																																										TYPE_PTRMEMFUNC_FLAG: <>
 2781 																																																										TYPE_PTRMEMFUNC_FN_TYPE: <>
 2782 																																																										type_unification: 2702
 2783 																																																										TYPE_ARG_TYPES: 791
 2784 																																																										TYPE_OFFSET_BASETYPE: <>
 2785 																																																										sorry: <>
 2786 																																																									TREE_PURPOSE: 215
 2787 																																																									error: 52
 2788 																																																								TYPE_ARG_TYPES: 791
 2789 																																																								instantiate_template: tree (), <./cc/cp/pt.c 1681>
 2790 																																																									push_obstacks: 392
 2791 																																																									my_friendly_assert: 379
 2792 																																																									TREE_CODE: 162
 2793 																																																									TREE_VEC_LENGTH: <>
 2794 																																																									DECL_TEMPLATE_PARMS: <>
 2795 																																																									copy_to_permanent: 1830
 2796 																																																									DECL_TEMPLATE_INSTANTIATIONS: <>
 2797 																																																									TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 2798 																																																									TREE_VEC_ELT: <>
 2799 																																																									TREE_PURPOSE: 215
 2800 																																																									simple_cst_equal: 235
 2801 																																																									TREE_VALUE: <>
 2802 																																																									exit: 5
 2803 																																																									make_tree_vec: 857
 2804 																																																									tsubst: 834
 2805 																																																									DECL_RESULT: <>
 2806 																																																									assemble_external: <>
 2807 																																																									TREE_TYPE: 160
 2808 																																																									DECL_STATIC_FUNCTION_P: <>
 2809 																																																										cp_error: 259
 2810 																																																									revert_static_member_fn: void (), <./cc/cp/decl.c 12821>
 2811 																																																										TREE_TYPE: 160
 2812 																																																										TYPE_ARG_TYPES: 791
 2813 																																																										TYPE_READONLY: 217
 2814 																																																										TREE_VALUE: <>
 2815 																																																										cp_error: 259
 2816 																																																										TYPE_VOLATILE: <>
 2817 																																																										TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 2818 																																																										build_function_type: 1210
 2819 																																																										build_type_variant: 1000
 2820 																																																										build_exception_variant: tree (), <./cc/cp/tree.c 1574>
 2821 																																																											TYPE_MAIN_VARIANT: 324
 2822 																																																											alloca: <>
 2823 																																																											list_length: 1446
 2824 																																																											TYPE_READONLY: 217
 2825 																																																											TYPE_VOLATILE: <>
 2826 																																																											TYPE_NEXT_VARIANT: <>
 2827 																																																											simple_cst_list_equal: 246
 2828 																																																											TYPE_RAISES_EXCEPTIONS: <>
 2829 																																																											copy_node: 874
 2830 																																																											TREE_PERMANENT: if (), <./cc/cp/decl.c 10271>
 2831 																																																											push_obstacks_nochange: 517
 2832 																																																											end_temporary_allocation: 1463
 2833 																																																											copy_list: tree (), <./cc/tree.c 1184>
 2834 																																																												copy_node: 874
 2835 																																																												TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 2836 																																																											pop_obstacks: 396
 2837 																																																										TYPE_RAISES_EXCEPTIONS: <>
 2838 																																																										DECL_ARGUMENTS: <>
 2839 																																																										DECL_STATIC_FUNCTION_P: 2808
 2840 																																																									DECL_ARGUMENTS: <>
 2841 																																																									DECL_TEMPLATE_INFO: <>
 2842 																																																									TREE_STATIC: if (), <./cc/stor-layout.c 332>
 2843 																																																									DECL_TEMPLATE_SPECIALIZATION: <>
 2844 																																																									SET_DECL_TEMPLATE_SPECIALIZATION: <>
 2845 																																																									SET_DECL_IMPLICIT_INSTANTIATION: <>
 2846 																																																									repo_template_used: void (), <./cc/cp/repo.c 103>
 2847 																																																										repo_get_id: tree (), <./cc/cp/repo.c 87>
 2848 																																																											TREE_CODE_CLASS: switch (), <./cc/dwarfout.c 3160>
 2849 																																																											TREE_CODE: 162
 2850 																																																											TYPE_BINFO_VTABLE: <>
 2851 																																																											DECL_ASSEMBLER_NAME: <>
 2852 																																																										TREE_CODE_CLASS: switch (), <./cc/dwarfout.c 3160>
 2853 																																																										TREE_CODE: 162
 2854 																																																										IDENTIFIER_REPO_CHOSEN: <>
 2855 																																																										mark_class_instantiated: void (), <./cc/cp/pt.c 2585>
 2856 																																																											SET_CLASSTYPE_EXPLICIT_INSTANTIATION: <>
 2857 																																																											SET_CLASSTYPE_INTERFACE_KNOWN: <>
 2858 																																																											CLASSTYPE_INTERFACE_ONLY: <>
 2859 																																																											CLASSTYPE_VTABLE_NEEDS_WRITING: <>
 2860 																																																											TYPE_DECL_SUPPRESS_DEBUG: <>
 2861 																																																											TYPE_NAME: 271
 2862 																																																											CLASSTYPE_DEBUG_REQUESTED: <>
 2863 																																																											rest_of_type_compilation: 1103
 2864 																																																										mark_function_instantiated: void (), <./cc/cp/pt.c 2504>
 2865 																																																											DECL_TEMPLATE_INSTANTIATION: if (), <./cc/cp/decl2.c 2839>
 2866 																																																											SET_DECL_EXPLICIT_INSTANTIATION: <>
 2867 																																																											TREE_PUBLIC: 194
 2868 																																																											DECL_INTERFACE_KNOWN: if (), <./cc/cp/decl.c 11497>
 2869 																																																											DECL_NOT_REALLY_EXTERN: <>
 2870 																																																										my_friendly_abort: 357
 2871 																																																										IDENTIFIER_REPO_USED: <>
 2872 																																																										perm_tree_cons: <>
 2873 																																																									permalloc: char * (), <./cc/tree.c 674>
 2874 																																																										obstack_alloc: <>
 2875 																																																									extract_interface_info: void (), <./cc/cp/lex.c 1192>
 2876 																																																										tinst_for_decl: struct tinst_level (), <./cc/cp/pt.c 975>
 2877 																																																										get_time_identifier: tree (), <./cc/cp/lex.c 403>
 2878 																																																											strlen: <>
 2879 																																																											alloca: <>
 2880 																																																											strcpy: <>
 2881 																																																											get_identifier: <>
 2882 																																																											IDENTIFIER_LOCAL_VALUE: <>
 2883 																																																											push_obstacks_nochange: 517
 2884 																																																											end_temporary_allocation: 1463
 2885 																																																											build_int_2: <>
 2886 																																																											IDENTIFIER_CLASS_VALUE: <>
 2887 																																																											IDENTIFIER_GLOBAL_VALUE: <>
 2888 																																																											pop_obstacks: 396
 2889 																																																										IDENTIFIER_CLASS_VALUE: <>
 2890 																																																										TREE_INT_CST_LOW: <>
 2891 																																																										TREE_INT_CST_HIGH: <>
 2892 																																																									DECL_CLASS_CONTEXT: <>
 2893 																																																									CLASSTYPE_INTERFACE_KNOWN: <>
 2894 																																																									CLASSTYPE_INTERFACE_ONLY: <>
 2895 																																																									DECL_IN_SYSTEM_HEADER: <>
 2896 																																																									warn_if_unknown_interface: <>
 2897 																																																									tree_cons: <>
 2898 																																																									DECL_INLINE: if (), <./cc/dwarfout.c 2737>
 2899 																																																									DECL_PENDING_INLINE_INFO: <>
 2900 																																																									pop_obstacks: 396
 2901 																																																								comp_target_types: if (), <./cc/cp/typeck.c 1106>
 2902 																																																								cp_error_at: 1225
 2903 																																																								TREE_NONLOCAL_FLAG: <>
 2904 																																																								lookup_fnfields: <>
 2905 																																																								TYPE_BINFO: if (), <./cc/cp/search.c 454>
 2906 																																																								next_baselink: tree (), <./cc/cp/search.c 2259>
 2907 																																																									TREE_TYPE: 160
 2908 																																																									TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 2909 																																																									tree_cons: <>
 2910 																																																									TREE_PURPOSE: 215
 2911 																																																									TREE_VALUE: <>
 2912 																																																								DECL_NAME: 250
 2913 																																																								lookup_name_nonclass: 1229
 2914 																																																								mark_addressable: <>
 2915 																																																								TREE_CONSTANT: if (), <./cc/fold-const.c 3102>
 2916 																																																								staticp: <>
 2917 																																																							digest_init: 2175
 2918 																																																							DECL_VIRTUAL_P: if (), <./cc/dwarfout.c 2795>
 2919 																																																							TREE_PUBLIC: 194
 2920 																																																							TYPE_LANG_SPECIFIC: 370
 2921 																																																							IS_SIGNATURE_POINTER: <>
 2922 																																																							IS_SIGNATURE_REFERENCE: <>
 2923 																																																						pop_obstacks: 396
 2924 																																																						end_temporary_allocation: 1463
 2925 																																																						TYPE_DOMAIN: <>
 2926 																																																						TREE_STATIC: if (), <./cc/stor-layout.c 332>
 2927 																																																						TREE_PUBLIC: 194
 2928 																																																						DECL_EXTERNAL: else if (), <./cc/dwarfout.c 3220>
 2929 																																																						complete_array_type: int (), <./cc/cp/decl.c 7074>
 2930 																																																							TREE_CODE: 162
 2931 																																																							int_size_in_bytes: <>
 2932 																																																							TREE_TYPE: 160
 2933 																																																							build_int_2: <>
 2934 																																																							TREE_STRING_LENGTH: <>
 2935 																																																							CONSTRUCTOR_ELTS: <>
 2936 																																																							size_binop: <>
 2937 																																																							TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 2938 																																																							TREE_PURPOSE: 215
 2939 																																																							copy_node: 874
 2940 																																																							TYPE_DOMAIN: <>
 2941 																																																							build_index_type: 1516
 2942 																																																							build_array_type: 974
 2943 																																																							change_main_variant: 984
 2944 																																																							layout_type: <>
 2945 																																																							TYPE_MAIN_VARIANT: 324
 2946 																																																						tree_int_cst_sgn: 688
 2947 																																																						TYPE_MAX_VALUE: <>
 2948 																																																						layout_decl: <>
 2949 																																																						TYPE_SIZE: if (), <./cc/dwarfout.c 3636>
 2950 																																																						DECL_CONTEXT: 267
 2951 																																																						constant_expression_warning: 1498
 2952 																																																						DECL_BUILT_IN: else if (), <./cc/cp/decl.c 2939>
 2953 																																																							DECL_PUBLIC: <>
 2954 																																																							TREE_CODE: 162
 2955 																																																							DECL_LANGUAGE: 1293
 2956 																																																							cp_warning: 279
 2957 																																																							DECL_BUILT_IN: 2952
 2958 																																																							cp_error: 259
 2959 																																																						DECL_RTL: <>
 2960 																																																						TREE_PERMANENT: if (), <./cc/cp/decl.c 10271>
 2961 																																																						push_obstacks_nochange: 517
 2962 																																																						maybe_objc_check_decl: void (), <./cc/objc-act.c 1222>
 2963 																																																							objc_check_decl: void (), <./cc/objc-act.c 1207>
 2964 																																																								TREE_TYPE: 160
 2965 																																																								TREE_CODE: 162
 2966 																																																								TREE_STATIC_TEMPLATE: <>
 2967 																																																								error_with_decl: <>
 2968 																																																								fatal: 49
 2969 																																																						rest_of_decl_compilation: void (), <./cc/toplev.c 2872>
 2970 																																																							TREE_STATIC: if (), <./cc/stor-layout.c 332>
 2971 																																																							DECL_EXTERNAL: else if (), <./cc/dwarfout.c 3220>
 2972 																																																							TREE_CODE: 162
 2973 																																																							TIMEVAR: <>
 2974 																																																							make_decl_rtl: 1326
 2975 																																																							TREE_READONLY: if (), <./cc/cp/decl2.c 1229>
 2976 																																																							DECL_INITIAL: 168
 2977 																																																							assemble_variable: <>
 2978 																																																							ASM_FINISH_DECLARE_OBJECT: <>
 2979 																																																							DECL_REGISTER: <>
 2980 																																																							decode_reg_name: 1338
 2981 																																																							DECL_RTL: <>
 2982 																																																							error: 52
 2983 																																																							dbxout_symbol: <>
 2984 																																																							sdbout_symbol: <>
 2985 																																																						TREE_ADDRESSABLE: <>
 2986 																																																						TREE_USED: <>
 2987 																																																						expand_decl: <>
 2988 																																																						expand_decl_init: <>
 2989 																																																						DECL_INLINE: if (), <./cc/dwarfout.c 2737>
 2990 																																																						TREE_READONLY: if (), <./cc/cp/decl2.c 1229>
 2991 																																																						preserve_initializer: void (), <./cc/tree.c 611>
 2992 																																																							obstack_alloc: <>
 2993 																																																						TREE_INT_CST_LOW: <>
 2994 																																																						warning_with_decl: <>
 2995 																																																						permanent_allocation: void (), <./cc/tree.c 567>
 2996 																																																							obstack_free: 397
 2997 																																																							free: <>
 2998 																																																						get_pending_sizes: tree (), <./cc/stor-layout.c 72>
 2999 																																																							TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 3000 																																																							SAVE_EXPR_CONTEXT: <>
 3001 																																																							TREE_VALUE: <>
 3002 																																																						cp_finish_decl: void (), <./cc/cp/decl.c 6398>
 3003 																																																							cleanup: , <./cc/cp/tree.c 1996>
 3004 																																																							allocation_temporary_p: 1462
 3005 																																																							TREE_STRING_POINTER: <>
 3006 																																																							TREE_TYPE: 160
 3007 																																																							toplevel_bindings_p: 1614
 3008 																																																							end_temporary_allocation: 1463
 3009 																																																							DECL_SIZE: <>
 3010 																																																							TREE_CODE: 162
 3011 																																																							DECL_INITIAL: 168
 3012 																																																							IS_AGGR_TYPE: else if (), <./cc/cp/typeck.c 6140>
 3013 																																																							DECL_NAME: 250
 3014 																																																							cp_warning: 279
 3015 																																																							set_identifier_type_value: 2449
 3016 																																																							CLASSTYPE_GOT_SEMICOLON: <>
 3017 																																																							GNU_xref_decl: void (), <./cc/cp/xref.c 341>
 3018 																																																								find_file: 1905
 3019 																																																								TREE_CODE: 162
 3020 																																																								TREE_STATIC: if (), <./cc/stor-layout.c 332>
 3021 																																																								TREE_READONLY: if (), <./cc/cp/decl2.c 1229>
 3022 																																																								DECL_INITIAL: 168
 3023 																																																								TREE_PUBLIC: 194
 3024 																																																								DECL_EXTERNAL: else if (), <./cc/dwarfout.c 3220>
 3025 																																																								DECL_MODE: <>
 3026 																																																								DECL_REGISTER: <>
 3027 																																																								TYPE_NAME: 271
 3028 																																																								CLASSTYPE_DECLARED_CLASS: <>
 3029 																																																								IS_SIGNATURE: 1061
 3030 																																																								DECL_TEMPLATE_IS_CLASS: <>
 3031 																																																								DECL_RESULT: <>
 3032 																																																								my_friendly_abort: 357
 3033 																																																								DECL_NAME: 250
 3034 																																																								DECL_ASSEMBLER_NAME: <>
 3035 																																																								IDENTIFIER_POINTER: <>
 3036 																																																								strcpy: <>
 3037 																																																								type_as_string: char * (), <./cc/cp/error.c 1335>
 3038 																																																									OB_INIT: <>
 3039 																																																									dump_type: void (), <./cc/cp/error.c 127>
 3040 																																																										TYPE_PTRMEMFUNC_P: 258
 3041 																																																										TREE_CODE: 162
 3042 																																																										OB_PUTS: <>
 3043 																																																										dump_type: 3039
 3044 																																																										TREE_VALUE: <>
 3045 																																																										TREE_PURPOSE: 215
 3046 																																																										dump_expr: void (), <./cc/cp/error.c 936>
 3047 																																																											TREE_CODE: 162
 3048 																																																											dump_decl: 253
 3049 																																																											TREE_TYPE: 160
 3050 																																																											my_friendly_assert: 379
 3051 																																																											enum_name_string: char * (), <./cc/cp/typeck2.c 1569>
 3052 																																																												TYPE_VALUES: <>
 3053 																																																												TREE_INT_CST_LOW: <>
 3054 																																																												my_friendly_assert: 379
 3055 																																																												TREE_CODE: 162
 3056 																																																												TREE_VALUE: <>
 3057 																																																												TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 3058 																																																												oballoc: 530
 3059 																																																												TYPE_NAME_LENGTH: <>
 3060 																																																												sprintf: <>
 3061 																																																												TYPE_NAME_STRING: <>
 3062 																																																												IDENTIFIER_POINTER: <>
 3063 																																																												TREE_PURPOSE: 215
 3064 																																																											OB_PUTCP: <>
 3065 																																																											OB_PUTS: <>
 3066 																																																											my_friendly_abort: 357
 3067 																																																											OB_PUTC: <>
 3068 																																																											dump_char: void (), <./cc/cp/error.c 874>
 3069 																																																												OB_PUTS: <>
 3070 																																																												isprint: <>
 3071 																																																												OB_PUTC: <>
 3072 																																																												sprintf: <>
 3073 																																																												OB_PUTCP: <>
 3074 																																																											TREE_INT_CST_LOW: <>
 3075 																																																											TREE_INT_CST_HIGH: <>
 3076 																																																											build_int_2: <>
 3077 																																																											sprintf: <>
 3078 																																																											OB_PUTI: <>
 3079 																																																											TREE_REAL_CST: <>
 3080 																																																											strcpy: <>
 3081 																																																											TREE_STRING_POINTER: <>
 3082 																																																											TREE_STRING_LENGTH: <>
 3083 																																																											dump_binary_op: void (), <./cc/cp/error.c 1298>
 3084 																																																												OB_PUTC: <>
 3085 																																																												dump_expr: 3046
 3086 																																																												TREE_OPERAND: <>
 3087 																																																												OB_PUTCP: <>
 3088 																																																											dump_expr: 3046
 3089 																																																											TREE_OPERAND: <>
 3090 																																																											TREE_HAS_CONSTRUCTOR: <>
 3091 																																																											dump_type: 3039
 3092 																																																											PARM_DECL_EXPR: <>
 3093 																																																											OB_PUTID: <>
 3094 																																																											TYPE_IDENTIFIER: <>
 3095 																																																											dump_expr_list: void (), <./cc/cp/error.c 922>
 3096 																																																												dump_expr: 3046
 3097 																																																												TREE_VALUE: <>
 3098 																																																												TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 3099 																																																												OB_PUTC2: <>
 3100 																																																											TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 3101 																																																											NEXT_CODE: <>
 3102 																																																											TREE_VALUE: <>
 3103 																																																											strcmp: 157
 3104 																																																											IDENTIFIER_POINTER: <>
 3105 																																																											DECL_NAME: 250
 3106 																																																											OB_PUTC2: <>
 3107 																																																											dump_unary_op: void (), <./cc/cp/error.c 1312>
 3108 																																																												OB_PUTC: <>
 3109 																																																												OB_PUTCP: <>
 3110 																																																												dump_expr: 3046
 3111 																																																												TREE_OPERAND: <>
 3112 																																																											CONSTRUCTOR_ELTS: <>
 3113 																																																											sorry: <>
 3114 																																																											error: 52
 3115 																																																										TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 3116 																																																										OB_PUTC2: <>
 3117 																																																										OB_PUTID: <>
 3118 																																																										BINFO_TYPE: <>
 3119 																																																										TYPE_LANG_SPECIFIC: 370
 3120 																																																										IS_SIGNATURE_POINTER: <>
 3121 																																																										IS_SIGNATURE_REFERENCE: <>
 3122 																																																										TYPE_READONLY: 217
 3123 																																																										TYPE_VOLATILE: <>
 3124 																																																										dump_readonly_or_volatile: void (), <./cc/cp/error.c 104>
 3125 																																																											TYPE_READONLY: 217
 3126 																																																											TYPE_VOLATILE: <>
 3127 																																																											OB_PUTC: <>
 3128 																																																											OB_PUTS: <>
 3129 																																																										SIGNATURE_TYPE: <>
 3130 																																																										OB_PUTC: <>
 3131 																																																										dump_aggr_type: void (), <./cc/cp/error.c 260>
 3132 																																																											aggr_variety: char * (), <./cc/cp/error.c 243>
 3133 																																																												TREE_CODE: 162
 3134 																																																												TYPE_LANG_SPECIFIC: 370
 3135 																																																												CLASSTYPE_DECLARED_CLASS: <>
 3136 																																																												IS_SIGNATURE: 1061
 3137 																																																											dump_readonly_or_volatile: 3124
 3138 																																																											OB_PUTCP: <>
 3139 																																																											OB_PUTC: <>
 3140 																																																											TYPE_NAME: 271
 3141 																																																											DECL_CONTEXT: 267
 3142 																																																											dump_decl: 253
 3143 																																																											OB_PUTC2: <>
 3144 																																																											TREE_CODE: 162
 3145 																																																											DECL_NAME: 250
 3146 																																																											ANON_AGGRNAME_P: <>
 3147 																																																											OB_PUTS: <>
 3148 																																																											OB_PUTID: <>
 3149 																																																										dump_decl: 253
 3150 																																																										TREE_UNSIGNED: 678
 3151 																																																										TYPE_MAIN_VARIANT: 324
 3152 																																																										TYPE_IDENTIFIER: <>
 3153 																																																										DECL_NAME: 250
 3154 																																																										UPT_TEMPLATE: <>
 3155 																																																										dump_type_prefix: void (), <./cc/cp/error.c 314>
 3156 																																																											TYPE_PTRMEMFUNC_P: 258
 3157 																																																											TYPE_PTRMEMFUNC_FN_TYPE: <>
 3158 																																																											TREE_CODE: 162
 3159 																																																											sub: FLO_type (), <./cc/config/fp-bit.c 679>
 3160 																																																												unpack_d: void (), <./cc/config/fp-bit.c 441>
 3161 																																																												pack_d: FLO_type (), <./cc/config/fp-bit.c 332>
 3162 																																																													isnan: <>
 3163 																																																													isinf: <>
 3164 																																																													iszero: <>
 3165 																																																											TREE_TYPE: 160
 3166 																																																											dump_type_prefix: 3155
 3167 																																																											OB_PUTC2: <>
 3168 																																																											TYPE_READONLY: 217
 3169 																																																											TYPE_VOLATILE: <>
 3170 																																																											OB_PUTC: <>
 3171 																																																											dump_readonly_or_volatile: 3124
 3172 																																																											dump_type: 3039
 3173 																																																											TYPE_OFFSET_BASETYPE: <>
 3174 																																																											dump_aggr_type: 3131
 3175 																																																											TYPE_METHOD_BASETYPE: <>
 3176 																																																											sorry: <>
 3177 																																																										dump_type_suffix: void (), <./cc/cp/error.c 442>
 3178 																																																											TYPE_PTRMEMFUNC_P: 258
 3179 																																																											TYPE_PTRMEMFUNC_FN_TYPE: <>
 3180 																																																											TREE_CODE: 162
 3181 																																																											TREE_TYPE: 160
 3182 																																																											OB_PUTC: <>
 3183 																																																											dump_type_suffix: 3177
 3184 																																																											OB_PUTC2: <>
 3185 																																																											TYPE_ARG_TYPES: 791
 3186 																																																											TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 3187 																																																											dump_type: 3039
 3188 																																																											OB_PUTS: <>
 3189 																																																											dump_readonly_or_volatile: 3124
 3190 																																																											TREE_VALUE: <>
 3191 																																																											TYPE_DOMAIN: <>
 3192 																																																											OB_PUTI: <>
 3193 																																																											TREE_INT_CST_LOW: <>
 3194 																																																											TYPE_MAX_VALUE: <>
 3195 																																																											sorry: <>
 3196 																																																										sorry: <>
 3197 																																																									OB_FINISH: <>
 3198 																																																									obstack_base: <>
 3199 																																																								TREE_TYPE: 160
 3200 																																																								simplify_type: void (), <./cc/cp/xref.c 729>
 3201 																																																									strlen: <>
 3202 																																																									isspace: <>
 3203 																																																									STREQL: <>
 3204 																																																								fprintf: <>
 3205 																																																								fctname: char * (), <./cc/cp/xref.c 688>
 3206 																																																									declname: char * (), <./cc/cp/xref.c 715>
 3207 																																																										DECL_NAME: 250
 3208 																																																										DECL_ASSEMBLER_NAME: <>
 3209 																																																										IDENTIFIER_POINTER: <>
 3210 																																																									fixname: char * (), <./cc/cp/xref.c 779>
 3211 																																																								STREQL: <>
 3212 																																																							rest_of_decl_compilation: 2969
 3213 																																																							DECL_CONTEXT: 267
 3214 																																																							target_type: tree, <./cc/cp/typeck.c 3805>
 3215 																																																								TREE_CODE: 162
 3216 																																																								TREE_TYPE: 160
 3217 																																																							delete: <>
 3218 																																																							TYPE_NAME: 271
 3219 																																																							ANON_AGGRNAME_P: <>
 3220 																																																							TYPE_IDENTIFIER: <>
 3221 																																																							alloca: <>
 3222 																																																							IDENTIFIER_LENGTH: <>
 3223 																																																							IDENTIFIER_TEMPLATE: <>
 3224 																																																							IDENTIFIER_POINTER: <>
 3225 																																																							get_identifier: <>
 3226 																																																							lookup_tag_reverse: tree (), <./cc/cp/decl.c 4275>
 3227 																																																								TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 3228 																																																								TREE_VALUE: <>
 3229 																																																								TREE_PURPOSE: 215
 3230 																																																							DECL_EXTERNAL: else if (), <./cc/dwarfout.c 3220>
 3231 																																																							TREE_READONLY: if (), <./cc/cp/decl2.c 1229>
 3232 																																																							TYPE_NEEDS_CONSTRUCTING: <>
 3233 																																																							my_friendly_assert: 379
 3234 																																																							TREE_PERMANENT: if (), <./cc/cp/decl.c 10271>
 3235 																																																							DECL_RTL: <>
 3236 																																																							DECL_ASSEMBLER_NAME: <>
 3237 																																																							make_decl_rtl: 1326
 3238 																																																							TYPE_LANG_SPECIFIC: 370
 3239 																																																							IS_SIGNATURE_REFERENCE: <>
 3240 																																																							TREE_STATIC: if (), <./cc/stor-layout.c 332>
 3241 																																																							pseudo_global_level_p: int (), <./cc/cp/decl.c 914>
 3242 																																																							grok_reference_init: void (), <./cc/cp/decl.c 6243>
 3243 																																																								DECL_LANG_SPECIFIC: if (), <./cc/cp/decl.c 2992>
 3244 																																																								DECL_IN_AGGR_P: if (), <./cc/cp/decl2.c 1860>
 3245 																																																								DECL_THIS_EXTERN: <>
 3246 																																																								cp_error: 259
 3247 																																																								TREE_CODE: 162
 3248 																																																								SET_DECL_REFERENCE_SLOT: <>
 3249 																																																								build_compound_expr: <>
 3250 																																																								TREE_TYPE: 160
 3251 																																																								convert_from_reference: tree (), <./cc/cp/cvt.c 861>
 3252 																																																									TREE_TYPE: 160
 3253 																																																									TREE_CODE: 162
 3254 																																																									build_indirect_ref: 329
 3255 																																																								default_conversion: 165
 3256 																																																								convert_to_reference: 751
 3257 																																																								TYPE_NEEDS_DESTRUCTOR: <>
 3258 																																																								TREE_OPERAND: <>
 3259 																																																								build_delete: tree (), <./cc/cp/init.c 3744>
 3260 																																																									TYPE_MAIN_VARIANT: 324
 3261 																																																									TREE_CODE: 162
 3262 																																																									TREE_TYPE: 160
 3263 																																																									TYPE_SIZE: if (), <./cc/dwarfout.c 3636>
 3264 																																																									incomplete_type_error: 348
 3265 																																																									IS_AGGR_TYPE: else if (), <./cc/cp/typeck.c 6140>
 3266 																																																									build_builtin_call: tree (), <./cc/cp/init.c 2808>
 3267 																																																										build: <>
 3268 																																																										TREE_SIDE_EFFECTS: if (), <./cc/cp/typeck.c 4958>
 3269 																																																										assemble_external: <>
 3270 																																																										TREE_OPERAND: <>
 3271 																																																										TREE_USED: <>
 3272 																																																									build_tree_list: <>
 3273 																																																									TREE_SIDE_EFFECTS: if (), <./cc/cp/typeck.c 4958>
 3274 																																																									save_expr: <>
 3275 																																																									convert_force: tree (), <./cc/cp/cvt.c 1398>
 3276 																																																										TREE_CODE: 162
 3277 																																																										fold: <>
 3278 																																																										convert_to_reference: 751
 3279 																																																										TREE_TYPE: 160
 3280 																																																										convert_from_reference: 3251
 3281 																																																										convert_to_pointer_force: tree (), <./cc/cp/cvt.c 246>
 3282 																																																											TREE_TYPE: 160
 3283 																																																											TREE_CODE: 162
 3284 																																																											integer_zerop: 405
 3285 																																																											build_int_2: <>
 3286 																																																											IS_SIGNATURE_POINTER: <>
 3287 																																																											IS_SIGNATURE_REFERENCE: <>
 3288 																																																											build_optr_ref: tree (), <./cc/cp/sig.c 1031>
 3289 																																																												get_identifier: <>
 3290 																																																												build_component_ref: 159
 3291 																																																											TYPE_MAIN_VARIANT: 324
 3292 																																																											get_base_distance: <>
 3293 																																																											cp_error: 259
 3294 																																																											TYPE_NAME_STRING: <>
 3295 																																																											build1: 334
 3296 																																																											build_vbase_path: 2084
 3297 																																																											cp_convert_to_pointer: tree (), <./cc/cp/cvt.c 117>
 3298 																																																												TREE_TYPE: 160
 3299 																																																												TYPE_PTRMEMFUNC_P: 258
 3300 																																																												TYPE_PTRMEMFUNC_FN_TYPE: <>
 3301 																																																												TREE_CODE: 162
 3302 																																																												TYPE_MAIN_VARIANT: 324
 3303 																																																												get_binfo: <>
 3304 																																																												TYPE_USES_VIRTUAL_BASECLASSES: <>
 3305 																																																												BINFO_OFFSET_ZEROP: if (), <./cc/cp/call.c 290>
 3306 																																																												get_base_distance: <>
 3307 																																																												build_vbase_path: 2084
 3308 																																																												convert_fn_ptr: tree (), <./cc/cp/cvt.c 82>
 3309 																																																													TREE_TYPE: 160
 3310 																																																													get_binfo: <>
 3311 																																																													TYPE_METHOD_BASETYPE: <>
 3312 																																																													BINFO_OFFSET_ZEROP: if (), <./cc/cp/call.c 290>
 3313 																																																													build1: 334
 3314 																																																													build_thunk: tree (), <./cc/cp/cvt.c 65>
 3315 																																																														TREE_CODE: 162
 3316 																																																														TREE_OPERAND: <>
 3317 																																																														sorry: <>
 3318 																																																													BINFO_OFFSET: <>
 3319 																																																													build_ptrmemfunc: <>
 3320 																																																												TYPE_OFFSET_BASETYPE: <>
 3321 																																																												cp_error: 259
 3322 																																																												build1: 334
 3323 																																																												my_friendly_assert: 379
 3324 																																																												TYPE_LANG_SPECIFIC: 370
 3325 																																																												IS_SIGNATURE_POINTER: <>
 3326 																																																												IS_SIGNATURE_REFERENCE: <>
 3327 																																																												convert_to_pointer: 705
 3328 																																																												build_optr_ref: 3288
 3329 																																																												IS_AGGR_TYPE: else if (), <./cc/cp/typeck.c 6140>
 3330 																																																												build_type_conversion: 758
 3331 																																																												integer_zerop: 405
 3332 																																																												build_int_2: <>
 3333 																																																												INTEGRAL_CODE_P: if (), <./cc/cp/typeck.c 1519>
 3334 																																																													cp_convert: 742
 3335 																																																												type_precision: <>
 3336 																																																												convert: 427
 3337 																																																												type_for_size: <>
 3338 																																																												GET_MODE_SIZE: 461
 3339 																																																												TYPE_MODE: <>
 3340 																																																												abort: <>
 3341 																																																										integer_zerop: 405
 3342 																																																										TYPE_PTRMEMFUNC_P: 258
 3343 																																																										build_ptrmemfunc: <>
 3344 																																																										TYPE_PTRMEMFUNC_FN_TYPE: <>
 3345 																																																										cp_convert: 742
 3346 																																																									build_pointer_type: 390
 3347 																																																									build_indirect_ref: 329
 3348 																																																									TYPE_DOMAIN: <>
 3349 																																																									build_vec_delete: tree (), <./cc/cp/init.c 4134>
 3350 																																																										TREE_CODE: 162
 3351 																																																										resolve_offset_ref: tree (), <./cc/cp/init.c 2163>
 3352 																																																											TREE_TYPE: 160
 3353 																																																											TREE_CODE: 162
 3354 																																																											build_unary_op: <>
 3355 																																																											my_friendly_assert: 379
 3356 																																																											TYPE_OFFSET_BASETYPE: <>
 3357 																																																											TREE_OPERAND: <>
 3358 																																																											TYPE_PTRMEMFUNC_P: 258
 3359 																																																											mark_addressable: <>
 3360 																																																											TREE_ADDRESSABLE: <>
 3361 																																																											cp_error_at: 1225
 3362 																																																											DECL_CONTEXT: 267
 3363 																																																											get_base_distance: <>
 3364 																																																											error_not_base_type: tree (), <./cc/cp/typeck2.c 48>
 3365 																																																												TREE_CODE: 162
 3366 																																																												DECL_CLASS_CONTEXT: <>
 3367 																																																												cp_error: 259
 3368 																																																											convert_pointer_to: 381
 3369 																																																											compute_access: <>
 3370 																																																											build: <>
 3371 																																																											build_indirect_ref: 329
 3372 																																																											my_friendly_abort: 357
 3373 																																																											DECL_CLASS_CONTEXT: <>
 3374 																																																											get_member_function: tree (), <./cc/cp/init.c 2096>
 3375 																																																												TREE_TYPE: 160
 3376 																																																												save_expr: <>
 3377 																																																												build_unary_op: <>
 3378 																																																												TYPE_VIRTUAL_P: <>
 3379 																																																												TYPE_OVERLOADS_METHOD_CALL_EXPR: <>
 3380 																																																												build1: 334
 3381 																																																												my_friendly_abort: 357
 3382 																																																												build: <>
 3383 																																																												build_compound_expr: <>
 3384 																																																												tree_cons: <>
 3385 																																																												build_tree_list: <>
 3386 																																																												TREE_SIDE_EFFECTS: if (), <./cc/cp/typeck.c 4958>
 3387 																																																												build_indirect_ref: 329
 3388 																																																												build_vfn_ref: 2635
 3389 																																																												my_friendly_assert: 379
 3390 																																																												build_conditional_expr: <>
 3391 																																																											convert: 427
 3392 																																																											build1: 334
 3393 																																																											build_pointer_type: 390
 3394 																																																											get_member_function_from_ptrfunc: <>
 3395 																																																										TREE_TYPE: 160
 3396 																																																										stabilize_reference: <>
 3397 																																																										TREE_SIDE_EFFECTS: if (), <./cc/cp/typeck.c 4958>
 3398 																																																										save_expr: <>
 3399 																																																										build: <>
 3400 																																																										build_pointer_type: 390
 3401 																																																										build_indirect_ref: 329
 3402 																																																										build_component_ref: 159
 3403 																																																										array_type_nelts_total: <>
 3404 																																																										build_unary_op: <>
 3405 																																																										build_vec_delete_1: tree (), <./cc/cp/init.c 3329>
 3406 																																																											build_pointer_type: 390
 3407 																																																											size_in_bytes: <>
 3408 																																																											IS_AGGR_TYPE: else if (), <./cc/cp/typeck.c 6140>
 3409 																																																											TYPE_NEEDS_DESTRUCTOR: <>
 3410 																																																											fold: <>
 3411 																																																											size_binop: <>
 3412 																																																											build_decl: 888
 3413 																																																											build_modify_expr: <>
 3414 																																																											build: <>
 3415 																																																											DECL_REGISTER: <>
 3416 																																																											TREE_SIDE_EFFECTS: if (), <./cc/cp/typeck.c 4958>
 3417 																																																											build_block: tree (), <./cc/tree.c 2885>
 3418 																																																												make_node: 307
 3419 																																																												BLOCK_VARS: <>
 3420 																																																												BLOCK_TYPE_TAGS: <>
 3421 																																																												BLOCK_SUBBLOCKS: <>
 3422 																																																												BLOCK_SUPERCONTEXT: <>
 3423 																																																												BLOCK_CHAIN: <>
 3424 																																																											add_block_current_level: void (), <./cc/cp/decl.c 1380>
 3425 																																																												chainon: 1712
 3426 																																																											convert: 427
 3427 																																																											build_binary_op: 164
 3428 																																																											build_tree_list: <>
 3429 																																																											build_x_delete: tree (), <./cc/cp/init.c 3713>
 3430 																																																												TYPE_LANG_SPECIFIC: 370
 3431 																																																												TREE_TYPE: 160
 3432 																																																												TYPE_GETS_DELETE: <>
 3433 																																																												build_opfncall: tree (), <./cc/cp/method.c 1173>
 3434 																																																													TREE_CODE: 162
 3435 																																																													TREE_TYPE: 160
 3436 																																																													tree_cons: <>
 3437 																																																													build_overload_call: <>
 3438 																																																													build_method_call: <>
 3439 																																																													build_indirect_ref: 329
 3440 																																																													build1: 334
 3441 																																																													TREE_CALLS_NEW: <>
 3442 																																																													build_tree_list: <>
 3443 																																																													my_friendly_assert: 379
 3444 																																																													convert_from_reference: 3251
 3445 																																																													IS_AGGR_TYPE: else if (), <./cc/cp/typeck.c 6140>
 3446 																																																													TYPE_PTRMEMFUNC_P: 258
 3447 																																																													lookup_name_nonclass: 1229
 3448 																																																													lookup_fnfields: <>
 3449 																																																													TYPE_BINFO: if (), <./cc/cp/search.c 454>
 3450 																																																													TREE_VALUE: <>
 3451 																																																													DECL_CHAIN: if (), <./cc/cp/decl2.c 1871>
 3452 																																																													TYPE_ARG_TYPES: 791
 3453 																																																													TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 3454 																																																													TREE_OPERAND: <>
 3455 																																																												build_builtin_call: 3266
 3456 																																																												build_tree_list: <>
 3457 																																																											tree_cons: <>
 3458 																																																											build_delete: 3259
 3459 																																																											build_compound_expr: <>
 3460 																																																											TYPE_VEC_NEW_USES_COOKIE: <>
 3461 																																																											build1: 334
 3462 																																																											TREE_OPERAND: <>
 3463 																																																									array_type_nelts: <>
 3464 																																																									c_sizeof_nowarn: tree (), <./cc/c-typeck.c 880>
 3465 																																																										TREE_CODE: 162
 3466 																																																										size_int: <>
 3467 																																																										TYPE_SIZE: if (), <./cc/dwarfout.c 3636>
 3468 																																																										size_binop: <>
 3469 																																																										TYPE_PRECISION: 211
 3470 																																																										force_fit_type: int (), <./cc/fold-const.c 146>
 3471 																																																											TREE_CODE: 162
 3472 																																																											CHECK_FLOAT_VALUE: <>
 3473 																																																											TYPE_MODE: <>
 3474 																																																											TREE_TYPE: 160
 3475 																																																											TREE_REAL_CST: <>
 3476 																																																											TREE_INT_CST_LOW: <>
 3477 																																																											TREE_INT_CST_HIGH: <>
 3478 																																																											TYPE_PRECISION: 211
 3479 																																																											TREE_UNSIGNED: 678
 3480 																																																									build_unary_op: <>
 3481 																																																									TREE_CONSTANT: if (), <./cc/fold-const.c 3102>
 3482 																																																									convert_pointer_to: 381
 3483 																																																									TREE_OPERAND: <>
 3484 																																																									my_friendly_assert: 379
 3485 																																																									TYPE_NEEDS_DESTRUCTOR: <>
 3486 																																																									TYPE_GETS_REG_DELETE: <>
 3487 																																																									build_opfncall: 3433
 3488 																																																									TYPE_HAS_DESTRUCTOR: if (), <./cc/cp/typeck.c 1728>
 3489 																																																									DECL_MAIN_VARIANT: <>
 3490 																																																									TREE_VEC_ELT: <>
 3491 																																																									CLASSTYPE_METHOD_VEC: <>
 3492 																																																									TYPE_BINFO: if (), <./cc/cp/search.c 454>
 3493 																																																									fold: <>
 3494 																																																									build: <>
 3495 																																																									compute_access: <>
 3496 																																																									cp_error: 259
 3497 																																																									DECL_VINDEX: <>
 3498 																																																									resolves_to_fixed_type_p: 2085
 3499 																																																									DECL_CONTEXT: 267
 3500 																																																									DECL_CLASS_CONTEXT: <>
 3501 																																																									get_binfo: <>
 3502 																																																									TREE_VALUE: <>
 3503 																																																									convert_pointer_to_real: 385
 3504 																																																									build_vfn_ref: 2635
 3505 																																																									TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 3506 																																																									build_function_call: tree (), <./cc/c-typeck.c 1526>
 3507 																																																										STRIP_TYPE_NOPS: <>
 3508 																																																										TREE_CODE: 162
 3509 																																																										DECL_NAME: 250
 3510 																																																										DECL_ASSEMBLER_NAME: <>
 3511 																																																										build_type_variant: 1000
 3512 																																																										TREE_TYPE: 160
 3513 																																																										TREE_READONLY: if (), <./cc/cp/decl2.c 1229>
 3514 																																																										TREE_THIS_VOLATILE: <>
 3515 																																																										build1: 334
 3516 																																																										build_pointer_type: 390
 3517 																																																										default_conversion: 165
 3518 																																																										error: 52
 3519 																																																										convert_arguments: tree (), <./cc/c-typeck.c 1628>
 3520 																																																											TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 3521 																																																											TREE_VALUE: <>
 3522 																																																											error: 52
 3523 																																																											IDENTIFIER_POINTER: <>
 3524 																																																											TREE_CODE: 162
 3525 																																																											TREE_OPERAND: <>
 3526 																																																											TREE_TYPE: 160
 3527 																																																											default_conversion: 165
 3528 																																																											require_complete_type: 345
 3529 																																																											TYPE_SIZE: if (), <./cc/dwarfout.c 3636>
 3530 																																																											TYPE_PRECISION: 211
 3531 																																																											INTEGRAL_TYPE_P: <>
 3532 																																																											warn_for_assignment: 406
 3533 																																																											TREE_UNSIGNED: 678
 3534 																																																											int_fits_type_p: <>
 3535 																																																											TYPE_MIN_VALUE: <>
 3536 																																																											TYPE_MAX_VALUE: <>
 3537 																																																											convert_for_assignment: <>
 3538 																																																											tree_cons: <>
 3539 																																																											convert: 427
 3540 																																																											nreverse: <>
 3541 																																																										TYPE_ARG_TYPES: 791
 3542 																																																										check_function_format: void (), <./cc/c-common.c 864>
 3543 																																																											check_format_info: void (), <./cc/c-common.c 890>
 3544 																																																												TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 3545 																																																												TREE_VALUE: <>
 3546 																																																												TREE_CODE: 162
 3547 																																																												TREE_OPERAND: <>
 3548 																																																												integer_zerop: 405
 3549 																																																												warning: 281
 3550 																																																												TREE_STRING_POINTER: <>
 3551 																																																												TREE_STRING_LENGTH: <>
 3552 																																																												isdigit: if (), <./cc/cplus-dem.c 1861>
 3553 																																																												atoi: <>
 3554 																																																												index: else, <./cc/cp/class.c 868>
 3555 																																																													GET_MODE: 139
 3556 																																																													index: 3554
 3557 																																																													GET_MODE_WIDER_MODE: <>
 3558 																																																													convert_to_mode: <>
 3559 																																																												sprintf: <>
 3560 																																																												strlen: <>
 3561 																																																												TYPE_MAIN_VARIANT: 324
 3562 																																																												TREE_TYPE: 160
 3563 																																																												TREE_UNSIGNED: 678
 3564 																																																												unsigned_type: 699
 3565 																																																												signed_type: 701
 3566 																																																												IDENTIFIER_POINTER: <>
 3567 																																																												DECL_NAME: 250
 3568 																																																												TYPE_NAME: 271
 3569 																																																												TYPE_PRECISION: 211
 3570 																																																												strcmp: 157
 3571 																																																										TREE_OPERAND: <>
 3572 																																																										DECL_BUILT_IN: 2952
 3573 																																																										DECL_FUNCTION_CODE: switch (), <./cc/expr.c 7380>
 3574 																																																										build_unary_op: <>
 3575 																																																										TREE_VALUE: <>
 3576 																																																										build: <>
 3577 																																																										TREE_SIDE_EFFECTS: if (), <./cc/cp/typeck.c 4958>
 3578 																																																										require_complete_type: 345
 3579 																																																									build_binary_op: 164
 3580 																																																									DECL_INITIAL: 168
 3581 																																																									BINFO_BASETYPES: <>
 3582 																																																									TREE_VEC_LENGTH: <>
 3583 																																																									TREE_VIA_VIRTUAL: 1041
 3584 																																																									BINFO_TYPE: <>
 3585 																																																									BINFO_OFFSET_ZEROP: if (), <./cc/cp/call.c 290>
 3586 																																																									build_delete: 3259
 3587 																																																									tree_cons: <>
 3588 																																																									BINFO_OFFSET: <>
 3589 																																																									TYPE_FIELDS: <>
 3590 																																																									build_component_ref: 159
 3591 																																																									DECL_NAME: 250
 3592 																																																									build_compound_expr: <>
 3593 																																																								build_pointer_type: 390
 3594 																																																								build_unary_op: <>
 3595 																																																								DECL_INITIAL: 168
 3596 																																																								save_expr: <>
 3597 																																																								TYPE_SIZE: if (), <./cc/dwarfout.c 3636>
 3598 																																																								TREE_PERMANENT: if (), <./cc/cp/decl.c 10271>
 3599 																																																								copy_to_permanent: 1830
 3600 																																																								TREE_STATIC: if (), <./cc/stor-layout.c 332>
 3601 																																																								TREE_CONSTANT: if (), <./cc/fold-const.c 3102>
 3602 																																																								expand_static_init: void (), <./cc/cp/decl.c 7009>
 3603 																																																									value_member: 2310
 3604 																																																									TREE_PURPOSE: 215
 3605 																																																									cp_error: 259
 3606 																																																									toplevel_bindings_p: 1614
 3607 																																																									pseudo_global_level_p: 3241
 3608 																																																									push_obstacks: 392
 3609 																																																									get_temp_name: tree (), <./cc/cp/decl2.c 2182>
 3610 																																																										toplevel_bindings_p: 1614
 3611 																																																										push_obstacks_nochange: 517
 3612 																																																										end_temporary_allocation: 1463
 3613 																																																										sprintf: <>
 3614 																																																										pushdecl_top_level: <>
 3615 																																																										build_decl: 888
 3616 																																																										get_identifier: <>
 3617 																																																										pushdecl: <>
 3618 																																																										TREE_USED: <>
 3619 																																																										TREE_STATIC: if (), <./cc/stor-layout.c 332>
 3620 																																																										expand_decl: <>
 3621 																																																										expand_decl_init: <>
 3622 																																																										pop_obstacks: 396
 3623 																																																									rest_of_decl_compilation: 2969
 3624 																																																									expand_start_cond: void (), <./cc/stmt.c 1986>
 3625 																																																										ALLOC_NESTING: <>
 3626 																																																										gen_label_rtx: rtx (), <./cc/emit-rtl.c 1327>
 3627 																																																										bc_expand_start_cond: void (), <./cc/stmt.c 2088>
 3628 																																																											gen_label_rtx: rtx (), <./cc/emit-rtl.c 1327>
 3629 																																																											bc_expand_expr: <>
 3630 																																																											bc_emit_bytecode: <>
 3631 																																																											bc_emit_bytecode_labelref: void (), <./cc/bc-emit.c 551>
 3632 																																																												xmalloc: 416
 3633 																																																												fprintf: <>
 3634 																																																												seg_data: void (), <./cc/bc-emit.c 201>
 3635 																																																											BYTECODE_BC_LABEL: <>
 3636 																																																											fputc: <>
 3637 																																																										do_jump: void (), <./cc/expr.c 9041>
 3638 																																																											TREE_CODE: 162
 3639 																																																											emit_queue: void (), <./cc/expr.c 530>
 3640 																																																											integer_zerop: 405
 3641 																																																											emit_jump: void (), <./cc/stmt.c 581>
 3642 																																																												do_pending_stack_adjust: void (), <./cc/expr.c 8938>
 3643 																																																													adjust_stack: <>
 3644 																																																													GEN_INT: <>
 3645 																																																												emit_jump_insn: <>
 3646 																																																												gen_jump: <>
 3647 																																																												emit_barrier: rtx (), <./cc/emit-rtl.c 2761>
 3648 																																																											TREE_OPERAND: <>
 3649 																																																											TYPE_PRECISION: 211
 3650 																																																											TREE_TYPE: 160
 3651 																																																											do_jump: 3637
 3652 																																																											build: <>
 3653 																																																											fold: <>
 3654 																																																											build1: 334
 3655 																																																											compare: CMPtype (), <./cc/config/fp-bit.c 1077>
 3656 																																																												unpack_d: 3160
 3657 																																																											floor_log2: <>
 3658 																																																											TREE_INT_CST_LOW: <>
 3659 																																																											mode_for_size: <>
 3660 																																																											type_for_mode: <>
 3661 																																																											TYPE_MODE: <>
 3662 																																																											convert: 427
 3663 																																																											gen_label_rtx: rtx (), <./cc/emit-rtl.c 1327>
 3664 																																																											start_sequence: void (), <./cc/emit-rtl.c 2919>
 3665 																																																											get_insns: rtx (), <./cc/emit-rtl.c 1696>
 3666 																																																											end_sequence: 479
 3667 																																																											defer_cleanups_to: tree (), <./cc/expr.c 8952>
 3668 																																																												TREE_VALUE: <>
 3669 																																																												TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 3670 																																																												nreverse: <>
 3671 																																																												build: <>
 3672 																																																												TREE_TYPE: 160
 3673 																																																											gen_reg_rtx: 523
 3674 																																																											emit_move_insn: <>
 3675 																																																											emit_insns: <>
 3676 																																																											make_node: 307
 3677 																																																											RTL_EXPR_RTL: <>
 3678 																																																											RTL_EXPR_SEQUENCE: <>
 3679 																																																											save_expr: <>
 3680 																																																											truthvalue_conversion: <>
 3681 																																																											tree_cons: <>
 3682 																																																											push_temp_slots: 1914
 3683 																																																											expand_expr: <>
 3684 																																																											free_temp_slots: void (), <./cc/function.c 1165>
 3685 																																																											pop_temp_slots: void (), <./cc/function.c 1204>
 3686 																																																												combine_temp_slots: void (), <./cc/function.c 933>
 3687 																																																													rtx_alloc: 172
 3688 																																																													GET_MODE: 139
 3689 																																																													rtx_free: void (), <./cc/rtl.c 249>
 3690 																																																														obstack_free: 397
 3691 																																																											do_pending_stack_adjust: 3642
 3692 																																																											get_inner_reference: <>
 3693 																																																											type_for_size: <>
 3694 																																																											integer_onep: int (), <./cc/tree.c 1505>
 3695 																																																												STRIP_NOPS: <>
 3696 																																																												TREE_CODE: 162
 3697 																																																												TREE_INT_CST_LOW: <>
 3698 																																																												TREE_INT_CST_HIGH: <>
 3699 																																																												integer_onep: 3694
 3700 																																																												TREE_REALPART: <>
 3701 																																																												integer_zerop: 405
 3702 																																																												TREE_IMAGPART: <>
 3703 																																																												fold: <>
 3704 																																																												build: <>
 3705 																																																												invert_truthvalue: <>
 3706 																																																											emit_label: <>
 3707 																																																											GET_MODE_CLASS: 492
 3708 																																																											can_compare_p: int (), <./cc/optabs.c 2860>
 3709 																																																												GET_MODE_WIDER_MODE: <>
 3710 																																																											do_jump_by_parts_equality: void (), <./cc/expr.c 9626>
 3711 																																																												expand_expr: <>
 3712 																																																												TREE_OPERAND: <>
 3713 																																																												TYPE_MODE: <>
 3714 																																																												TREE_TYPE: 160
 3715 																																																												GET_MODE_SIZE: 461
 3716 																																																												gen_label_rtx: rtx (), <./cc/emit-rtl.c 1327>
 3717 																																																												compare_from_rtx: <>
 3718 																																																												operand_subword_force: <>
 3719 																																																												TREE_UNSIGNED: 678
 3720 																																																												emit_jump: 3641
 3721 																																																												do_jump_for_compare: void (), <./cc/expr.c 9695>
 3722 																																																													GET_CODE: 81
 3723 																																																													emit_jump_insn: <>
 3724 																																																													abort: <>
 3725 																																																													emit_jump: 3641
 3726 																																																													get_last_insn: 1981
 3727 																																																													get_insns: rtx (), <./cc/emit-rtl.c 1696>
 3728 																																																													INSN_DELETED_P: <>
 3729 																																																													NEXT_INSN: <>
 3730 																																																													JUMP_LABEL: <>
 3731 																																																														eligible_for_annul_false: <>
 3732 																																																															copy_rtx: <>
 3733 																																																															INSN_FROM_TARGET_P: <>
 3734 																																																															add_to_delay_list: rtx (), <./cc/reorg.c 952>
 3735 																																																																INSN_UID: <>
 3736 																																																																gen_rtx: <>
 3737 																																																																XEXP: 105
 3738 																																																																add_to_delay_list: 3734
 3739 																																																														invert_jump: <>
 3740 																																																														JUMP_LABEL: 3730
 3741 																																																														INSN_FROM_TARGET_P: <>
 3742 																																																														eligible_for_annul_true: <>
 3743 																																																															delete_from_delay_slot: void (), <./cc/reorg.c 986>
 3744 																																																																PREV_INSN: <>
 3745 																																																																NEXT_INSN: <>
 3746 																																																																PATTERN: <>
 3747 																																																																XVECLEN: <>
 3748 																																																																XVECEXP: <>
 3749 																																																																add_to_delay_list: 3734
 3750 																																																																delete_insn: <>
 3751 																																																																add_insn_after: <>
 3752 																																																																GET_CODE: 81
 3753 																																																																simplejump_p: if (), <./cc/cse.c 8510>
 3754 																																																																emit_barrier_after: <>
 3755 																																																																emit_delay_sequence: rtx (), <./cc/reorg.c 854>
 3756 																																																																	rtvec_alloc: rtvec (), <./cc/rtl.c 187>
 3757 																																																																		obstack_alloc: <>
 3758 																																																																		PUT_NUM_ELEM: <>
 3759 																																																																	gen_rtx: <>
 3760 																																																																	make_insn_raw: rtx (), <./cc/emit-rtl.c 2084>
 3761 																																																																		rtx_alloc: 172
 3762 																																																																		INSN_UID: <>
 3763 																																																																		PATTERN: <>
 3764 																																																																		INSN_CODE: <>
 3765 																																																																		LOG_LINKS: <>
 3766 																																																																		REG_NOTES: <>
 3767 																																																																	get_insns: rtx (), <./cc/emit-rtl.c 1696>
 3768 																																																																	get_last_insn: 1981
 3769 																																																																	copy_rtx: <>
 3770 																																																																	NEXT_INSN: <>
 3771 																																																																	GET_CODE: 81
 3772 																																																																	delete_insn: <>
 3773 																																																																	PREV_INSN: <>
 3774 																																																																	set_new_first_and_last_insn: void (), <./cc/emit-rtl.c 1375>
 3775 																																																																	XVECEXP: <>
 3776 																																																																	INSN_DELETED_P: <>
 3777 																																																																	XEXP: 105
 3778 																																																																	REG_NOTES: <>
 3779 																																																																	REG_NOTE_KIND: switch (), <./cc/sched.c 4292>
 3780 																																																																	PATTERN: <>
 3781 																																																																	XVECLEN: <>
 3782 																																																																	emit_barrier_after: <>
 3783 																																																																	abort: <>
 3784 																																																																INSN_ANNULLED_BRANCH_P: <>
 3785 																																																																	INSN_FROM_TARGET_P: <>
 3786 																																																																INSN_FROM_TARGET_P: <>
 3787 																																																																obstack_ptr_grow: <>
 3788 																																																															add_to_delay_list: 3734
 3789 																																																														add_to_delay_list: 3734
 3790 																																																														next_active_insn: rtx (), <./cc/emit-rtl.c 1855>
 3791 																																																															NEXT_INSN: <>
 3792 																																																															GET_CODE: 81
 3793 																																																															PATTERN: <>
 3794 																																																														update_block: <>
 3795 																																																														delete_insn: <>
 3796 																																																														GET_CODE: 81
 3797 																																																														simplejump_p: if (), <./cc/cse.c 8510>
 3798 																																																														PATTERN: <>
 3799 																																																														find_end_label: rtx (), <./cc/reorg.c 777>
 3800 																																																														get_jump_flags: <>
 3801 																																																														reorg_redirect_jump: <>
 3802 																																																														INSN_ANNULLED_BRANCH_P: 3784
 3803 																																																													invert_jump: <>
 3804 																																																													gen_label_rtx: rtx (), <./cc/emit-rtl.c 1327>
 3805 																																																													redirect_jump: <>
 3806 																																																													emit_label: <>
 3807 																																																												emit_label: <>
 3808 																																																											do_jump_by_parts_greater: void (), <./cc/expr.c 9498>
 3809 																																																												expand_expr: <>
 3810 																																																												TREE_OPERAND: <>
 3811 																																																												TYPE_MODE: <>
 3812 																																																												TREE_TYPE: 160
 3813 																																																												GET_MODE_SIZE: 461
 3814 																																																												TREE_UNSIGNED: 678
 3815 																																																												gen_label_rtx: rtx (), <./cc/emit-rtl.c 1327>
 3816 																																																												operand_subword_force: <>
 3817 																																																												compare_from_rtx: <>
 3818 																																																												emit_jump: 3641
 3819 																																																												do_jump_for_compare: 3721
 3820 																																																												emit_label: <>
 3821 																																																											GET_CODE: 81
 3822 																																																											copy_to_reg: <>
 3823 																																																											GET_MODE: 139
 3824 																																																											do_jump_by_parts_equality_rtx: void (), <./cc/expr.c 9663>
 3825 																																																												GET_MODE_SIZE: 461
 3826 																																																												GET_MODE: 139
 3827 																																																												gen_label_rtx: rtx (), <./cc/emit-rtl.c 1327>
 3828 																																																												compare_from_rtx: <>
 3829 																																																												operand_subword_force: <>
 3830 																																																												emit_jump: 3641
 3831 																																																												do_jump_for_compare: 3721
 3832 																																																												emit_label: <>
 3833 																																																											compare_from_rtx: <>
 3834 																																																											CONST0_RTX: <>
 3835 																																																											TREE_UNSIGNED: 678
 3836 																																																											abort: <>
 3837 																																																											do_jump_for_compare: 3721
 3838 																																																									build_binary_op: 164
 3839 																																																									expand_assignment: <>
 3840 																																																									TYPE_NEEDS_CONSTRUCTING: <>
 3841 																																																									TREE_TYPE: 160
 3842 																																																									TREE_CODE: 162
 3843 																																																									expand_aggr_init: void (), <./cc/cp/init.c 1111>
 3844 																																																										TREE_TYPE: 160
 3845 																																																										TREE_READONLY: if (), <./cc/cp/decl2.c 1229>
 3846 																																																										TREE_THIS_VOLATILE: <>
 3847 																																																										TREE_CODE: 162
 3848 																																																										TYPE_READONLY: 217
 3849 																																																										TYPE_VOLATILE: <>
 3850 																																																										TYPE_MAIN_VARIANT: 324
 3851 																																																										expand_vec_init: tree (), <./cc/cp/init.c 3514>
 3852 																																																											TREE_TYPE: 160
 3853 																																																											convert: 427
 3854 																																																											make_tree_vec: 857
 3855 																																																											TREE_VEC_ELT: <>
 3856 																																																											size_in_bytes: <>
 3857 																																																											get_temp_regvar: tree (), <./cc/cp/decl2.c 2223>
 3858 																																																												sprintf: <>
 3859 																																																												build_decl: 888
 3860 																																																												get_identifier: <>
 3861 																																																												TREE_USED: <>
 3862 																																																												DECL_REGISTER: <>
 3863 																																																												store_init_value: 2543
 3864 																																																												expand_decl: <>
 3865 																																																												expand_decl_init: <>
 3866 																																																												type_needs_gc_entry: int (), <./cc/cp/gc.c 66>
 3867 																																																													IS_AGGR_TYPE: else if (), <./cc/cp/typeck.c 6140>
 3868 																																																													TYPE_FIELDS: <>
 3869 																																																													DECL_NAME: 250
 3870 																																																													VFIELD_NAME_P: <>
 3871 																																																													VBASE_NAME_P: <>
 3872 																																																													strcmp: 157
 3873 																																																													IDENTIFIER_POINTER: <>
 3874 																																																													TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 3875 																																																													type_needs_gc_entry: 3866
 3876 																																																													TREE_TYPE: 160
 3877 																																																													TYPE_BINFO_BASETYPES: <>
 3878 																																																													TREE_VEC_LENGTH: <>
 3879 																																																													BINFO_TYPE: <>
 3880 																																																													TREE_VEC_ELT: <>
 3881 																																																													TREE_CODE: 162
 3882 																																																													CLASSTYPE_RTTI: <>
 3883 																																																												DECL_GC_OFFSET: <>
 3884 																																																												size_int: <>
 3885 																																																											build_pointer_type: 390
 3886 																																																											default_conversion: 165
 3887 																																																											expand_assignment: <>
 3888 																																																											TREE_CODE: 162
 3889 																																																											CONSTRUCTOR_ELTS: <>
 3890 																																																											build1: 334
 3891 																																																											build: <>
 3892 																																																											TREE_INT_CST_LOW: <>
 3893 																																																											IS_AGGR_TYPE: else if (), <./cc/cp/typeck.c 6140>
 3894 																																																											expand_aggr_init: 3843
 3895 																																																											TREE_VALUE: <>
 3896 																																																											TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 3897 																																																											TYPE_NEEDS_CONSTRUCTING: <>
 3898 																																																											use_variable: void (), <./cc/function.c 3051>
 3899 																																																												GET_CODE: 81
 3900 																																																												emit_insn: <>
 3901 																																																												gen_rtx: <>
 3902 																																																												XEXP: 105
 3903 																																																												REGNO: 93
 3904 																																																											DECL_RTL: <>
 3905 																																																											build_int_2: <>
 3906 																																																											sorry: <>
 3907 																																																											TYPE_LANG_SPECIFIC: 370
 3908 																																																											TYPE_HAS_DEFAULT_CONSTRUCTOR: <>
 3909 																																																											expand_start_cond: 3624
 3910 																																																											TYPE_NEEDS_DESTRUCTOR: <>
 3911 																																																											start_protect: void (), <./cc/cp/except.c 705>
 3912 																																																												doing_eh: int (), <./cc/cp/except.c 45>
 3913 																																																												emit_label: <>
 3914 																																																												push_eh_entry: rtx (), <./cc/cp/except.c 415>
 3915 																																																													xmalloc: 1643
 3916 																																																													free: <>
 3917 																																																													push_rtl_perm: void (), <./cc/cp/except.c 395>
 3918 																																																													gen_label_rtx: rtx (), <./cc/emit-rtl.c 1327>
 3919 																																																													pop_rtl_from_perm: void (), <./cc/cp/except.c 406>
 3920 																																																													LABEL_PRESERVE_P: <>
 3921 																																																													enqueue_eh_entry: <>
 3922 																																																													copy_eh_entry: <>
 3923 																																																											expand_start_loop_continue_elsewhere: struct nesting * (), <./cc/stmt.c 2181>
 3924 																																																											expand_expr_stmt: void (), <./cc/stmt.c 1684>
 3925 																																																												bc_expand_expr: <>
 3926 																																																												abort: <>
 3927 																																																												bc_emit_instruction: <>
 3928 																																																												TREE_TYPE: 160
 3929 																																																												TREE_SIDE_EFFECTS: if (), <./cc/cp/typeck.c 4958>
 3930 																																																												TREE_CODE: 162
 3931 																																																												warning_with_file_and_line: <>
 3932 																																																												warn_if_unused_value: int (), <./cc/stmt.c 1769>
 3933 																																																													TREE_USED: <>
 3934 																																																													TREE_CODE: 162
 3935 																																																													warn_if_unused_value: 3932
 3936 																																																													TREE_OPERAND: <>
 3937 																																																													TREE_NO_UNUSED_WARNING: <>
 3938 																																																													TREE_CONSTANT: if (), <./cc/fold-const.c 3102>
 3939 																																																													TREE_TYPE: 160
 3940 																																																													warn: 1547
 3941 																																																													TREE_CODE_CLASS: switch (), <./cc/dwarfout.c 3160>
 3942 																																																													TREE_THIS_VOLATILE: <>
 3943 																																																													warning_with_file_and_line: <>
 3944 																																																												build1: 334
 3945 																																																												build_pointer_type: 390
 3946 																																																												expand_expr: <>
 3947 																																																												GET_CODE: 81
 3948 																																																												TREE_THIS_VOLATILE: <>
 3949 																																																												TYPE_MODE: <>
 3950 																																																												copy_to_reg: <>
 3951 																																																												gen_label_rtx: rtx (), <./cc/emit-rtl.c 1327>
 3952 																																																												emit_cmp_insn: void (), <./cc/optabs.c 2654>
 3953 																																																													GET_MODE_CLASS: 492
 3954 																																																													force_not_mem: <>
 3955 																																																													CONSTANT_P: 118
 3956 																																																													preserve_subexpressions_p: int (), <./cc/stmt.c 2435>
 3957 																																																														get_last_insn_anywhere: rtx (), <./cc/emit-rtl.c 1723>
 3958 																																																														INSN_UID: <>
 3959 																																																													rtx_cost: int (), <./cc/cse.c 683>
 3960 																																																														GET_CODE: 81
 3961 																																																														XEXP: 105
 3962 																																																														exact_log2:  () >= 0 (nzb (true_code == EQ && true_val == const0_rtx && () (reg_mentioned_p () (known_cond (), pc_rtx, pc_rtx, 0, 0 (reg_mentioned_p () (known_cond (), pc_rtx, pc_rtx, 0, 0 (XEXP (), swapped false true (XEXP (), swapped true false (x, 1 (x, 2 (cond (comparison_p && reversible_comparison_p () && () (true_code (XEXP (), gen_binary () (XEXP (), false (XEXP (), true (x, 0 (rtx_equal_p () && ! side_effects_p () (GET_MODE_CLASS () == MODE_INT && GET_CODE () == NEG && rtx_equal_p () && comparison_p && rtx_equal_p () && ! side_effects_p () (true_code (ABS, mode, mode, true (NEG, mode, mode, gen_unary () (() && comparison_p && rtx_equal_p () && rtx_equal_p () && ! side_effects_p () (true_code (SMAX, mode, true, false (SMIN, mode, true, false (UMAX, mode, true, false (UMIN, mode, true, false (comparison_p && mode != VOIDmode && ! side_effects_p () (true, SET (false, SET (cond, 0 (cond, 1 (() && rtx_equal_p () (t, 1 (t (() && rtx_equal_p () (t, 0 (t (GET_CODE () == SIGN_EXTEND && () && GET_CODE () == SUBREG && subreg_lowpart_p () && rtx_equal_p () && () (XEXP (), 1 (XEXP () (XEXP () (GET_CODE () == SIGN_EXTEND && () && GET_CODE () == SUBREG && subreg_lowpart_p () && rtx_equal_p () && () (XEXP (), 0 (XEXP () (XEXP () (GET_CODE () == ZERO_EXTEND && () && GET_CODE () == SUBREG && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT && subreg_lowpart_p () && rtx_equal_p () && () (XEXP (), 1 (XEXP () (XEXP () (GET_CODE () == ZERO_EXTEND && () && GET_CODE () == SUBREG && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT && subreg_lowpart_p () && rtx_equal_p () && () (XEXP (), 0 (XEXP () (XEXP () (z (gen_binary (), pc_rtx, pc_rtx, 0, 0 (MULT, m, temp, gen_binary () (temp, pc_rtx, pc_rtx, 0, 0 (op, m, gen_lowpart_for_combine (), temp (extend_op != NIL (extend_op, mode, m, temp (true_code == NE && XEXP () == const0_rtx && false == const0_rtx && GET_CODE () == CONST_INT && () (NULL_RTX, ASHIFT, mode, gen_lowpart_for_combine (), i (x (x (x (src (src (dest (GET_CODE () == PC && GET_CODE () == RETURN (GET_MODE_CLASS () == MODE_INT (src, mode, GET_MODE_MASK (), NULL_RTX, 0 (() && () != 0 && () && GET_RTX_CLASS () == && rtx_equal_p () (*cc_use (dest (GET_CODE () == COMPARE (src, 0 (src, 1 (old_code, & op0, & op1 (new_code, op0, op1 (compare_mode != GET_MODE () (dest (REG, compare_mode, regno (regno < FIRST_PSEUDO_REGISTER || () (regno >= FIRST_PSEUDO_REGISTER (regno_reg_rtx[regno], new_dest (SET_DEST (), new_dest (XEXP (), new_dest (new_code != old_code (*cc_use, gen_rtx_combine () (() && ! other_changed && op1 == const0_rtx && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT && exact_log2 () >= 0 (other_insn (() (*cc_use, old_code (XOR, GET_MODE (), op0, GEN_INT () (other_changed (op1 == const0_rtx && dest == cc0_rtx (SET_SRC (), op0 (GET_CODE () != COMPARE || GET_MODE () != compare_mode (SET_SRC (), gen_rtx_combine () (x (XEXP (), op0 (XEXP (), op1 (src, SET (SET_SRC (), src (GET_CODE () == SUBREG && subreg_lowpart_p () && GET_RTX_CLASS () != && () && () && ! () && () (SET_DEST (), gen_lowpart_for_combine () (SET_SRC (), SUBREG_REG () (x (x (GET_CODE () == SUBREG && subreg_lowpart_p () && LOAD_EXTEND_OP () != NIL && SUBREG_WORD () == 0 && () && GET_CODE () == MEM (SET_SRC (), gen_rtx_combine () (x (GET_CODE () != PC && GET_CODE () == IF_THEN_ELSE && GET_MODE_CLASS () == MODE_INT && () && XEXP () == const0_rtx && GET_MODE () == GET_MODE () && ! can_conditionally_move_p () && () && ! side_effects_p () (GET_CODE () == NE XEXP () XEXP () (GET_CODE () == NE XEXP () XEXP () (GET_CODE () == IOR && rtx_equal_p () (true, 1 (GET_CODE () == IOR && rtx_equal_p () (true, 0 (GET_CODE () == IOR && rtx_equal_p () (false, 1 (GET_CODE () == IOR && rtx_equal_p () (false, 0 (AND, GET_MODE (), XEXP (), true (AND, GET_MODE (), gen_unary (), false (SET_SRC (), gen_binary () (x (GET_CODE () == CLOBBER && XEXP () == const0_rtx (GET_CODE () == CLOBBER && XEXP () == const0_rtx (x (x, last (x (x, 0 (x, 1 (GET_CODE () (GET_CODE () == XOR && rtx_equal_p () && ! side_effects_p () (AND, mode, gen_unary (), op1 (GET_CODE () == XOR && rtx_equal_p () && ! side_effects_p () (AND, mode, gen_unary (), op1 (GET_CODE () == NOT && GET_CODE () == XOR && rtx_equal_p () && ! side_effects_p () (AND, mode, XEXP (), op1 (GET_CODE () == NOT && GET_CODE () == XOR && rtx_equal_p () && ! side_effects_p () (AND, mode, XEXP (), op1 (GET_CODE () == CONST_INT (x, mode, op0, INTVAL () (last && GET_CODE () == IOR && GET_CODE () == AND && GET_CODE () == CONST_INT && GET_CODE () == CONST_INT (IOR, mode, gen_binary (), op1 (GET_CODE () != AND (GET_RTX_CLASS () == || GET_RTX_CLASS () == (x, 0 (x, 1 (GET_CODE () == IOR && () && ! side_effects_p () && ! side_effects_p () (GET_CODE () == IOR || GET_CODE () == XOR (gen_binary () (GET_CODE () != AND (GET_CODE () == IOR || GET_CODE () == XOR (gen_binary () (GET_CODE () == NOT && GET_CODE () == XOR (gen_binary () (GET_CODE () == NOT && GET_CODE () == XOR (gen_binary () (GET_CODE () == CONST_INT && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT && () == 0 (GET_CODE () == AND && () && ! side_effects_p () && ! side_effects_p () (GET_CODE () == AND (gen_binary () (GET_CODE () != IOR (GET_CODE () == AND (gen_binary () (GET_CODE () != IOR (() && rtx_equal_p () && GET_CODE () == CONST_INT && GET_CODE () == CONST_INT && () (ROTATE, mode, XEXP (), () (GET_CODE () == CONST_INT && GET_CODE () == ASHIFTRT && GET_CODE () == PLUS && GET_CODE () == CONST_INT && GET_CODE () == CONST_INT && INTVAL () < HOST_BITS_PER_WIDE_INT (XEXP () (op1 (mask >> count == INTVAL () && () == 0 (XEXP (), GEN_INT () (GET_CODE () == NOT (op0, 0 (GET_CODE () == NOT (op1, 0 (num_negated == 2 (XEXP (), op0 (XEXP (), op1 (num_negated == 1 (NOT, mode, mode, gen_binary () (GET_CODE () == AND && rtx_equal_p () && ! side_effects_p () (AND, mode, gen_unary (), op1 (GET_CODE () == AND && rtx_equal_p () && ! side_effects_p () (AND, mode, gen_unary (), op1 (op1 == const1_rtx && GET_RTX_CLASS () == && reversible_comparison_p () (reverse_condition (), mode, XEXP (), XEXP () (op1 == const1_rtx && GET_CODE () == LSHIFTRT && GET_CODE () == CONST_INT && INTVAL () == GET_MODE_BITSIZE () - 1 (GE, mode, XEXP (), const0_rtx (GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT && () && op1 == const_true_rtx && GET_RTX_CLASS () == && reversible_comparison_p () (reverse_condition (), mode, XEXP (), XEXP () (x (GET_CODE () (GET_CODE () == CONST_INT (GET_MODE_SIZE () > UNITS_PER_WORD (GET_MODE () (len == 0 (GET_CODE () == CLOBBER (x, 0 (GET_CODE () != CONST_INT || GET_CODE () != CONST_INT || GET_MODE () == VOIDmode (XEXP () (XEXP () (len + pos > GET_MODE_BITSIZE () (XEXP (), gen_rtx () (BITS_BIG_ENDIAN (GET_MODE () (GET_MODE () (modewidth >= pos - len (NULL_RTX, unsignedp LSHIFTRT ASHIFTRT, GET_MODE (), simplify_shift_const (), modewidth - len (unsignedp && len < HOST_BITS_PER_WIDE_INT (NULL_RTX, GET_MODE (), simplify_shift_const (), () - 1 (GET_CODE () == CLOBBER (x (1 (GET_CODE () == STRICT_LOW_PART && GET_CODE () == SUBREG (XEXP () (GET_MODE () (GET_CODE () == ZERO_EXTRACT && GET_CODE () == CONST_INT (SET_DEST (), 0 (XEXP () (SET_DEST (), 2 (GET_CODE () == CONST_INT && INTVAL () + len > GET_MODE_BITSIZE () (USE, GET_MODE (), inner (BITS_BIG_ENDIAN (GET_CODE () == CONST_INT (GET_MODE_BITSIZE () - len - INTVAL () (GET_CODE () == MINUS && GET_CODE () == CONST_INT && () (pos, 0 (MINUS, GET_MODE (), GEN_INT (), pos (GET_CODE () == SUBREG && () (SET, VOIDmode, SUBREG_REG (), gen_lowpart_for_combine () (GET_CODE () == SUBREG && subreg_lowpart_p () (inner (inner (len < HOST_BITS_PER_WIDE_INT (() - 1 (SET, VOIDmode, copy_rtx (), gen_binary () (mode, inner, pos, pos_rtx, len, unsignedp, in_dest, in_compare (inner (len, MODE_INT, 1 (GET_CODE () == USE (inner, 0 (GET_CODE () == SUBREG && subreg_lowpart_p () (GET_CODE () == MEM (SUBREG_REG () (inner (inner (pos_rtx && GET_CODE () == CONST_INT (pos_rtx (tmode != BLKmode && ! () && () (GET_CODE () == MEM (BYTES_BIG_ENDIAN (GET_MODE_BITSIZE () - len - pos (MEM, tmode, plus_constant () (new (inner (new (inner (new (inner (GET_CODE () == REG (tmode != inner_mode (SUBREG, tmode, inner, () (inner, tmode, len >= HOST_BITS_PER_WIDE_INT GET_MODE_MASK () () - 1, NULL_RTX, 0 (in_dest (GET_CODE () == MEM new () (mode == tmode new gen_rtx_combine () (pos_rtx == 0 && pos == 0 && ! in_dest && ! in_compare && ! spans_byte && unsignedp ( ! spans_byte && () (in_dest (int (int (int ( ! in_dest && unsignedp (int (int (int ( ! in_dest && ! unsignedp (int (int (int (mode != VOIDmode && GET_MODE_SIZE () < GET_MODE_SIZE () (pos_rtx && GET_MODE () != VOIDmode && GET_MODE_SIZE () < GET_MODE_SIZE () (pos_rtx (GET_CODE () != MEM || () (BITS_BIG_ENDIAN (pos_rtx == 0 (MAX () - len - pos (MINUS, GET_MODE (), GEN_INT (), pos_rtx (wanted_mem_mode != VOIDmode && GET_MODE_SIZE () < GET_MODE_SIZE () && () (BYTES_BIG_ENDIAN && ! spans_byte && GET_MODE_SIZE () < GET_MODE_SIZE () (is_mode (inner_mode (pos_rtx == 0 (wanted_mem_mode (BYTES_BIG_ENDIAN != BITS_BIG_ENDIAN && ! spans_byte && is_mode != wanted_mem_mode (GET_MODE_SIZE () - GET_MODE_SIZE () - offset (offset != 0 || inner_mode != wanted_mem_mode (MEM, wanted_mem_mode, plus_constant () (newmem (inner (newmem (inner (newmem (inner (GET_CODE () != MEM (inner, extraction_mode, pos_rtx || len + orig_pos >= HOST_BITS_PER_WIDE_INT GET_MODE_MASK () () << orig_pos, NULL_RTX, 0 (pos_rtx != 0 && GET_MODE_SIZE () > GET_MODE_SIZE () (ZERO_EXTEND, pos_mode, pos_rtx (pos_rtx != 0 && GET_MODE_SIZE () < GET_MODE_SIZE () (pos_mode, pos_rtx (pos_rtx == 0 && orig_pos_rtx != 0 && INTVAL () == pos (pos_rtx == 0 (pos (unsignedp ZERO_EXTRACT SIGN_EXTRACT, extraction_mode, inner, GEN_INT (), pos_rtx ( ! in_dest (mode, new (x, count (x (x (code (GET_CODE () == CONST_INT && INTVAL () >= count (NULL_RTX, ASHIFT, mode, XEXP (), INTVAL () - count (() != 0 (code, mode, mode, tem (GET_CODE () == CONST_INT && () == 0 && () != 0 (code, mode, tem, GEN_INT () (x, in_code (x (x (mode (code == MEM || code == PLUS || code == MINUS MEM () COMPARE in_code == COMPARE SET in_code (code (in_code == MEM && GET_CODE () == CONST_INT && INTVAL () < HOST_BITS_PER_WIDE_INT && INTVAL () >= 0 (XEXP (), next_code (MULT, mode, new, GEN_INT () (GET_CODE () != CONST_INT (GET_CODE () == LSHIFTRT && () >= 0 (XEXP (), next_code (mode, new, 0, XEXP (), i, 1, 0, in_code == COMPARE (GET_CODE () == SUBREG && subreg_lowpart_p () && GET_CODE () == LSHIFTRT && () >= 0 (XEXP (), next_code (GET_MODE (), new, 0, XEXP (), i, 1, 0, in_code == COMPARE (() && GET_CODE () == LSHIFTRT && GET_CODE () == LSHIFTRT && () >= 0 (GET_CODE (), mode, gen_rtx (), gen_rtx () (new, in_code (GET_CODE () == ROTATE && GET_CODE () == CONST_INT && () >= 0 && i <= INTVAL () (XEXP (), next_code (mode, new, (), NULL_RTX, i, 1, 0, in_code == COMPARE (ashr_optab handlers[() mode]insn_code != CODE_FOR_nothing && () && GET_CODE () == LSHIFTRT && GET_CODE () == CONST_INT && INTVAL () >= 0 && INTVAL () < HOST_BITS_PER_WIDE_INT && mode_width <= HOST_BITS_PER_WIDE_INT (mode (XEXP () (() == 0 (XEXP (), gen_rtx_combine () (() >= 0 (mode, make_compound_operation (), 0, NULL_RTX, i, 1, 0, in_code == COMPARE (in_code == COMPARE && () >= 0 (mode, make_compound_operation (), i, NULL_RTX, 1, 1, 0, 1 (ashr_optab handlers[() mode]insn_code == CODE_FOR_nothing && lshr_optab handlers[() mode]insn_code != CODE_FOR_nothing && mode_width <= HOST_BITS_PER_WIDE_INT && () == 0 (ASHIFTRT, mode, make_compound_operation (), XEXP () (x, 0 (x, 1 (GET_CODE () == CONST_INT && GET_CODE () == ASHIFT && GET_CODE () == CONST_INT && INTVAL () >= INTVAL () (XEXP (), next_code (mode, new, INTVAL () - INTVAL (), NULL_RTX, mode_width - INTVAL (), code == LSHIFTRT, 0, in_code == COMPARE (GET_RTX_CLASS () != && ! () && GET_CODE () == CONST_INT && INTVAL () < HOST_BITS_PER_WIDE_INT && () != 0 (mode, make_compound_operation (), 0, NULL_RTX, mode_width - INTVAL (), code == LSHIFTRT, 0, in_code == COMPARE (SUBREG_REG (), in_code (GET_CODE () != GET_CODE () && GET_MODE_SIZE () < GET_MODE_SIZE () && subreg_lowpart_p () (tem, mode, GET_MODE_MASK (), NULL_RTX, 0 (GET_CODE () != SUBREG (newer, in_code (new (mode, new (x (code (i 0 i < GET_RTX_LENGTH () i ++ (fmt[i] == (XEXP (), next_code (XEXP (), new (m, plen (m & - m (pos < 0 (() + 1 (*plen <= 0 (x, mode, mask, reg, just_select (x (code == CALL (() mode GET_MODE () (() && GET_MODE_BITSIZE () < GET_MODE_BITSIZE () (x (op_mode (op_mode (op_mode (GET_MODE_BITSIZE () >= HOST_BITS_PER_WIDE_INT GET_MODE_MASK () () - 1 (HOST_WIDE_INT (x, mode ( ! just_select && () == 0 (GET_CODE () == CONST_INT (x (mode (width > 0 && width < HOST_BITS_PER_WIDE_INT && () != 0 (HOST_WIDE_INT (cval (GET_MODE_SIZE () < GET_MODE_SIZE () && () == 0 (mode, x (GET_MODE () == mode && code != SUBREG && () == 0 (code ( ! BITS_BIG_ENDIAN && () == 0 (XEXP (), mode, mask, reg, next_select (x (GET_CODE () != code (x, mode, mask, reg, next_select (reg != 0 && () (subreg_lowpart_p () && () (SUBREG_REG (), mode, mask, reg, next_select (GET_CODE () == CONST_INT (x, op_mode, XEXP (), mask & INTVAL () (GET_CODE () == AND && GET_CODE () == CONST_INT && INTVAL () == mask (x, 0 (GET_CODE () == AND && GET_CODE () == CONST_INT && GET_MODE_MASK () != mask && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT (INTVAL () | () (GET_MODE () (width > 0 && width < HOST_BITS_PER_WIDE_INT && () != 0 (HOST_WIDE_INT (AND, GET_MODE (), XEXP (), GEN_INT () (rtx_cost () < rtx_cost () (mode (width < HOST_BITS_PER_WIDE_INT && () != 0 (HOST_WIDE_INT (GET_CODE () == CONST_INT && exact_log2 () >= 0 && () == 0 && () != 0 (plus_constant (), mode, mask, reg, next_select (GET_CODE () == LSHIFTRT && GET_CODE () == CONST_INT && INTVAL () >= 0 && INTVAL () < HOST_BITS_PER_WIDE_INT && GET_CODE () == CONST_INT && () && () (() << INTVAL () (GET_CODE (), GET_MODE (), XEXP (), temp (LSHIFTRT, GET_MODE (), temp, XEXP () (x, mode, mask, reg, next_select (op_mode, force_to_mode () (op_mode, force_to_mode () (GET_CODE () == CONST_INT && () && () != 0 (INTVAL () & mask (op_mode != GET_MODE () || op0 != XEXP () || op1 != XEXP () (code, op_mode, op0, op1 ( ! () && ! () (GET_CODE () == CONST_INT && INTVAL () >= 0 && INTVAL () < GET_MODE_BITSIZE () && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT (XEXP () (op_mode, force_to_mode () (op_mode != GET_MODE () || op0 != XEXP () (code, op_mode, op0, XEXP () (GET_CODE () == CONST_INT && INTVAL () < HOST_BITS_PER_WIDE_INT && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT (x, 0 (XEXP () (GET_MODE_BITSIZE () > HOST_BITS_PER_WIDE_INT || () != 0 (x (inner, op_mode, mask, reg, next_select (GET_MODE () != op_mode || inner != XEXP () (LSHIFTRT, op_mode, inner, XEXP () (GET_CODE () == LSHIFTRT && GET_CODE () == CONST_INT && () && exact_log2 () >= 0 && () (LSHIFTRT, GET_MODE (), XEXP (), GEN_INT () (GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT && () (XEXP (), mode, mask, reg, next_select (GET_CODE () == CONST_INT && INTVAL () >= 0 && INTVAL () < HOST_BITS_PER_WIDE_INT (GET_MODE_BITSIZE () > HOST_BITS_PER_WIDE_INT (HOST_WIDE_INT (GET_MODE_BITSIZE () - INTVAL () < HOST_BITS_PER_WIDE_INT (XEXP () (GET_MODE () (GET_MODE () (XEXP () (() == 0 || () >= 0 (x, LSHIFTRT, GET_MODE (), XEXP (), i < 0 INTVAL () GET_MODE_BITSIZE () - 1 - i (GET_CODE () != ASHIFTRT (x, mode, mask, reg, next_select (mask == 1 (LSHIFTRT, GET_MODE (), XEXP (), XEXP () (() && GET_CODE () == CONST_INT && INTVAL () >= 0 && () && GET_CODE () == ASHIFT && GET_CODE () == CONST_INT && INTVAL () == INTVAL () (XEXP (), mode, mask, reg, next_select (GET_CODE () == CONST_INT && INTVAL () >= 0 (code == ROTATE ROTATERT ROTATE, GET_MODE (), GEN_INT (), XEXP () (temp && GET_CODE () == CONST_INT (XEXP (), force_to_mode () (mask == 1 (XEXP (), mode, mask, reg, just_select (GET_CODE () == LSHIFTRT && GET_CODE () == CONST_INT && INTVAL () >= 0 && () && INTVAL () < HOST_BITS_PER_WIDE_INT (mask << INTVAL () (XOR, GET_MODE (), XEXP (), temp (LSHIFTRT, GET_MODE (), temp, XEXP () (x, mode, mask, reg, next_select (op_mode, force_to_mode () (op_mode != GET_MODE () || op0 != XEXP () (code, op_mode, op_mode, op0 (() == 0 && XEXP () == const0_rtx && () == 0 (XEXP (), mode, mask, reg, next_select (XEXP (), gen_lowpart_for_combine () (XEXP (), gen_lowpart_for_combine () (mode, x (x, ptrue, pfalse (x (x (mode (GET_RTX_CLASS () == && () != 0 (code, mode, GET_MODE (), true0 (code, mode, GET_MODE (), false0 (code == COMPARE (GET_RTX_CLASS () == || GET_RTX_CLASS () == || GET_RTX_CLASS () == (XEXP (), & true0, & false0 (XEXP (), & true1, & false1 (() && ! () (code, mode, true0, true1 (code, mode, false0, false1 (() && GET_CODE () == MULT && GET_CODE () == MULT (XEXP (), 1 (XEXP (), 1 (XEXP (), 0 (XEXP (), 0 (GET_RTX_CLASS () == && GET_RTX_CLASS () == && reversible_comparison_p () && () && ! side_effects_p () (MULT, mode, op0, const_true_rtx (MULT, mode, (), const_true_rtx (() && GET_CODE () == MULT && GET_CODE () == MULT (XEXP (), 0 (XEXP (), 0 (GET_RTX_CLASS () == && GET_RTX_CLASS () == && reversible_comparison_p () && () && ! side_effects_p () (code == IF_THEN_ELSE (x, 0 (x, 1 (x, 2 (GET_CODE () == NE && XEXP () == const0_rtx (cond0, 0 (GET_CODE () == EQ && XEXP () == const0_rtx (x, 2 (x, 1 (cond0, 0 (code == SUBREG && GET_MODE_CLASS () == MODE_INT && GET_MODE_CLASS () == MODE_INT && GET_MODE_SIZE () <= GET_MODE_SIZE () && 0 != () (true0, mode, GET_MODE_MASK (), NULL_RTX, 0 (false0, mode, GET_MODE_MASK (), NULL_RTX, 0 (CONSTANT_P () || () (num_sign_bit_copies () == size (exact_log2 () >= 0 (nz (x, cond, reg, val (x (side_effects_p () (cond == EQ && rtx_equal_p () (code == ABS && rtx_equal_p () && val == const0_rtx (cond (x, 0 (NEG, GET_MODE (), GET_MODE (), XEXP () (GET_RTX_CLASS () == || GET_RTX_CLASS () == (rtx_equal_p () (cond (rtx_equal_p () && rtx_equal_p () (GET_RTX_CLASS () == (comparison_dominates_p () const_true_rtx () (code == SMAX || code == SMIN || code == UMIN || code == UMAX (code == UMIN || code == UMAX (code == SMAX || code == UMAX (cond (cond (x, 1 (x, 0 (x, 1 (x, 0 (code (i GET_RTX_LENGTH () - 1 i >= 0 i -- (fmt[i] == (XEXP (), known_cond () (fmt[i] == (j XVECLEN () - 1 j >= 0 j -- (XVECEXP (), known_cond () (x (x (x (GET_CODE () == AND && GET_CODE () == ROTATE && GET_CODE () == CONST_INT && INTVAL () == -2 && () (VOIDmode, dest, 0, XEXP (), 1, 1, 1, 0 (SET, VOIDmode, assign, const0_rtx (GET_CODE () == AND && GET_CODE () == SUBREG && subreg_lowpart_p () && () && GET_CODE () == ROTATE && INTVAL () == -2 && () (VOIDmode, dest, 0, XEXP (), 1, 1, 1, 0 (SET, VOIDmode, assign, const0_rtx (GET_CODE () == IOR && GET_CODE () == ASHIFT && XEXP () == const1_rtx && () (VOIDmode, dest, 0, XEXP (), 1, 1, 1, 0 (SET, VOIDmode, assign, const1_rtx (GET_CODE () == IOR && GET_CODE () == AND && GET_CODE () == CONST_INT && () (XEXP () (src, 1 (GET_CODE () == IOR && GET_CODE () == AND && GET_CODE () == CONST_INT && () (XEXP () (src, 0 (c1 ^ GET_MODE_MASK (), & len (pos < 0 || pos + len > GET_MODE_BITSIZE () || () (VOIDmode, dest, pos, NULL_RTX, len, 1, 1, 0 (GET_CODE () == STRICT_LOW_PART GET_MODE () GET_MODE () (simplify_shift_const (), mode, GET_MODE_BITSIZE () >= HOST_BITS_PER_WIDE_INT GET_MODE_MASK () () - 1, dest, 0 (SET, VOIDmode, assign, src (x (x (FLOAT_MODE_P () (code != IOR && code != AND && code != XOR && code != PLUS && code != MINUS (x, 0 (x, 1 (GET_RTX_CLASS () == || GET_RTX_CLASS () == (lhs (rhs (lhs (inner_code != GET_CODE () (inner_code (code == PLUS || code == MINUS (code != PLUS && code != MINUS (GET_MODE () != GET_MODE () || SUBREG_WORD () != SUBREG_WORD () || ! subreg_lowpart_p () || () || () || GET_MODE_SIZE () > UNITS_PER_WORD (code, GET_MODE (), SUBREG_REG (), SUBREG_REG () (GET_MODE (), tem (GET_RTX_CLASS () == && rtx_equal_p () (lhs, 0 (lhs, 1 (rhs, 1 (GET_RTX_CLASS () == && rtx_equal_p () (lhs, 0 (lhs, 1 (rhs, 0 (GET_RTX_CLASS () == && rtx_equal_p () (lhs, 1 (lhs, 0 (rhs, 1 (rtx_equal_p () (lhs, 1 (lhs, 0 (rhs, 0 (code, GET_MODE (), lhs, rhs (code == XOR && inner_code == IOR (NOT, GET_MODE (), GET_MODE (), other (inner_code, GET_MODE (), apply_distributive_law (), other (x, mode, varop, constop (mode (varop, mode, constop, NULL_RTX, 0 (GET_CODE () == CLOBBER || GET_CODE () == CONST_INT (varop, mode (mode (BITS_PER_WORD < HOST_BITS_PER_WIDE_INT && BITS_PER_WORD == width && () (() () << width (constop == 0 (GET_CODE () == NEG && nonzero_bits () == 1 && () >= 0 (NULL_RTX, ASHIFT, mode, XEXP (), i (GET_CODE () == IOR || GET_CODE () == XOR (mode, apply_distributive_law () (x && GET_CODE () == SUBREG && GET_MODE () == mode && SUBREG_REG () == varop (x, 0 (mode, varop (GET_CODE () == CLOBBER (constop == nonzero (x == 0 || GET_CODE () != AND || GET_MODE () != mode (AND, mode, varop, GEN_INT () (GET_CODE () != CONST_INT || INTVAL () != constop (XEXP (), GEN_INT () (XEXP (), varop (x, mode (mode (mode (FLOAT_MODE_P () || FLOAT_MODE_P () (GET_MODE_BITSIZE () > mode_width (x (mode (mode (mode_width > HOST_BITS_PER_WIDE_INT (GET_MODE () != VOIDmode && GET_MODE () != mode && GET_MODE_BITSIZE () <= BITS_PER_WORD && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT && GET_MODE_BITSIZE () > GET_MODE_BITSIZE () (x, GET_MODE () (mode (GET_MODE () (x (code (POINTERS_EXTEND_UNSIGNED && GET_MODE () == Pmode && REGNO_POINTER_FLAG () (ptr_mode (x == stack_pointer_rtx (PUSH_ROUNDING (), sp_alignment (sp_alignment - 1 (reg_last_set_value[REGNO ()] != 0 && reg_last_set_mode[REGNO ()] == mode && () && INSN_CUID () < subst_low_cuid (x (x (tem (GET_MODE_BITSIZE () < mode_width && GET_CODE () == CONST_INT && INTVAL () > 0 && 0 != () (INTVAL () | () (tem, mode (nonzero_sign_valid && reg_nonzero_bits[REGNO ()](x (INTVAL () > 0 && mode_width < BITS_PER_WORD && 0 != () (INTVAL () | () (x (LOAD_EXTEND_OP () == ZERO_EXTEND (GET_MODE () (GET_MODE_CLASS () == MODE_INT && mode_width <= HOST_BITS_PER_WIDE_INT (num_sign_bit_copies () == GET_MODE_BITSIZE () (GET_MODE_SIZE () < mode_width (GET_MODE_MASK () & GET_MODE_MASK () (num_sign_bit_copies () == GET_MODE_BITSIZE () (nonzero_bits () & GET_MODE_MASK () (XEXP (), mode (GET_MODE () != VOIDmode (GET_MODE () (XEXP (), mode (GET_MODE () != VOIDmode (GET_MODE () (inner_nz & () (GET_MODE_MASK () & GET_MODE_MASK () (nonzero_bits () & nonzero_bits () (nonzero_bits () | nonzero_bits () (XEXP (), mode (XEXP (), mode (nz0 (nz1 (nz0 & - nz0 (nz1 & - nz1 (nz0 & () (nz1 & () (code (width0, width1 (low0, low1 (low0, low1 ( ! op0_maybe_minusp && ! op1_maybe_minusp ( ! op0_maybe_minusp && ! op1_maybe_minusp (width0, width1 (low0, low1 (width0, width1 (low0, low1 (result_width < mode_width (() 1 << result_width (result_low > 0 (() - 1 (GET_CODE () == CONST_INT && INTVAL () < HOST_BITS_PER_WIDE_INT (() 1 << INTVAL () (SUBREG_PROMOTED_VAR_P () && SUBREG_PROMOTED_UNSIGNED_P () (GET_MODE_MASK () & nonzero_bits () (GET_MODE_BITSIZE () <= BITS_PER_WORD && () (SUBREG_REG (), mode (GET_MODE_SIZE () > GET_MODE_SIZE () (GET_MODE_MASK () & GET_MODE_MASK () (GET_CODE () == CONST_INT && INTVAL () >= 0 && INTVAL () < HOST_BITS_PER_WIDE_INT (x (inner_mode (XEXP () (inner_mode (XEXP (), mode (mode_width > width (op_nonzero & nonzero & mode_mask (code == LSHIFTRT (code == ASHIFTRT (inner & () (() - 1 (width - count (code == ASHIFT (() & mode_mask (outer | inner (() 1 << () (nonzero_bits () | nonzero_bits () (x, mode (x (mode == VOIDmode (x (mode == VOIDmode || FLOAT_MODE_P () || FLOAT_MODE_P () (mode (bitwidth < GET_MODE_BITSIZE () (1, () (GET_MODE () != VOIDmode && bitwidth > GET_MODE_BITSIZE () (code ( ! POINTERS_EXTEND_UNSIGNED && GET_MODE () == Pmode && mode == Pmode && REGNO_POINTER_FLAG () (Pmode (ptr_mode (reg_last_set_value[REGNO ()] != 0 && reg_last_set_mode[REGNO ()] == mode && () && INSN_CUID () < subst_low_cuid (x (x (tem != 0 (tem, mode (nonzero_sign_valid && reg_sign_bit_copies[REGNO ()] != 0 (x (LOAD_EXTEND_OP () == SIGN_EXTEND (1, bitwidth - GET_MODE_BITSIZE () + 1 (x (mode (bitwidth <= HOST_BITS_PER_WIDE_INT && () != 0 (nonzero (mode (nonzero == 0 bitwidth bitwidth - floor_log2 () - 1 (SUBREG_PROMOTED_VAR_P () && ! SUBREG_PROMOTED_UNSIGNED_P () (bitwidth - GET_MODE_BITSIZE () + 1, num_sign_bit_copies () (bitwidth <= GET_MODE_BITSIZE () (SUBREG_REG (), VOIDmode (1, () (() && LOAD_EXTEND_OP () == SIGN_EXTEND (SUBREG_REG (), mode (GET_CODE () == CONST_INT (1, bitwidth - INTVAL () (bitwidth - GET_MODE_BITSIZE () + num_sign_bit_copies () (XEXP (), VOIDmode (1, () (XEXP (), mode (GET_CODE () == CONST_INT && INTVAL () >= 0 && INTVAL () < bitwidth (XEXP (), mode (1, num0 - () (XEXP (), mode (nonzero == 1 (XEXP (), mode (num0 > 1 && bitwidth <= HOST_BITS_PER_WIDE_INT && () (XEXP (), mode (XEXP (), mode (num0, num1 (code == PLUS && XEXP () == constm1_rtx && bitwidth <= HOST_BITS_PER_WIDE_INT (XEXP (), mode (() == 0 (nonzero == 1 || nonzero == 0 bitwidth bitwidth - floor_log2 () - 1 (XEXP (), mode (XEXP (), mode (1, MIN () - 1 (XEXP (), mode (XEXP (), mode (bitwidth - num0 (bitwidth - num1 (result > 0 && bitwidth <= HOST_BITS_PER_WIDE_INT && () && () (1, result (XEXP (), mode (XEXP (), mode (XEXP (), mode (result > 1 && bitwidth <= HOST_BITS_PER_WIDE_INT && () != 0 (XEXP (), mode (result > 1 && bitwidth <= HOST_BITS_PER_WIDE_INT && () != 0 (XEXP (), mode (GET_CODE () == CONST_INT && INTVAL () > 0 (bitwidth, num0 + INTVAL () (GET_CODE () != CONST_INT || INTVAL () < 0 || INTVAL () >= bitwidth (XEXP (), mode (1, num0 - INTVAL () (XEXP (), mode (XEXP (), mode (num0, num1 (bitwidth > HOST_BITS_PER_WIDE_INT (x, mode (nonzero & () 1 bitwidth - floor_log2 () - 1 (x, mode, unsignedp (nonzero_sign_valid == 0 (unsignedp () num_sign_bit_copies () - 1 (pop0, pconst0, op1, const1, mode, pcomp_p (mode (mode (mode (op0 == AND (op1 == NIL || op0 == SET (op0 == NIL (op0 == op1 (op0 (op0 == PLUS || op1 == PLUS || op0 == NEG || op1 == NEG (const0 != const1 (op0 (op1 == AND (op1 == AND (op1 == IOR (mode (const0 == 0 && () (const0 == 0 && op0 == AND (const0 == GET_MODE_MASK () && op0 == AND (BITS_PER_WORD < HOST_BITS_PER_WIDE_INT && BITS_PER_WORD == width && () (() () << width (x, code, result_mode, varop, count (GET_MODE_SIZE () + () (count < 0 || count > GET_MODE_BITSIZE () (x (code, mode, varop, GEN_INT () (count != 0 (GET_CODE () == CLOBBER (complement_p (code == ROTATERT (result_mode (code == ASHIFTRT || code == LSHIFTRT || code == ROTATE result_mode mode (count > GET_MODE_BITSIZE () - 1 (code == ASHIFTRT (shift_mode (code == ROTATE || code == ROTATERT (shift_mode (count < 0 ((code == ASHIFTRT && () (code == ASHIFTRT && () (shift_mode (GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT && code == ASHIFTRT && () (GET_CODE () (varop (new != varop (() && ! mode_dependent_address_p () && ! MEM_VOLATILE_P () && () != BLKmode (BYTES_BIG_ENDIAN (MEM, tmode, XEXP () (MEM, tmode, plus_constant () (new (varop (new (varop (new (varop (code == ASHIFTRT SIGN_EXTEND ZERO_EXTEND, mode, new (() && () != BLKmode && tmode == GET_MODE () (BITS_BIG_ENDIAN (varop, 0 (XEXP () (XEXP (), plus_constant () (code == ASHIFTRT SIGN_EXTEND ZERO_EXTEND, mode, new (subreg_lowpart_p () && () && () (varop (GET_MODE_SIZE () > GET_MODE_SIZE () (varop (GET_CODE () == CONST_INT && exact_log2 () >= 0 (ASHIFT, GET_MODE (), XEXP (), GEN_INT () (GET_CODE () == CONST_INT && exact_log2 () >= 0 (LSHIFTRT, GET_MODE (), XEXP (), GEN_INT () (code == LSHIFTRT && count == GET_MODE_BITSIZE () - 1 (varop, 0 (GET_CODE () == CONST_INT && INTVAL () >= 0 && INTVAL () < GET_MODE_BITSIZE () && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT (varop (XEXP () (code == ASHIFT && first_code == ASHIFTRT && () == count (GET_MODE_MASK () & () (NULL_RTX, result_mode, XEXP (), mask (NULL_RTX, ASHIFT, result_mode, varop, count (code == ASHIFTRT && first_code == ASHIFT && GET_MODE () == shift_mode && () (count < 0 (varop, 0 (code == first_code (GET_MODE () != result_mode && () (varop, 0 (code == ASHIFTRT || () || GET_MODE_BITSIZE () > HOST_BITS_PER_WIDE_INT || () (nonzero_bits () (code, result_mode, mask_rtx, GEN_INT () (mask_rtx == 0 || GET_CODE () != CONST_INT || ! merge_outer_ops () (() == () (count > 0 && () (count < 0 (varop, 0 (GET_CODE () == code && GET_CODE () != CONST_INT && 0 != () (code, mode, new, XEXP () (XOR, mode, XEXP (), GEN_INT () (GET_CODE () == IOR && GET_CODE () == PLUS && XEXP () == constm1_rtx && () && () && count == GET_MODE_BITSIZE () - 1 && rtx_equal_p () (LE, GET_MODE (), XEXP (), const0_rtx (STORE_FLAG_VALUE == 1 code == ASHIFTRT code == LSHIFTRT (NEG, GET_MODE (), varop (GET_CODE () == CONST_INT && () != 0 && GET_CODE () == CONST_INT && merge_outer_ops () (varop, 0 (NULL_RTX, code, shift_mode, XEXP (), count (NULL_RTX, code, shift_mode, XEXP (), count (GET_CODE (), shift_mode, lhs, rhs (varop (code == LSHIFTRT && XEXP () == const0_rtx && GET_MODE () == result_mode && count == GET_MODE_BITSIZE () - 1 && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT && () && nonzero_bits () == 1 && merge_outer_ops () (varop, 0 (code == LSHIFTRT && count == GET_MODE_BITSIZE () - 1 && nonzero_bits () == 1 (varop, 0 (code == ASHIFT && merge_outer_ops () (varop, 0 (code == LSHIFTRT && count == GET_MODE_BITSIZE () - 1 && XEXP () == constm1_rtx && nonzero_bits () == 1 && merge_outer_ops () (varop, 0 (() && count < HOST_BITS_PER_WIDE_INT && nonzero_bits () >> count == 0 && () == 0 (varop, 0 (() && count < HOST_BITS_PER_WIDE_INT && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT && 0 == () && 0 == () (varop, 1 (code == ASHIFT && GET_CODE () == CONST_INT && () != 0 && GET_CODE () == CONST_INT && merge_outer_ops () (varop, 0 (GET_CODE () == ASHIFTRT && count == GET_MODE_BITSIZE () - 1 && () && () && GET_CODE () == CONST_INT && INTVAL () == count && rtx_equal_p () (GT, GET_MODE (), XEXP (), const0_rtx (STORE_FLAG_VALUE == 1 code == ASHIFTRT code == LSHIFTRT (NEG, GET_MODE (), varop (code == ASHIFTRT || code == LSHIFTRT || code == ROTATE result_mode mode (x && GET_RTX_CLASS () == && GET_CODE () == CONST_INT && INTVAL () == count (x, 1 (count (x && GET_CODE () == SUBREG && GET_MODE () == shift_mode && SUBREG_REG () == varop (x, 0 (GET_MODE () != shift_mode (shift_mode, varop (GET_CODE () == CLOBBER (code, shift_mode, varop, const_rtx (new != 0 (x == 0 || GET_CODE () != code || GET_MODE () != shift_mode (code, shift_mode, varop, const_rtx (XEXP (), varop (XEXP (), const_rtx (outer_op != NIL && GET_CODE () == code && GET_CODE () == CONST_INT (x, code, shift_mode, XEXP (), INTVAL () (orig_code == LSHIFTRT && result_mode != shift_mode (NULL_RTX, shift_mode, x, GET_MODE_MASK () >> orig_count (result_mode, x (complement_p (NOT, result_mode, result_mode, x (outer_op != NIL (GET_MODE_BITSIZE () < HOST_BITS_PER_WIDE_INT (result_mode (result_mode (BITS_PER_WORD < HOST_BITS_PER_WIDE_INT && BITS_PER_WORD == width && () (() () << width (outer_op == AND (NULL_RTX, result_mode, x, outer_const (outer_op == SET (outer_const (GET_RTX_CLASS () == (outer_op, result_mode, result_mode, x (outer_op, result_mode, x, GEN_INT () (pnewpat, insn, pnotes, padded_scratches (GET_CODE () == PARALLEL (i XVECLEN () - 1 i >= 0 i -- (GET_CODE () == CLOBBER && XEXP () == const0_rtx (pat, insn, & num_clobbers_to_add (insn_code_number < 0 && ! check_asm_operands () && GET_CODE () == PARALLEL (pos 0, i 0 i < XVECLEN () i ++ (GET_CODE () != CLOBBER (i != pos (XVECEXP (), XVECEXP () (XVECLEN (), pos (pos == 1 (pat, 0, 0 (pat, insn, & num_clobbers_to_add (num_clobbers_to_add (PARALLEL, VOIDmode, gen_rtvec () (GET_CODE () == PARALLEL (i 0 i < XVECLEN () i ++ (newpat, 0, i (pat, 0, i (newpat, 0, 0 (newpat, insn_code_number (i XVECLEN () - num_clobbers_to_add i < XVECLEN () i ++ (GET_CODE () == REG && ! reg_dead_at_p () (GET_CODE () == SCRATCH (*padded_scratches (EXPR_LIST, REG_UNUSED, XEXP (), notes (mode, x (GET_MODE () == mode (GET_MODE_SIZE () > UNITS_PER_WORD && ! () (CLOBBER, GET_MODE (), const0_rtx (GET_CODE () == SUBREG && GET_CODE () == MEM (x (GET_MODE () == mode (mode, x (result != 0 && GET_CODE () == SUBREG && GET_CODE () == REG && REGNO () >= FIRST_PSEUDO_REGISTER && () (SUBREG_REG () (result (GET_CODE () == MEM (MEM_VOLATILE_P () || mode_dependent_address_p () (CLOBBER, GET_MODE (), const0_rtx (GET_MODE_SIZE () < GET_MODE_SIZE () (SUBREG, mode, x, 0 (WORDS_BIG_ENDIAN (MAX () - MAX () (BYTES_BIG_ENDIAN (MIN () - MIN () (MEM, mode, plus_constant () (new (x (new (x (new (x (GET_RTX_CLASS () == (GET_CODE (), mode, XEXP (), XEXP () (WORDS_BIG_ENDIAN && GET_MODE_SIZE () > UNITS_PER_WORD (() / UNITS_PER_WORD (SUBREG, mode, x, word (() (p, mode (p, enum rtx_code (p, enum machine_mode (code (code (n_args == 0 || n_args > 3 ((j 0 j < n_args j ++ (*fmt ++ != ((p, rtx (i previous_num_undos i < undobuf num_undo i ++ ( ! undobuf undo[i]is_int && GET_CODE () == code && GET_MODE () == mode (j 0 j < n_args j ++ (XEXP () != args[j](j == n_args (code (rt, mode (rt, 0 (n_args > 1 (rt, 1 (n_args > 2 (rt, 2 (code, mode, op0, op1 (GET_RTX_CLASS () == && () (GET_RTX_CLASS () == (op0 (GET_CODE () == COMPARE && op1 == const0_rtx (op0, 1 (op0, 0 (op0 (op_mode == VOIDmode (op1 (code, op_mode, op0, op1 (code, mode, op0, op1 (result (GET_RTX_CLASS () == && () (code, mode, op1, op0 (code, mode, op0, op1 (code, mode, op0_mode, op0 (code, mode, op0, op0_mode (result (code, mode, op0 (code, pop0, pop1 (1 (code != GTU && code != GEU && code != LTU && code != LEU && GET_CODE () == ASHIFTRT && GET_CODE () == ASHIFTRT && GET_CODE () == ASHIFT && GET_CODE () == ASHIFT && GET_CODE () == SUBREG && GET_CODE () == SUBREG && () && GET_CODE () == CONST_INT && GET_CODE () == CONST_INT && GET_CODE () == CONST_INT && GET_CODE () == CONST_INT && INTVAL () == INTVAL () && INTVAL () == INTVAL () && INTVAL () == INTVAL () && () (XEXP () (XEXP () (GET_CODE () == GET_CODE () && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT && () && GET_CODE () == CONST_INT && INTVAL () >= 0 && INTVAL () < HOST_BITS_PER_WIDE_INT && XEXP () == XEXP () (op0 (mode (XEXP () (GET_CODE () == LSHIFTRT || GET_CODE () == ASHIFTRT (mask >> shift_count (GET_CODE () == ASHIFT (mask & () (() == 0 && () == 0 (op0, 0 (op1, 0 (GET_CODE () == AND && GET_CODE () == AND && GET_CODE () == CONST_INT && GET_CODE () == CONST_INT (op0, 0 (op1, 0 (XEXP () (XEXP () (GET_CODE () == SUBREG && GET_CODE () == SUBREG && () && () && () && () && () (inner_op0 (inner_op1 (code (c0 == c1 (tmode GET_CLASS_NARROWEST_MODE () tmode != GET_MODE () tmode GET_MODE_WIDER_MODE () (c0 == GET_MODE_MASK () (tmode, inner_op0 (tmode, inner_op1 (code ( ! changed (() || () (op0, 0 (op1, 0 (code (CONSTANT_P () (code (GET_CODE () == CONST_INT (op0 (mode (mode (GET_MODE_CLASS () != MODE_INT && ! () (op1 (mode_width <= HOST_BITS_PER_WIDE_INT (const_op && () && mode_width <= HOST_BITS_PER_WIDE_INT && exact_log2 () >= 0 && nonzero_bits () == const_op (code == EQ || code == GE || code == GEU NE EQ (const_op == -1 && () && num_sign_bit_copies () == mode_width (code == EQ || code == LE || code == GEU NE EQ (code (const_op > 0 (const_op (const_op < 0 (const_op (const_op == 0 && mode_width <= HOST_BITS_PER_WIDE_INT && () == 0 (const_op > 0 (const_op (const_op < 0 (const_op (const_op == 0 && mode_width <= HOST_BITS_PER_WIDE_INT && () == 0 (const_op > 0 (const_op (const_op == () 1 << () (const_op == 0 (const_op == () - 1 (const_op > 1 (const_op (const_op == () 1 << () (const_op == 0 (const_op == () - 1 (code == EQ || code == NE (() && const_op == 0 (code == LTU || code == LEU || code == GTU || code == LEU (sign_bit_comparison_p && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT (op0, mode, (), NULL_RTX, 0 (GET_CODE () (GET_CODE () == CONST_INT && XEXP () == const1_rtx && equality_comparison_p && const_op == 0 && () >= 0 && () (BITS_BIG_ENDIAN (GET_MODE_BITSIZE () - 1 - i (op0, 2 (i (code (op0 (tem != op0 (equality_comparison_p && () != 0 (op0, 0 (sign_bit_comparison_p (op0, 0 (code == GE LT GE (equality_comparison_p && () != 0 (op0, 0 (const_op != 0 (sign_bit_comparison_p && () (op0, 0 (code == LT NE EQ (num_sign_bit_copies () >= 2 (op0, 0 (code (equality_comparison_p && GET_CODE () == CONST_INT && () != 0 (op0, 0 (const_op == 0 && sign_bit_comparison_p && GET_CODE () == CONST_INT && mode_width <= HOST_BITS_PER_WIDE_INT (NULL_RTX, mode, XEXP (), () (code == LT NE EQ (const_op == 0 && equality_comparison_p (op0, 0 ( ! unsigned_comparison_p && () && () (op0, 0 (mode_width <= HOST_BITS_PER_WIDE_INT && subreg_lowpart_p () && GET_CODE () == PLUS && GET_CODE () == CONST_INT && INTVAL () < 0 && () && () const_op < GET_MODE_MASK () / 2 && () (op0 (subreg_lowpart_p () && GET_MODE_BITSIZE () < mode_width (() && () && () (op0, 0 (equality_comparison_p && 0 != () (op0, 0 (const_op == 0 && XEXP () == constm1_rtx && GET_CODE () == ABS && sign_bit_comparison_p (XEXP (), 0 (code == LT EQ NE (equality_comparison_p && 0 != () (op0, 0 (equality_comparison_p && 0 != () (op0, 1 (sign_bit_comparison_p && GET_CODE () == ASHIFTRT && GET_CODE () == CONST_INT && INTVAL () == mode_width - 1 && rtx_equal_p () (op0, 1 (code == GE LE GT (equality_comparison_p && 0 != () (op0, 0 (const_op != 0 || XEXP () == cc0_rtx || GET_MODE_CLASS () == MODE_CC (GET_CODE () == COMPARE (XEXP (), 0 (XEXP (), 1 (op0, 0 (op0, 1 (code == NE || () || () (code == LT || code == NE GET_CODE () reverse_condition () (sign_bit_comparison_p && GET_CODE () == PLUS && XEXP () == constm1_rtx && rtx_equal_p () (op0, 1 (code == GE GT LE (const_op == 0 && equality_comparison_p && GET_CODE () == ASHIFT && XEXP () == const1_rtx (op0, mode, gen_rtx_combine (), () 1 (const_op == 0 && equality_comparison_p && mode_width <= HOST_BITS_PER_WIDE_INT && GET_CODE () == CONST_INT && GET_CODE () == LSHIFTRT && GET_CODE () == CONST_INT && INTVAL () >= 0 && INTVAL () < HOST_BITS_PER_WIDE_INT (() << INTVAL () (() == 0 && () (XEXP (), 0 (equality_comparison_p && const_op == 0 && GET_CODE () == CONST_INT && mode_width <= HOST_BITS_PER_WIDE_INT && () (op0, 0 (code == EQ GE LT (() && GET_CODE () == CONST_INT && () >= 0 && const_op >> i == 0 && () != BLKmode (tmode, XEXP () (GET_CODE () == CONST_INT && INTVAL () >= 0 && () && () && mode_width <= HOST_BITS_PER_WIDE_INT && () == 0 (XEXP () (const_op (op0, 0 (sign_bit_comparison_p && GET_CODE () == CONST_INT && mode_width <= HOST_BITS_PER_WIDE_INT (NULL_RTX, mode, XEXP (), () (code == LT NE EQ (const_op == 0 && equality_comparison_p && GET_CODE () == CONST_INT && INTVAL () == mode_width - 1 (NULL_RTX, mode, XEXP (), () 1 (equality_comparison_p && const_op == 0 && GET_CODE () == CONST_INT (NULL_RTX, LSHIFTRT, mode, XEXP (), INTVAL () ( ! unsigned_comparison_p && GET_CODE () == CONST_INT && GET_CODE () == ASHIFT && XEXP () == XEXP () && () != BLKmode && () (tmode, XEXP () (GET_CODE () == CONST_INT && INTVAL () >= 0 && INTVAL () < HOST_BITS_PER_WIDE_INT && mode_width <= HOST_BITS_PER_WIDE_INT && () == 0 && () (XEXP () (const_op (op0, 0 (const_op == 0 && () && GET_CODE () == CONST_INT && INTVAL () == mode_width - 1 (op0, 0 (code == NE || code == GT LT GE (op0, op1 == const0_rtx COMPARE SET (op1, SET (GET_CODE () == SUBREG && subreg_lowpart_p () && GET_MODE_CLASS () == MODE_INT && () && () (op0 (GET_MODE (), op1 (GET_CODE () == SUBREG && subreg_lowpart_p () && GET_MODE_CLASS () == MODE_INT && () && () && () == 0 && () (op0 (op0 (mode != VOIDmode && GET_MODE_CLASS () == MODE_INT && GET_MODE_SIZE () < UNITS_PER_WORD && cmp_optab handlers[() mode]insn_code == CODE_FOR_nothing (tmode GET_MODE_WIDER_MODE () () tmode GET_MODE_WIDER_MODE () (cmp_optab handlers[() tmode]insn_code != CODE_FOR_nothing (() || () (tmode, op0 (tmode, op1 (op1 == const0_rtx && () && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT (AND, tmode, gen_lowpart_for_combine (), GEN_INT () (code == LT (code, op0, op1 (x (TARGET_FLOAT_FORMAT != IEEE_FLOAT_FORMAT || flag_fast_math || GET_CODE () == NE || GET_CODE () == EQ (GET_MODE_CLASS () (REVERSIBLE_CC_MODE () (XEXP () (x && GET_CODE () == COMPARE && ! FLOAT_MODE_P () (x (x (code (code == REG (x (regno < FIRST_PSEUDO_REGISTER HARD_REGNO_NREGS () 1 (i regno i < endregno i ++ (i GET_RTX_LENGTH () - 1 i >= 0 i -- (fmt[i] == (XEXP () (reg, insn, value (reg (regno < FIRST_PSEUDO_REGISTER HARD_REGNO_NREGS () 1 (value && insn && reg_overlap_mentioned_p () (insn (reg (tem (copy_rtx (), reg, tem (i regno i < endregno i ++ (insn (value (value (i regno i < endregno i ++ (value && reg_last_set_table_tick[i] == label_tick (value && ! get_last_value_validate () (value ( ! get_last_value_validate () (value (insn (reg (value, GET_MODE () (value, GET_MODE () (dest, setter (GET_CODE () == SUBREG (dest (GET_CODE () == REG (GET_CODE () == SET && dest == SET_DEST () (dest, record_dead_insn, SET_SRC () (GET_CODE () == SET && GET_CODE () == SUBREG && SUBREG_REG () == dest && GET_MODE_BITSIZE () <= BITS_PER_WORD && subreg_lowpart_p () (dest, record_dead_insn, gen_lowpart_for_combine () (dest, record_dead_insn, NULL_RTX (GET_CODE () == MEM && ! push_operand () (record_dead_insn (insn (link REG_NOTES () link link XEXP () (REG_NOTE_KIND () == REG_DEAD && GET_CODE () == REG (XEXP () (regno < FIRST_PSEUDO_REGISTER HARD_REGNO_NREGS () 1 (i regno i < endregno i ++ (REG_NOTE_KIND () == REG_INC (XEXP (), insn, NULL_RTX (GET_CODE () == CALL_INSN (i 0 i < FIRST_PSEUDO_REGISTER i ++ (call_used_regs[i](insn (PATTERN (), record_dead_and_set_regs_1 (loc, tick, replace (GET_CODE () (GET_CODE () (GET_CODE () == REG (x (regno < FIRST_PSEUDO_REGISTER HARD_REGNO_NREGS () 1 (j regno j < endregno j ++ (reg_last_set_invalid[j] || () (replace (CLOBBER, GET_MODE (), const0_rtx (i 0 i < len i ++ (() || fmt[i] == (x (GET_CODE () == SUBREG && subreg_lowpart_p () && () && () != 0 (GET_MODE (), value (GET_CODE () != REG (x (value == 0 || () (INSN_CUID () >= subst_low_cuid (subst_prev_insn (insn prev_nonnote_insn () insn && () insn prev_nonnote_insn () (insn && () != 0 && rtx_equal_p () (set (reg_mentioned_p () (copy_rtx (), x, gen_rtx () (reg_overlap_mentioned_p () (get_last_value_validate () (value (get_last_value_validate () (x, from_cuid (x (code == REG (x (regno < FIRST_PSEUDO_REGISTER HARD_REGNO_NREGS () 1 (regno == STACK_POINTER_REGNUM (regno < endreg regno ++ (reg_last_set[regno] && INSN_CUID () > from_cuid (code == MEM && mem_last_set > from_cuid (code (i GET_RTX_LENGTH () - 1 i >= 0 i -- (fmt[i] == (j XVECLEN () - 1 j >= 0 j -- (use_crosses_set_p () (fmt[i] == && use_crosses_set_p () (dest, x (GET_CODE () != REG (dest (regno < FIRST_PSEUDO_REGISTER HARD_REGNO_NREGS () 1 (reg_dead_endregno > regno && reg_dead_regno < endregno (GET_CODE () == CLOBBER (reg, insn (reg (reg_dead_regno < FIRST_PSEUDO_REGISTER HARD_REGNO_NREGS () 1 (reg_dead_regno < FIRST_PSEUDO_REGISTER (i reg_dead_regno i < reg_dead_endregno i ++ (TEST_HARD_REG_BIT () (insn && GET_CODE () != CODE_LABEL && GET_CODE () != BARRIER insn prev_nonnote_insn () (PATTERN (), reg_dead_at_p_1 (reg_dead_flag (find_regno_note () (insn == 0 (block 0 block < n_basic_blocks block ++ (insn == basic_block_head[block](block == n_basic_blocks (i reg_dead_regno i < reg_dead_endregno i ++ (basic_block_live_at_start[block][i / REGSET_ELT_BITS] & () (x (x (code (GET_CODE () == MEM (XEXP () (x (regno < FIRST_PSEUDO_REGISTER (regno == STACK_POINTER_REGNUM || regno == HARD_FRAME_POINTER_REGNUM || () || regno == FRAME_POINTER_REGNUM (regno, GET_MODE () (i -- > 0 (newpat_used_regs, regno + i (x (GET_CODE () == SUBREG || GET_CODE () == ZERO_EXTRACT || GET_CODE () == SIGN_EXTRACT || GET_CODE () == STRICT_LOW_PART (testreg, 0 (GET_CODE () == MEM (XEXP () (SET_SRC () (code (i GET_RTX_LENGTH () - 1 i >= 0 i -- (fmt[i] == (XEXP () (fmt[i] == (j 0 j < XVECLEN () j ++ (XVECEXP () (regno, insn (insn, REG_DEAD, regno (note (insn, note (x, from_cuid, to_insn, pnotes (x (code == REG (x (before_dead && INSN_UID () > max_uid_cuid (before_dead (after_dead && INSN_UID () > max_uid_cuid (after_dead (before_dead && after_dead && INSN_CUID () >= from_cuid && () (regno, where_dead (note != 0 && regno < FIRST_PSEUDO_REGISTER && () (XEXP () (deadregno + HARD_REGNO_NREGS () (regno, GET_MODE () (i deadregno i < deadend i ++ (i < regno || i >= ourend (where_dead (EXPR_LIST, REG_DEAD, gen_rtx (), REG_NOTES () (note == 0 && regno < FIRST_PSEUDO_REGISTER && HARD_REGNO_NREGS () > 1 (regno, GET_MODE () (i regno + 1 i < ourend i ++ (gen_rtx (), from_cuid, to_insn, & oldnotes (note != 0 && GET_MODE () == GET_MODE () (note, 1 (EXPR_LIST, REG_DEAD, x, *pnotes (GET_CODE () == SET (x (SET_SRC (), from_cuid, to_insn, pnotes (GET_CODE () == ZERO_EXTRACT || GET_CODE () == STRICT_LOW_PART || () (dest, from_cuid, to_insn, pnotes (GET_CODE () == SUBREG (dest (GET_CODE () == MEM (XEXP (), from_cuid, to_insn, pnotes (GET_CODE () == CLOBBER (code (code (i 0 i < len i ++ (fmt[i] == (j XVECLEN () - 1 j >= 0 j -- (XVECEXP (), from_cuid, to_insn, pnotes (fmt[i] == (XEXP (), from_cuid, to_insn, pnotes (x, body (GET_CODE () == SET (body (GET_CODE () == ZERO_EXTRACT (dest, 0 (GET_CODE () == STRICT_LOW_PART (XEXP () (GET_CODE () == SUBREG (target (GET_CODE () != REG (target (x (tregno >= FIRST_PSEUDO_REGISTER || regno >= FIRST_PSEUDO_REGISTER (tregno, GET_MODE () (regno, GET_MODE () (GET_CODE () == PARALLEL (i XVECLEN () - 1 i >= 0 i -- (reg_bitfield_target_p () (notes, from_insn, i3, i2, elim_i2, elim_i1 (note notes note note next_note (XEXP () && GET_CODE () == REG && REGNO () >= FIRST_PSEUDO_REGISTER (note, 0 (XEXP () (note, 1 (REG_NOTE_KIND () (reg_set_p () (from_insn != i3 ( ! () (reg_referenced_p () && ! () (note, REG_DEAD (from_insn == i3 && () (reg_mentioned_p () (i2 && reg_mentioned_p () (place (GET_CODE () != NOTE (XEXP (), REG_LIBCALL, NULL_RTX (from_insn (tem && place (tem, 0 (GET_CODE () != NOTE (XEXP (), REG_RETVAL, NULL_RTX (from_insn (tem && place (tem, 0 (from_insn && GET_CODE () == CALL_INSN && find_reg_fusage () (reg_referenced_p () (i2 != 0 && next_nonnote_insn () == i3 && reg_referenced_p () (XEXP () == elim_i2 || XEXP () == elim_i1 (place == i3 && i2 != 0 && GET_CODE () == REG && reg_n_refs[REGNO ()] == 2 && reg_referenced_p () (XEXP () (place == 0 (tem prev_nonnote_insn () place == 0 && tem && () tem prev_nonnote_insn () (reg_set_p () (tem (set != 0 && ! side_effects_p () && () (tem (REG_NOTES (), tem, tem, NULL_RTX, NULL_RTX, NULL_RTX (LOG_LINKS () (tem, NOTE (tem (tem (note, REG_UNUSED ( ! find_regno_note () (reg_referenced_p () || () (i2 && INSN_UID () <= max_uid_cuid && INSN_CUID () > INSN_CUID () && from_insn && INSN_CUID () > INSN_CUID () && reg_referenced_p () (place (place (links (REG_NOTE_KIND () == REG_DEAD && place == 0 && tem != 0 (gen_rtx (), tem (basic_block_end[this_basic_block - 1] == tem (place && REG_NOTE_KIND () == REG_DEAD (XEXP () (dead_or_set_p () || reg_bitfield_target_p () (reg_last_death[regno] != place (place && regno < FIRST_PSEUDO_REGISTER && HARD_REGNO_NREGS () > 1 (regno, GET_MODE () (i regno i < endregno i ++ ( ! refers_to_regno_p () && ! find_regno_fusage () (REG, reg_raw_mode[i], i (p place GET_CODE () == INSN && GET_CODE () == USE p PREV_INSN () (rtx_equal_p () (p (gen_rtx (), p (use_insn (EXPR_LIST, REG_DEAD, piece, REG_NOTES () (all_used (i regno i < endregno i ++ (dead_or_set_regno_p () ( ! all_used (i regno i < endregno i ++ (REG, reg_raw_mode[i], i (() && ! dead_or_set_p () && ! reg_bitfield_target_p () (place (EXPR_LIST, REG_DEAD, piece, REG_NOTES () ((place (note, 1 (place (place (() && GET_CODE () == REG (XEXP () (place2 (() && GET_CODE () == REG (XEXP () (place2 (GET_CODE (), REG_NOTE_KIND (), XEXP (), REG_NOTES () (links (link links link link next_link (link, 1 (GET_CODE () == NOTE || () == 0 (set (GET_CODE () == SUBREG || GET_CODE () == ZERO_EXTRACT || GET_CODE () == SIGN_EXTRACT || GET_CODE () == STRICT_LOW_PART (reg, 0 (insn NEXT_INSN () () insn NEXT_INSN () (GET_RTX_CLASS () == && reg_overlap_mentioned_p () (reg_referenced_p () (GET_CODE () == CALL_INSN && find_reg_fusage () (place (link2 LOG_LINKS () link2 link2 XEXP () (XEXP () == XEXP () (link2 == 0 (link, 1 (place (place (added_links_insn == 0 || INSN_CUID () > INSN_CUID () (file (file,, combine_attempts, combine_merges, combine_extras, combine_successes (file (file,, total_attempts, total_merges, total_extras, total_successes, <./cc/combine.c 3968>
 3963 																																																														INTVAL: 129
 3964 																																																														COSTS_N_INSNS: <>
 3965 																																																														CHEAP_REG: <>
 3966 																																																														MODES_TIEABLE_P: <>
 3967 																																																														GET_MODE: 139
 3968 																																																														SUBREG_REG: <>
 3969 																																																														GET_MODE_SIZE: 461
 3970 																																																														RTX_COSTS: <>
 3971 																																																														CONST_COSTS: <>
 3972 																																																														GET_RTX_FORMAT: <>
 3973 																																																														GET_RTX_LENGTH: <>
 3974 																																																														rtx_cost: 3959
 3975 																																																														XVECLEN: <>
 3976 																																																														XVECEXP: <>
 3977 																																																													force_reg: <>
 3978 																																																													GET_MODE: 139
 3979 																																																													emit_queue: void (), <./cc/expr.c 530>
 3980 																																																													protect_from_queue: <>
 3981 																																																													abort: <>
 3982 																																																													GET_CODE: 81
 3983 																																																													INTVAL: 129
 3984 																																																													GET_MODE_BITSIZE: 447
 3985 																																																													gen_reg_rtx: 523
 3986 																																																													emit_insn: <>
 3987 																																																													gen_cmpstrqi: <>
 3988 																																																													GEN_INT: <>
 3989 																																																													emit_cmp_insn: 3952
 3990 																																																													gen_cmpstrhi: <>
 3991 																																																													gen_cmpstrsi: <>
 3992 																																																													convert_to_mode: <>
 3993 																																																													emit_library_call: <>
 3994 																																																													TYPE_MODE: <>
 3995 																																																													XEXP: 105
 3996 																																																													hard_libcall_value: <>
 3997 																																																													CONST0_RTX: <>
 3998 																																																													copy_to_mode_reg: <>
 3999 																																																													GEN_FCN: <>
 4000 																																																													GET_MODE_WIDER_MODE: <>
 4001 																																																													convert_modes: <>
 4002 																																																													emit_float_lib_cmp: void (), <./cc/optabs.c 2877>
 4003 																																																														GET_MODE: 139
 4004 																																																														GET_MODE_WIDER_MODE: <>
 4005 																																																														protect_from_queue: <>
 4006 																																																														convert_to_mode: <>
 4007 																																																														emit_float_lib_cmp: 4002
 4008 																																																														abort: <>
 4009 																																																														emit_library_call: <>
 4010 																																																														emit_cmp_insn: 3952
 4011 																																																														hard_libcall_value: <>
 4012 																																																												TYPE_SIZE: if (), <./cc/dwarfout.c 3636>
 4013 																																																												TYPE_ALIGN: <>
 4014 																																																												emit_jump_insn: <>
 4015 																																																												emit_label: <>
 4016 																																																												preserve_temp_slots: <>
 4017 																																																												free_temp_slots: void (), <./cc/function.c 1165>
 4018 																																																												emit_queue: void (), <./cc/expr.c 530>
 4019 																																																											build_modify_expr: <>
 4020 																																																											my_friendly_abort: 357
 4021 																																																											expand_vec_init: 3851
 4022 																																																											array_type_nelts: <>
 4023 																																																											expand_loop_continue_here: void (), <./cc/stmt.c 2195>
 4024 																																																											expand_exit_loop_if_false: int (), <./cc/stmt.c 2390>
 4025 																																																												bc_expand_expr: <>
 4026 																																																												bc_expand_goto_internal: void (), <./cc/stmt.c 840>
 4027 																																																													BYTECODE_BC_LABEL: <>
 4028 																																																													expand_cleanups: <>
 4029 																																																													do_pending_stack_adjust: 3642
 4030 																																																													bc_expand_fixup: void (), <./cc/stmt.c 1044>
 4031 																																																														oballoc: 530
 4032 																																																														bc_get_bytecode_label: struct bc_label * (), <./cc/bc-emit.c 513>
 4033 																																																														bc_emit_bytecode: <>
 4034 																																																														bc_emit_bytecode_labelref: 3631
 4035 																																																														fputc: <>
 4036 																																																													bc_adjust_stack: void (), <./cc/expr.c 10899>
 4037 																																																														bc_emit_instruction: <>
 4038 																																																														VALIDATE_STACK_FOR_BC: <>
 4039 																																																													DECL_BIT_FIELD: if (), <./cc/cp/typeck.c 3863>
 4040 																																																													IDENTIFIER_POINTER: <>
 4041 																																																													DECL_NAME: 250
 4042 																																																													bc_emit_bytecode: <>
 4043 																																																													bc_emit_bytecode_labelref: 3631
 4044 																																																													fputc: <>
 4045 																																																												BYTECODE_BC_LABEL: <>
 4046 																																																												gen_label_rtx: rtx (), <./cc/emit-rtl.c 1327>
 4047 																																																												do_jump: 3637
 4048 																																																												get_last_insn: 1981
 4049 																																																												GET_CODE: 81
 4050 																																																												expand_goto_internal: void (), <./cc/stmt.c 766>
 4051 																																																													expand_goto_internal: 4050
 4052 																																																													GET_CODE: 81
 4053 																																																													abort: <>
 4054 																																																													PREV_INSN: <>
 4055 																																																													INSN_UID: <>
 4056 																																																													expand_cleanups: <>
 4057 																																																													do_pending_stack_adjust: 3642
 4058 																																																													clear_pending_stack_adjust: void (), <./cc/expr.c 8925>
 4059 																																																														DECL_INLINE: if (), <./cc/dwarfout.c 2737>
 4060 																																																													emit_stack_restore: <>
 4061 																																																													DECL_TOO_LATE: <>
 4062 																																																													IDENTIFIER_POINTER: <>
 4063 																																																													DECL_NAME: 250
 4064 																																																													expand_fixup: int (), <./cc/stmt.c 924>
 4065 																																																														oballoc: 530
 4066 																																																														do_pending_stack_adjust: 3642
 4067 																																																														get_last_insn: 1981
 4068 																																																														start_sequence: void (), <./cc/emit-rtl.c 2919>
 4069 																																																														pushlevel: 1896
 4070 																																																														emit_note: 170
 4071 																																																														poplevel: 1949
 4072 																																																														end_sequence: 479
 4073 																																																														emit_insns_after: <>
 4074 																																																														tree_cons: <>
 4075 																																																													TREE_ADDRESSABLE: <>
 4076 																																																													emit_jump: 3641
 4077 																																																												emit_label: <>
 4078 																																																											expand_end_loop: void (), <./cc/stmt.c 2231>
 4079 																																																												bc_expand_end_loop: void (), <./cc/stmt.c 2210>
 4080 																																																													bc_emit_bytecode: <>
 4081 																																																													bc_emit_bytecode_labelref: 3631
 4082 																																																													BYTECODE_BC_LABEL: <>
 4083 																																																													fputc: <>
 4084 																																																													bc_emit_bytecode_labeldef: int (), <./cc/bc-emit.c 528>
 4085 																																																														bc_new_uid: int (), <./cc/stmt.c 5165>
 4086 																																																														fprintf: <>
 4087 																																																													POPSTACK: <>
 4088 																																																												get_last_insn: 1981
 4089 																																																												emit_note_before: rtx (), <./cc/emit-rtl.c 2439>
 4090 																																																												do_pending_stack_adjust: 3642
 4091 																																																												GET_CODE: 81
 4092 																																																												PATTERN: <>
 4093 																																																												SET_DEST: 87
 4094 																																																												SET_SRC: 484
 4095 																																																												NEXT_INSN: <>
 4096 																																																												NOTE_LINE_NUMBER: 177
 4097 																																																												XEXP: 105
 4098 																																																												gen_label_rtx: rtx (), <./cc/emit-rtl.c 1327>
 4099 																																																												PREV_INSN: <>
 4100 																																																												emit_label_after: <>
 4101 																																																												reorder_insns: <>
 4102 																																																												emit_jump_insn_after: <>
 4103 																																																												gen_jump: <>
 4104 																																																												emit_barrier_after: <>
 4105 																																																												emit_jump: 3641
 4106 																																																												emit_note: 170
 4107 																																																												emit_label: <>
 4108 																																																												POPSTACK: <>
 4109 																																																											end_protect: void (), <./cc/cp/except.c 717>
 4110 																																																												doing_eh: 3912
 4111 																																																												pop_eh_entry: <>
 4112 																																																												emit_label: <>
 4113 																																																												emit_insn: <>
 4114 																																																												gen_nop: <>
 4115 																																																												enqueue_eh_entry: <>
 4116 																																																											build_array_eh_cleanup: tree (), <./cc/cp/init.c 3488>
 4117 																																																												build_vec_delete_1: 3405
 4118 																																																											build_binary_op: 164
 4119 																																																											expand_end_cond: void (), <./cc/stmt.c 2062>
 4120 																																																												bc_expand_end_cond: void (), <./cc/stmt.c 2110>
 4121 																																																													bc_emit_bytecode_labeldef: 4084
 4122 																																																													BYTECODE_BC_LABEL: <>
 4123 																																																												do_pending_stack_adjust: 3642
 4124 																																																												emit_label: <>
 4125 																																																												POPSTACK: <>
 4126 																																																										array_type_nelts: <>
 4127 																																																										comptypes: 1133
 4128 																																																										TREE_USED: <>
 4129 																																																										TYPE_HAS_CONSTRUCTOR: else if (), <./cc/cp/typeck.c 5733>
 4130 																																																										CONSTRUCTOR_ELTS: <>
 4131 																																																										expand_aggr_init_1: void (), <./cc/cp/init.c 1296>
 4132 																																																											TREE_TYPE: 160
 4133 																																																											my_friendly_assert: 379
 4134 																																																											TREE_CODE: 162
 4135 																																																											TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 4136 																																																											TREE_VALUE: <>
 4137 																																																											TYPE_MAIN_VARIANT: 324
 4138 																																																											DECL_RTL: <>
 4139 																																																											TREE_OPERAND: <>
 4140 																																																											expand_expr: <>
 4141 																																																											expand_expr_stmt: 3924
 4142 																																																											build: <>
 4143 																																																											TREE_SIDE_EFFECTS: if (), <./cc/cp/typeck.c 4958>
 4144 																																																											TYPE_GETS_INIT_REF: <>
 4145 																																																											convert_from_reference: 3251
 4146 																																																											expand_assignment: <>
 4147 																																																											DECL_RESULT: <>
 4148 																																																											DECL_INITIAL: 168
 4149 																																																											build_modify_expr: <>
 4150 																																																											free_temp_slots: void (), <./cc/function.c 1165>
 4151 																																																											build_unary_op: <>
 4152 																																																											build_pointer_type: 390
 4153 																																																											convert_pointer_to: 381
 4154 																																																											fatal: 49
 4155 																																																											TREE_HAS_CONSTRUCTOR: <>
 4156 																																																											store_init_value: 2543
 4157 																																																											expand_decl_init: <>
 4158 																																																											TYPE_NEEDS_CONSTRUCTING: <>
 4159 																																																											IS_AGGR_TYPE: else if (), <./cc/cp/typeck.c 6140>
 4160 																																																											convert: 427
 4161 																																																											build_compound_expr: <>
 4162 																																																											build_type_conversion: 758
 4163 																																																											build_tree_list: <>
 4164 																																																											TYPE_HAS_CONSTRUCTOR: else if (), <./cc/cp/typeck.c 5733>
 4165 																																																											build_method_call: <>
 4166 																																																											constructor_name_full: <>
 4167 																																																											cp_error: 259
 4168 																																																											expand_default_init: void (), <./cc/cp/init.c 1189>
 4169 																																																												TREE_CODE: 162
 4170 																																																												TREE_TYPE: 160
 4171 																																																												TREE_VALUE: <>
 4172 																																																												TREE_HAS_CONSTRUCTOR: <>
 4173 																																																												TYPE_MAIN_VARIANT: 324
 4174 																																																												convert_for_initialization: <>
 4175 																																																												TREE_USED: <>
 4176 																																																												expand_expr_stmt: 3924
 4177 																																																												build_tree_list: <>
 4178 																																																												TYPE_USES_VIRTUAL_BASECLASSES: <>
 4179 																																																												tree_cons: <>
 4180 																																																												TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 4181 																																																												TYPE_HAS_TRIVIAL_INIT_REF: 2596
 4182 																																																												build: <>
 4183 																																																												TREE_SIDE_EFFECTS: if (), <./cc/cp/typeck.c 4958>
 4184 																																																												build_method_call: <>
 4185 																																																												constructor_name_full: <>
 4186 																																																												cp_error: 259
 4187 																																																												TREE_VIA_VIRTUAL: 1041
 4188 																																																												my_friendly_abort: 357
 4189 																																																												expand_assignment: <>
 4190 																																																											expand_vec_init: 3851
 4191 																																																											array_type_nelts: <>
 4192 																																																											TYPE_VIRTUAL_P: <>
 4193 																																																											sorry: <>
 4194 																																																											expand_recursive_init: void (), <./cc/cp/init.c 1632>
 4195 																																																												build_unary_op: <>
 4196 																																																												TYPE_USES_VIRTUAL_BASECLASSES: <>
 4197 																																																												BINFO_TYPE: <>
 4198 																																																												expand_aggr_vbase_init: void (), <./cc/cp/init.c 764>
 4199 																																																													BINFO_TYPE: <>
 4200 																																																													TYPE_USES_VIRTUAL_BASECLASSES: <>
 4201 																																																													init_vbase_pointers: tree (), <./cc/cp/search.c 2604>
 4202 																																																														TYPE_USES_VIRTUAL_BASECLASSES: <>
 4203 																																																														TYPE_BINFO: if (), <./cc/cp/search.c 454>
 4204 																																																														CLASSTYPE_VBASECLASSES: <>
 4205 																																																														build_indirect_ref: 329
 4206 																																																														dfs_walk: 2050
 4207 																																																														dfs_find_vbases: void (), <./cc/cp/search.c 2524>
 4208 																																																															BINFO_BASETYPES: <>
 4209 																																																															TREE_VEC_LENGTH: <>
 4210 																																																															TREE_VEC_ELT: <>
 4211 																																																															TREE_VIA_VIRTUAL: 1041
 4212 																																																															CLASSTYPE_SEARCH_SLOT: <>
 4213 																																																															BINFO_TYPE: <>
 4214 																																																															binfo_member: 2071
 4215 																																																															build: <>
 4216 																																																															build_pointer_type: 390
 4217 																																																															BINFO_OFFSET: <>
 4218 																																																															SET_BINFO_VTABLE_PATH_MARKED: <>
 4219 																																																															SET_BINFO_NEW_VTABLE_MARKED: <>
 4220 																																																														unmarked_vtable_pathp: int (), <./cc/cp/search.c 2403>
 4221 																																																															BINFO_VTABLE_PATH_MARKED: <>
 4222 																																																														dfs_init_vbase_pointers: 2054
 4223 																																																														marked_vtable_pathp: int (), <./cc/cp/search.c 2399>
 4224 																																																															BINFO_VTABLE_PATH_MARKED: <>
 4225 																																																														dfs_clear_vbase_slots: void (), <./cc/cp/search.c 2594>
 4226 																																																															BINFO_TYPE: <>
 4227 																																																															CLASSTYPE_SEARCH_SLOT: <>
 4228 																																																															CLEAR_BINFO_VTABLE_PATH_MARKED: <>
 4229 																																																															CLEAR_BINFO_NEW_VTABLE_MARKED: <>
 4230 																																																														marked_new_vtablep: int (), <./cc/cp/search.c 2407>
 4231 																																																															BINFO_NEW_VTABLE_MARKED: <>
 4232 																																																													expand_expr_stmt: 3924
 4233 																																																													build_compound_expr: <>
 4234 																																																													CLASSTYPE_VBASECLASSES: <>
 4235 																																																													TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 4236 																																																													purpose_member: 1249
 4237 																																																													expand_aggr_vbase_init_1: void (), <./cc/cp/init.c 747>
 4238 																																																														purpose_member: 1249
 4239 																																																														build_indirect_ref: 329
 4240 																																																														TREE_VALUE: <>
 4241 																																																														expand_aggr_init_1: 4131
 4242 																																																														expand_cleanups_to: void (), <./cc/expr.c 8993>
 4243 																																																															TREE_VALUE: <>
 4244 																																																															expand_expr: <>
 4245 																																																															TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 4246 																																																													TREE_OPERAND: <>
 4247 																																																													TREE_VALUE: <>
 4248 																																																												expand_indirect_vtbls_init: void (), <./cc/cp/search.c 2833>
 4249 																																																													BINFO_TYPE: <>
 4250 																																																													TYPE_USES_VIRTUAL_BASECLASSES: <>
 4251 																																																													CLASSTYPE_VBASECLASSES: <>
 4252 																																																													build_unary_op: <>
 4253 																																																													build_indirect_ref: 329
 4254 																																																													dfs_walk: 2050
 4255 																																																													dfs_find_vbases: 4207
 4256 																																																													unmarked_new_vtablep: int (), <./cc/cp/search.c 2411>
 4257 																																																														BINFO_NEW_VTABLE_MARKED: <>
 4258 																																																													TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 4259 																																																													CLASSTYPE_SEARCH_SLOT: <>
 4260 																																																													convert_pointer_to_vbase: <>
 4261 																																																													TREE_TYPE: 160
 4262 																																																													get_binfo: <>
 4263 																																																													TREE_VIA_VIRTUAL: 1041
 4264 																																																													convert_pointer_to_real: 385
 4265 																																																													expand_direct_vtbls_init: void (), <./cc/cp/init.c 123>
 4266 																																																														BINFO_BASETYPES: <>
 4267 																																																														TREE_VEC_LENGTH: <>
 4268 																																																														TREE_VEC_ELT: <>
 4269 																																																														CLASSTYPE_VFIELD_PARENT: <>
 4270 																																																														BINFO_TYPE: <>
 4271 																																																														TREE_VIA_VIRTUAL: 1041
 4272 																																																														expand_direct_vtbls_init: 4265
 4273 																																																														BINFO_MODIFIED: <>
 4274 																																																														CLASSTYPE_VFIELDS: <>
 4275 																																																														convert_pointer_to_real: 385
 4276 																																																														expand_virtual_init: void (), <./cc/cp/init.c 717>
 4277 																																																															BINFO_TYPE: <>
 4278 																																																															DECL_CONTEXT: 267
 4279 																																																															CLASSTYPE_VFIELD: <>
 4280 																																																															get_binfo: <>
 4281 																																																															TREE_TYPE: 160
 4282 																																																															BINFO_VTABLE: <>
 4283 																																																															binfo_value: tree (), <./cc/cp/tree.c 1261>
 4284 																																																																get_base_distance: <>
 4285 																																																																compiler_error: void (), <./cc/cp/lex.c 5002>
 4286 																																																																	sprintf: <>
 4287 																																																																	error_with_file_and_line: <>
 4288 																																																																TYPE_NAME_STRING: <>
 4289 																																																																TYPE_BINFO: if (), <./cc/cp/search.c 454>
 4290 																																																																TREE_CODE: 162
 4291 																																																																get_binfo: <>
 4292 																																																															DECL_FIELD_CONTEXT: <>
 4293 																																																															assemble_external: <>
 4294 																																																															TREE_USED: <>
 4295 																																																															build1: 334
 4296 																																																															build_pointer_type: 390
 4297 																																																															convert_pointer_to_real: 385
 4298 																																																															build_vfield_ref: <>
 4299 																																																															build_indirect_ref: 329
 4300 																																																															convert_force: 3275
 4301 																																																															expand_expr_stmt: 3924
 4302 																																																															build_modify_expr: <>
 4303 																																																													TYPE_BINFO: if (), <./cc/cp/search.c 454>
 4304 																																																													push_to_sequence: 1978
 4305 																																																													fixup_virtual_upcast_offsets: void (), <./cc/cp/search.c 2784>
 4306 																																																														BINFO_BASETYPES: <>
 4307 																																																														TREE_VEC_LENGTH: <>
 4308 																																																														TREE_VEC_ELT: <>
 4309 																																																														CLASSTYPE_VFIELD_PARENT: <>
 4310 																																																														BINFO_TYPE: <>
 4311 																																																														TREE_VIA_VIRTUAL: 1041
 4312 																																																														fixup_virtual_upcast_offsets: 4305
 4313 																																																														BINFO_MODIFIED: <>
 4314 																																																														CLASSTYPE_VFIELDS: <>
 4315 																																																														convert_pointer_to_real: 385
 4316 																																																														expand_upcast_fixups: void (), <./cc/cp/search.c 2684>
 4317 																																																															BINFO_VIRTUALS: <>
 4318 																																																															purpose_member: 1249
 4319 																																																															CLASSTYPE_SEARCH_SLOT: <>
 4320 																																																															BINFO_TYPE: <>
 4321 																																																															build: <>
 4322 																																																															save_expr: <>
 4323 																																																															tree_cons: <>
 4324 																																																															skip_rtti_stuff: unsigned HOST_WIDE_INT (), <./cc/cp/class.c 2266>
 4325 																																																																TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 4326 																																																															TREE_VALUE: <>
 4327 																																																															FNADDR_FROM_VTABLE_ENTRY: <>
 4328 																																																															TREE_OPERAND: <>
 4329 																																																															virtual_context: tree (), <./cc/cp/search.c 2638>
 4330 																																																																get_base_distance: <>
 4331 																																																																DECL_CLASS_CONTEXT: <>
 4332 																																																																TREE_VIA_VIRTUAL: 1041
 4333 																																																																binfo_member: 2071
 4334 																																																																BINFO_TYPE: <>
 4335 																																																																CLASSTYPE_VBASECLASSES: <>
 4336 																																																																BINFO_INHERITANCE_CHAIN: <>
 4337 																																																															DECL_VINDEX: <>
 4338 																																																															BINFO_VTABLE: <>
 4339 																																																															lookup_name: 1474
 4340 																																																															DECL_NAME: 250
 4341 																																																															IDENTIFIER_GLOBAL_VALUE: <>
 4342 																																																															build_decl: 888
 4343 																																																															TYPE_MAIN_VARIANT: 324
 4344 																																																															TREE_TYPE: 160
 4345 																																																															DECL_ALIGN: <>
 4346 																																																															MAX: <>
 4347 																																																															TYPE_ALIGN: <>
 4348 																																																															TREE_READONLY: if (), <./cc/cp/decl2.c 1229>
 4349 																																																															pushdecl: <>
 4350 																																																															cp_finish_decl: 3002
 4351 																																																															DECL_VIRTUAL_P: if (), <./cc/dwarfout.c 2795>
 4352 																																																															DECL_CONTEXT: 267
 4353 																																																															TREE_SIDE_EFFECTS: if (), <./cc/cp/typeck.c 4958>
 4354 																																																															expand_expr_stmt: 3924
 4355 																																																															build_vfield_ref: <>
 4356 																																																															build_indirect_ref: 329
 4357 																																																															CLASSTYPE_VFIELD: <>
 4358 																																																															build_modify_expr: <>
 4359 																																																															build_unary_op: <>
 4360 																																																															assemble_external: <>
 4361 																																																															build_array_ref: 2645
 4362 																																																															build_component_ref: 159
 4363 																																																															build_binary_op: 164
 4364 																																																															convert_pointer_to_real: 385
 4365 																																																															TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 4366 																																																													get_insns: rtx (), <./cc/emit-rtl.c 1696>
 4367 																																																													end_sequence: 479
 4368 																																																													lookup_name: 1474
 4369 																																																													build_binary_op: 164
 4370 																																																													expand_start_cond: 3624
 4371 																																																													emit_insns: <>
 4372 																																																													expand_end_cond: 4119
 4373 																																																													dfs_clear_vbase_slots: 4225
 4374 																																																													marked_new_vtablep: 4230
 4375 																																																												expand_recursive_init_1: void (), <./cc/cp/init.c 1548>
 4376 																																																													TREE_PURPOSE: 215
 4377 																																																													TREE_CODE: 162
 4378 																																																													build_indirect_ref: 329
 4379 																																																													convert_pointer_to: 381
 4380 																																																													TREE_VALUE: <>
 4381 																																																													build: <>
 4382 																																																													TREE_TYPE: 160
 4383 																																																													IS_AGGR_TYPE: else if (), <./cc/cp/typeck.c 6140>
 4384 																																																													expand_aggr_init: 3843
 4385 																																																													DECL_INITIAL: 168
 4386 																																																													TYPE_NEEDS_CONSTRUCTING: <>
 4387 																																																													save_expr: <>
 4388 																																																													default_conversion: 165
 4389 																																																													expand_vec_init: 3851
 4390 																																																													array_type_nelts: <>
 4391 																																																													expand_expr_stmt: 3924
 4392 																																																													build_modify_expr: <>
 4393 																																																													expand_recursive_init_1: 4375
 4394 																																																													expand_virtual_init: 4276
 4395 																																																													get_binfo: <>
 4396 																																																													TYPE_USES_VIRTUAL_BASECLASSES: <>
 4397 																																																													BINFO_TYPE: <>
 4398 																																																													expand_indirect_vtbls_init: 4248
 4399 																																																													my_friendly_abort: 357
 4400 																																																													expand_aggr_init_1: 4131
 4401 																																																													BINFO_OFFSET_ZEROP: if (), <./cc/cp/call.c 290>
 4402 																																																													TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 4403 																																																												TREE_TYPE: 160
 4404 																																																												TREE_CODE: 162
 4405 																																																												IS_AGGR_TYPE: else if (), <./cc/cp/typeck.c 6140>
 4406 																																																												cp_error: 259
 4407 																																																											CLASSTYPE_BASE_INIT_LIST: <>
 4408 																																																										TYPE_BINFO: if (), <./cc/cp/search.c 454>
 4409 																																																									do_pending_stack_adjust: 3642
 4410 																																																									expand_cleanups_to: 4242
 4411 																																																									expand_end_cond: 4119
 4412 																																																									TYPE_NEEDS_DESTRUCTOR: <>
 4413 																																																									perm_tree_cons: <>
 4414 																																																									TREE_STATIC: if (), <./cc/stor-layout.c 332>
 4415 																																																									pop_obstacks: 396
 4416 																																																									preserve_initializer: 2991
 4417 																																																							maybe_objc_check_decl: 2962
 4418 																																																							TYPE_HAS_CONSTRUCTOR: else if (), <./cc/cp/typeck.c 5733>
 4419 																																																							digest_init: 2175
 4420 																																																							TYPE_NON_AGGREGATE_CLASS: <>
 4421 																																																							cp_error: 259
 4422 																																																							store_init_value: 2543
 4423 																																																							obscure_complex_init: tree (), <./cc/cp/decl.c 6357>
 4424 																																																								TREE_STATIC: if (), <./cc/stor-layout.c 332>
 4425 																																																								extract_init: int (), <./cc/cp/expr.c 356>
 4426 																																																									IS_AGGR_TYPE: else if (), <./cc/cp/typeck.c 6140>
 4427 																																																									TREE_TYPE: 160
 4428 																																																									TREE_CODE: 162
 4429 																																																									extract_aggr_init: tree (), <./cc/cp/expr.c 298>
 4430 																																																									extract_scalar_init: tree (), <./cc/cp/expr.c 305>
 4431 																																																										push_obstacks: 392
 4432 																																																										start_sequence: void (), <./cc/emit-rtl.c 2919>
 4433 																																																										expand_expr: <>
 4434 																																																										get_insns: rtx (), <./cc/emit-rtl.c 1696>
 4435 																																																										end_sequence: 479
 4436 																																																										reg_scan: void (), <./cc/regclass.c 1731>
 4437 																																																											oballoc: 530
 4438 																																																											bzero: <>
 4439 																																																											NEXT_INSN: <>
 4440 																																																											GET_CODE: 81
 4441 																																																											PATTERN: <>
 4442 																																																											XVECLEN: <>
 4443 																																																											reg_scan_mark_refs: void (), <./cc/regclass.c 1779>
 4444 																																																												GET_CODE: 81
 4445 																																																												REGNO: 93
 4446 																																																												INSN_UID: <>
 4447 																																																												XEXP: 105
 4448 																																																												reg_scan_mark_refs: 4443
 4449 																																																												SET_DEST: 87
 4450 																																																												REG_USERVAR_P: <>
 4451 																																																												REGNO_POINTER_FLAG: <>
 4452 																																																												SET_SRC: 484
 4453 																																																												find_reg_note: <>
 4454 																																																												GET_RTX_FORMAT: <>
 4455 																																																												GET_RTX_LENGTH: <>
 4456 																																																												XVEC: <>
 4457 																																																												XVECLEN: <>
 4458 																																																												XVECEXP: <>
 4459 																																																											REG_NOTES: <>
 4460 																																																										max_reg_num: int (), <./cc/emit-rtl.c 532>
 4461 																																																										jump_optimize: void (), <./cc/jump.c 138>
 4462 																																																											NEXT_INSN: <>
 4463 																																																											GET_CODE: 81
 4464 																																																											LABEL_NUSES: <>
 4465 																																																											LABEL_PRESERVE_P: <>
 4466 																																																											JUMP_LABEL: 3730
 4467 																																																											REG_NOTES: <>
 4468 																																																											XEXP: 105
 4469 																																																											REG_NOTE_KIND: switch (), <./cc/sched.c 4292>
 4470 																																																											reg_mentioned_p: else if (), <./cc/loop.c 5796>
 4471 																																																											PATTERN: <>
 4472 																																																											remove_note: <>
 4473 																																																											INSN_UID: <>
 4474 																																																											NOTE_LINE_NUMBER: 177
 4475 																																																											delete_insn: <>
 4476 																																																											alloca: <>
 4477 																																																											bzero: <>
 4478 																																																											GET_RTX_CLASS: 141
 4479 																																																											INSN_DELETED_P: <>
 4480 																																																											mark_jump_label: <>
 4481 																																																											simplejump_p: if (), <./cc/cse.c 8510>
 4482 																																																											PREV_INSN: <>
 4483 																																																											get_last_insn: 1981
 4484 																																																											emit_jump_insn: <>
 4485 																																																											gen_return: <>
 4486 																																																											emit_barrier: rtx (), <./cc/emit-rtl.c 2761>
 4487 																																																											SET_DEST: 87
 4488 																																																											SET_SRC: 484
 4489 																																																											INTVAL: 129
 4490 																																																											next_nonnote_insn: rtx (), <./cc/emit-rtl.c 1782>
 4491 																																																												NEXT_INSN: <>
 4492 																																																												GET_CODE: 81
 4493 																																																											REGNO: 93
 4494 																																																											GET_MODE_SIZE: 461
 4495 																																																											GET_MODE: 139
 4496 																																																											delete_computation: <>
 4497 																																																											GEN_INT: <>
 4498 																																																											emit_insn_before: <>
 4499 																																																											gen_add2_insn: rtx (), <./cc/optabs.c 3217>
 4500 																																																												GET_MODE: 139
 4501 																																																												abort: <>
 4502 																																																												GEN_FCN: <>
 4503 																																																											plus_constant: <>
 4504 																																																											rtx_equal_p: 143
 4505 																																																											MEM_VOLATILE_P: <>
 4506 																																																											true_regnum: <>
 4507 																																																											find_equiv_reg: <>
 4508 																																																											PRESERVE_DEATH_INFO_REGNO_P: <>
 4509 																																																											prev_nonnote_insn: rtx (), <./cc/emit-rtl.c 1799>
 4510 																																																												PREV_INSN: <>
 4511 																																																												GET_CODE: 81
 4512 																																																											find_regno_note: <>
 4513 																																																											remove_death: <>
 4514 																																																											CONSTANT_P: 118
 4515 																																																											XVECLEN: <>
 4516 																																																											XVECEXP: <>
 4517 																																																											single_set: 560
 4518 																																																											side_effects_p: <>
 4519 																																																											find_reg_note: <>
 4520 																																																											peephole: <>
 4521 																																																											duplicate_loop_exit_test: int (), <./cc/jump.c 2131>
 4522 																																																												NEXT_INSN: <>
 4523 																																																												JUMP_LABEL: 3730
 4524 																																																												next_nonnote_insn: 4490
 4525 																																																												max_reg_num: 4460
 4526 																																																												GET_CODE: 81
 4527 																																																												NOTE_LINE_NUMBER: 177
 4528 																																																												find_reg_note: <>
 4529 																																																												single_set: 560
 4530 																																																												SET_DEST: 87
 4531 																																																												SUBREG_REG: <>
 4532 																																																												REGNO: 93
 4533 																																																												INSN_UID: <>
 4534 																																																												alloca: <>
 4535 																																																												bzero: <>
 4536 																																																												REG_LOOP_TEST_P: <>
 4537 																																																												gen_reg_rtx: 523
 4538 																																																												GET_MODE: 139
 4539 																																																												emit_barrier_before: <>
 4540 																																																												emit_note_before: rtx (), <./cc/emit-rtl.c 2439>
 4541 																																																												NOTE_SOURCE_FILE: <>
 4542 																																																												emit_insn_before: <>
 4543 																																																												copy_rtx: <>
 4544 																																																												PATTERN: <>
 4545 																																																												replace_regs: <>
 4546 																																																												mark_jump_label: <>
 4547 																																																												REG_NOTES: <>
 4548 																																																												XEXP: 105
 4549 																																																												REG_NOTE_KIND: switch (), <./cc/sched.c 4292>
 4550 																																																												gen_rtx: <>
 4551 																																																												emit_jump_insn_before: <>
 4552 																																																												simplejump_p: if (), <./cc/cse.c 8510>
 4553 																																																												abort: <>
 4554 																																																												gen_jump: <>
 4555 																																																												get_label_after: rtx (), <./cc/jump.c 2612>
 4556 																																																													next_nonnote_insn: 4490
 4557 																																																													GET_CODE: 81
 4558 																																																													gen_label_rtx: rtx (), <./cc/emit-rtl.c 1327>
 4559 																																																													emit_label_after: <>
 4560 																																																													LABEL_NUSES: <>
 4561 																																																												delete_insn: <>
 4562 																																																											condjump_p: <>
 4563 																																																											condjump_in_parallel_p: <>
 4564 																																																											tension_vector_labels: <>
 4565 																																																											prev_real_insn: rtx (), <./cc/emit-rtl.c 1836>
 4566 																																																												PREV_INSN: <>
 4567 																																																												GET_CODE: 81
 4568 																																																											next_real_insn: 553
 4569 																																																											redirect_tablejump: <>
 4570 																																																											prev_active_insn: rtx (), <./cc/emit-rtl.c 1878>
 4571 																																																												PREV_INSN: <>
 4572 																																																												GET_CODE: 81
 4573 																																																												PATTERN: <>
 4574 																																																											next_active_insn: 3790
 4575 																																																											redirect_jump: <>
 4576 																																																											delete_jump: <>
 4577 																																																											emit_insn_after: <>
 4578 																																																											get_label_before: rtx (), <./cc/jump.c 2589>
 4579 																																																												prev_nonnote_insn: 4509
 4580 																																																												GET_CODE: 81
 4581 																																																												PREV_INSN: <>
 4582 																																																												gen_label_rtx: rtx (), <./cc/emit-rtl.c 1327>
 4583 																																																												emit_label_after: <>
 4584 																																																												LABEL_NUSES: <>
 4585 																																																											no_labels_between_p: <>
 4586 																																																											sets_cc0_p: <>
 4587 																																																											reg_referenced_between_p: <>
 4588 																																																											reg_set_between_p: <>
 4589 																																																											emit_insn_after_with_line_notes: <>
 4590 																																																											GET_MODE_CLASS: 492
 4591 																																																											may_trap_p: <>
 4592 																																																											rtx_cost: 3959
 4593 																																																											gen_reg_rtx: 523
 4594 																																																											validate_change: 142
 4595 																																																											gen_move_insn: rtx (), <./cc/optabs.c 3264>
 4596 																																																												GET_MODE: 139
 4597 																																																												GET_MODE_CLASS: 492
 4598 																																																												GET_MODE_WIDER_MODE: <>
 4599 																																																												GET_MODE_SIZE: 461
 4600 																																																												abort: <>
 4601 																																																												gen_lowpart_common: rtx (), <./cc/emit-rtl.c 567>
 4602 																																																												GET_CODE: 81
 4603 																																																												gen_rtx: <>
 4604 																																																												XEXP: 105
 4605 																																																												RTX_UNCHANGING_P: It is correct to set, <./cc/stmt.c 3489>
 4606 																																																												MEM_IN_STRUCT_P: <>
 4607 																																																												MEM_VOLATILE_P: <>
 4608 																																																												copy_replacements: void (), <./cc/reload.c 5053>
 4609 																																																													GET_CODE: 81
 4610 																																																													GET_RTX_FORMAT: <>
 4611 																																																													abort: <>
 4612 																																																													GET_RTX_LENGTH: <>
 4613 																																																													XEXP: 105
 4614 																																																												gen_lowpart: <>
 4615 																																																												GEN_FCN: <>
 4616 																																																												start_sequence: void (), <./cc/emit-rtl.c 2919>
 4617 																																																												emit_move_insn_1: <>
 4618 																																																												gen_sequence: rtx (), <./cc/emit-rtl.c 3042>
 4619 																																																													NEXT_INSN: <>
 4620 																																																													GET_CODE: 81
 4621 																																																													CALL_INSN_FUNCTION_USAGE: <>
 4622 																																																													PATTERN: <>
 4623 																																																													push_obstacks_nochange: 517
 4624 																																																													rtl_in_saveable_obstack: 519
 4625 																																																													gen_rtx: <>
 4626 																																																													rtvec_alloc: 3756
 4627 																																																													pop_obstacks: 396
 4628 																																																													XVECEXP: <>
 4629 																																																												end_sequence: 479
 4630 																																																											replace_rtx: <>
 4631 																																																											SUBREG_REG: <>
 4632 																																																											reg_set_last: rtx (), <./cc/rtlanal.c 868>
 4633 																																																												REGNO: 93
 4634 																																																												HARD_REGNO_NREGS: <>
 4635 																																																												GET_MODE: 139
 4636 																																																												GET_CODE: 81
 4637 																																																												PREV_INSN: <>
 4638 																																																												GET_RTX_CLASS: 141
 4639 																																																												note_stores: <>
 4640 																																																												PATTERN: <>
 4641 																																																												reg_set_last_1: void (), <./cc/rtlanal.c 832>
 4642 																																																													GET_CODE: 81
 4643 																																																													REGNO: 93
 4644 																																																													HARD_REGNO_NREGS: <>
 4645 																																																													GET_MODE: 139
 4646 																																																													SET_DEST: 87
 4647 																																																													SET_SRC: 484
 4648 																																																												CONSTANT_P: 118
 4649 																																																												reg_set_between_p: <>
 4650 																																																											get_condition: <>
 4651 																																																											FIND_REG_INC_NOTE: <>
 4652 																																																											start_sequence: void (), <./cc/emit-rtl.c 2919>
 4653 																																																											emit_conditional_move: rtx (), <./cc/optabs.c 3082>
 4654 																																																												CONSTANT_P: 118
 4655 																																																												GET_CODE: 81
 4656 																																																												swap_condition: <>
 4657 																																																												GET_MODE: 139
 4658 																																																												reverse_condition: <>
 4659 																																																												force_not_mem: <>
 4660 																																																												protect_from_queue: <>
 4661 																																																												gen_reg_rtx: 523
 4662 																																																												emit_queue: void (), <./cc/expr.c 530>
 4663 																																																												copy_to_mode_reg: <>
 4664 																																																												compare_from_rtx: <>
 4665 																																																												abort: <>
 4666 																																																												GEN_FCN: <>
 4667 																																																												emit_insn: <>
 4668 																																																												convert_move: <>
 4669 																																																											get_insns: rtx (), <./cc/emit-rtl.c 1696>
 4670 																																																											end_sequence: 479
 4671 																																																											emit_move_insn: <>
 4672 																																																											emit_insns_before: <>
 4673 																																																											can_reverse_comparison_p: int (), <./cc/jump.c 2677>
 4674 																																																												GET_RTX_CLASS: 141
 4675 																																																												GET_CODE: 81
 4676 																																																												XEXP: 105
 4677 																																																												GET_MODE_CLASS: 492
 4678 																																																												GET_MODE: 139
 4679 																																																												prev_nonnote_insn: 4509
 4680 																																																												single_set: 560
 4681 																																																												SET_DEST: 87
 4682 																																																												SET_SRC: 484
 4683 																																																											reverse_condition: <>
 4684 																																																											emit_store_flag: <>
 4685 																																																											expand_and: <>
 4686 																																																											expand_unop: rtx (), <./cc/optabs.c 1812>
 4687 																																																												get_last_insn: 1981
 4688 																																																												GET_MODE_CLASS: 492
 4689 																																																												protect_from_queue: <>
 4690 																																																												force_not_mem: <>
 4691 																																																												gen_reg_rtx: 523
 4692 																																																												GET_MODE: 139
 4693 																																																												convert_to_mode: <>
 4694 																																																												copy_to_mode_reg: <>
 4695 																																																												GEN_FCN: <>
 4696 																																																												GET_CODE: 81
 4697 																																																												add_equal_note: int (), <./cc/optabs.c 249>
 4698 																																																													GET_RTX_CLASS: 141
 4699 																																																													GET_CODE: 81
 4700 																																																													single_set: 560
 4701 																																																													XVECEXP: <>
 4702 																																																													XVECLEN: <>
 4703 																																																													rtx_equal_p: 143
 4704 																																																													SET_DEST: 87
 4705 																																																													SUBREG_REG: <>
 4706 																																																													XEXP: 105
 4707 																																																													reg_overlap_mentioned_p: 91
 4708 																																																													reg_set_p: if (), <./cc/jump.c 3339>
 4709 																																																														GET_RTX_CLASS: 141
 4710 																																																														GET_CODE: 81
 4711 																																																														FIND_REG_INC_NOTE: <>
 4712 																																																														REGNO: 93
 4713 																																																														find_reg_fusage: <>
 4714 																																																														PATTERN: <>
 4715 																																																														note_stores: <>
 4716 																																																														reg_set_p_1: void (), <./cc/rtlanal.c 432>
 4717 																																																															GET_CODE: 81
 4718 																																																															reg_overlap_mentioned_p: 91
 4719 																																																													gen_rtx: <>
 4720 																																																													GET_MODE: 139
 4721 																																																													copy_rtx: <>
 4722 																																																													REG_NOTES: <>
 4723 																																																												delete_insns_since: <>
 4724 																																																												expand_unop: 4686
 4725 																																																												emit_insn: <>
 4726 																																																												GET_MODE_WIDER_MODE: <>
 4727 																																																												widen_operand: rtx (), <./cc/optabs.c 299>
 4728 																																																													GET_MODE: 139
 4729 																																																													GET_CODE: 81
 4730 																																																													SUBREG_PROMOTED_VAR_P: <>
 4731 																																																													convert_modes: <>
 4732 																																																													GET_MODE_SIZE: 461
 4733 																																																													gen_rtx: <>
 4734 																																																													force_reg: <>
 4735 																																																													gen_reg_rtx: 523
 4736 																																																													emit_insn: <>
 4737 																																																													emit_move_insn: <>
 4738 																																																													gen_lowpart: <>
 4739 																																																												convert_move: <>
 4740 																																																												gen_lowpart: <>
 4741 																																																												GET_MODE_SIZE: 461
 4742 																																																												start_sequence: void (), <./cc/emit-rtl.c 2919>
 4743 																																																												GET_MODE_BITSIZE: 447
 4744 																																																												operand_subword: <>
 4745 																																																												operand_subword_force: <>
 4746 																																																												emit_move_insn: <>
 4747 																																																												get_insns: rtx (), <./cc/emit-rtl.c 1696>
 4748 																																																												end_sequence: 479
 4749 																																																												emit_no_conflict_block: rtx (), <./cc/optabs.c 2429>
 4750 																																																													GET_CODE: 81
 4751 																																																													emit_insns: <>
 4752 																																																													NEXT_INSN: <>
 4753 																																																													find_reg_note: <>
 4754 																																																													PATTERN: <>
 4755 																																																													XVECLEN: <>
 4756 																																																													XVECEXP: <>
 4757 																																																													abort: <>
 4758 																																																													reg_overlap_mentioned_p: 91
 4759 																																																													SET_DEST: 87
 4760 																																																													PREV_INSN: <>
 4761 																																																													add_insn: <>
 4762 																																																													get_last_insn: 1981
 4763 																																																													emit_insn: <>
 4764 																																																													gen_rtx: <>
 4765 																																																													REG_NOTES: <>
 4766 																																																													GET_MODE: 139
 4767 																																																													emit_move_insn: <>
 4768 																																																													get_insns: rtx (), <./cc/emit-rtl.c 1696>
 4769 																																																												gen_rtx: <>
 4770 																																																												copy_rtx: <>
 4771 																																																												mode_for_size: <>
 4772 																																																												GET_MODE_UNIT_SIZE: <>
 4773 																																																												abort: <>
 4774 																																																												gen_imagpart: <>
 4775 																																																												gen_realpart: <>
 4776 																																																												emit_library_call_value: <>
 4777 																																																												emit_libcall_block: void (), <./cc/optabs.c 2554>
 4778 																																																													single_set: 560
 4779 																																																													NEXT_INSN: <>
 4780 																																																													GET_CODE: 81
 4781 																																																													SET_DEST: 87
 4782 																																																													REGNO: 93
 4783 																																																													reg_mentioned_p: else if (), <./cc/loop.c 5796>
 4784 																																																													PATTERN: <>
 4785 																																																													reg_used_between_p: <>
 4786 																																																													modified_in_p: int (), <./cc/rtlanal.c 533>
 4787 																																																														GET_CODE: 81
 4788 																																																														RTX_UNCHANGING_P: It is correct to set, <./cc/stmt.c 3489>
 4789 																																																														reg_set_p: 4708
 4790 																																																														GET_RTX_FORMAT: <>
 4791 																																																														GET_RTX_LENGTH: <>
 4792 																																																														modified_in_p: 4786
 4793 																																																														XEXP: 105
 4794 																																																														XVECLEN: <>
 4795 																																																														XVECEXP: <>
 4796 																																																													SET_SRC: 484
 4797 																																																													modified_between_p: int (), <./cc/rtlanal.c 481>
 4798 																																																														GET_CODE: 81
 4799 																																																														RTX_UNCHANGING_P: It is correct to set, <./cc/stmt.c 3489>
 4800 																																																														reg_set_between_p: <>
 4801 																																																														GET_RTX_FORMAT: <>
 4802 																																																														GET_RTX_LENGTH: <>
 4803 																																																														modified_between_p: 4797
 4804 																																																														XEXP: 105
 4805 																																																														XVECLEN: <>
 4806 																																																														XVECEXP: <>
 4807 																																																													PREV_INSN: <>
 4808 																																																													add_insn: <>
 4809 																																																													get_last_insn: 1981
 4810 																																																													emit_move_insn: <>
 4811 																																																													REG_NOTES: <>
 4812 																																																													gen_rtx: <>
 4813 																																																													copy_rtx: <>
 4814 																																																													get_insns: rtx (), <./cc/emit-rtl.c 1696>
 4815 																																																												expand_binop: rtx (), <./cc/optabs.c 341>
 4816 																																																													get_last_insn: 1981
 4817 																																																													GET_MODE_CLASS: 492
 4818 																																																													protect_from_queue: <>
 4819 																																																													force_not_mem: <>
 4820 																																																													GET_CODE: 81
 4821 																																																													negate_rtx: rtx (), <./cc/expmed.c 184>
 4822 																																																														GET_CODE: 81
 4823 																																																														INTVAL: 129
 4824 																																																														GET_MODE_BITSIZE: 447
 4825 																																																														GEN_INT: <>
 4826 																																																														expand_unop: 4686
 4827 																																																														GET_MODE: 139
 4828 																																																													CONSTANT_P: 118
 4829 																																																													preserve_subexpressions_p: 3956
 4830 																																																													rtx_cost: 3959
 4831 																																																													force_reg: <>
 4832 																																																													GET_RTX_CLASS: 141
 4833 																																																													rtx_equal_p: 143
 4834 																																																													gen_reg_rtx: 523
 4835 																																																													GET_MODE: 139
 4836 																																																													convert_to_mode: <>
 4837 																																																													copy_to_mode_reg: <>
 4838 																																																													GEN_FCN: <>
 4839 																																																													add_equal_note: 4697
 4840 																																																													delete_insns_since: <>
 4841 																																																													expand_binop: 4815
 4842 																																																													emit_insn: <>
 4843 																																																													GET_MODE_WIDER_MODE: <>
 4844 																																																													gen_lowpart: <>
 4845 																																																													widen_operand: 4727
 4846 																																																													convert_move: <>
 4847 																																																													GET_MODE_SIZE: 461
 4848 																																																													start_sequence: void (), <./cc/emit-rtl.c 2919>
 4849 																																																													GET_MODE_BITSIZE: 447
 4850 																																																													operand_subword: <>
 4851 																																																													operand_subword_force: <>
 4852 																																																													emit_move_insn: <>
 4853 																																																													get_insns: rtx (), <./cc/emit-rtl.c 1696>
 4854 																																																													end_sequence: 479
 4855 																																																													gen_rtx: <>
 4856 																																																													copy_rtx: <>
 4857 																																																													emit_no_conflict_block: 4749
 4858 																																																													INTVAL: 129
 4859 																																																													GEN_INT: <>
 4860 																																																													CONST0_RTX: <>
 4861 																																																													emit_insns: <>
 4862 																																																													emit_store_flag: <>
 4863 																																																													REG_NOTES: <>
 4864 																																																													mode_for_size: <>
 4865 																																																													GET_MODE_UNIT_SIZE: <>
 4866 																																																													abort: <>
 4867 																																																													gen_realpart: <>
 4868 																																																													gen_imagpart: <>
 4869 																																																													expand_unop: 4686
 4870 																																																													expand_divmod: rtx (), <./cc/expmed.c 2675>
 4871 																																																													emit_library_call_value: <>
 4872 																																																													emit_libcall_block: 4777
 4873 																																																												CONST0_RTX: <>
 4874 																																																											expand_binop: 4815
 4875 																																																											preserve_subexpressions_p: 3956
 4876 																																																											emit_insn: <>
 4877 																																																											find_next_ref: <>
 4878 																																																											simplify_relational_operation: <>
 4879 																																																											get_label_after: 4555
 4880 																																																											inequality_comparisons_p: <>
 4881 																																																											swap_jump: <>
 4882 																																																											emit_barrier_after: <>
 4883 																																																											emit_jump_insn_after: <>
 4884 																																																											gen_jump: <>
 4885 																																																											INSN_CODE: <>
 4886 																																																											prev_label: rtx (), <./cc/emit-rtl.c 1915>
 4887 																																																												PREV_INSN: <>
 4888 																																																												GET_CODE: 81
 4889 																																																											invert_jump: <>
 4890 																																																											follow_jumps: <>
 4891 																																																											next_label: rtx (), <./cc/emit-rtl.c 1899>
 4892 																																																												NEXT_INSN: <>
 4893 																																																												GET_CODE: 81
 4894 																																																											squeeze_notes: rtx (), <./cc/jump.c 2320>
 4895 																																																												NEXT_INSN: <>
 4896 																																																												GET_CODE: 81
 4897 																																																												NOTE_LINE_NUMBER: 177
 4898 																																																												PREV_INSN: <>
 4899 																																																											jump_back_p: int (), <./cc/jump.c 2635>
 4900 																																																												simplejump_p: if (), <./cc/cse.c 8510>
 4901 																																																												condjump_p: <>
 4902 																																																												prev_real_insn: 4565
 4903 																																																												JUMP_LABEL: 3730
 4904 																																																												XEXP: 105
 4905 																																																												SET_SRC: 484
 4906 																																																												PATTERN: <>
 4907 																																																												GET_CODE: 81
 4908 																																																												can_reverse_comparison_p: 4673
 4909 																																																												reverse_condition: <>
 4910 																																																												rtx_renumbered_equal_p: <>
 4911 																																																											find_cross_jump: void (), <./cc/jump.c 2371>
 4912 																																																												prev_nonnote_insn: 4509
 4913 																																																												PREV_INSN: <>
 4914 																																																												GET_CODE: 81
 4915 																																																												PATTERN: <>
 4916 																																																												rtx_equal_p: 143
 4917 																																																												CALL_INSN_FUNCTION_USAGE: <>
 4918 																																																												GET_MODE: 139
 4919 																																																												CLEAR_HARD_REG_SET: <>
 4920 																																																												REG_NOTES: <>
 4921 																																																												XEXP: 105
 4922 																																																												REG_NOTE_KIND: switch (), <./cc/sched.c 4292>
 4923 																																																												STACK_REG_P: <>
 4924 																																																												SET_HARD_REG_BIT: <>
 4925 																																																												REGNO: 93
 4926 																																																												GO_IF_HARD_REG_EQUAL: <>
 4927 																																																												done: 61
 4928 																																																												rtx_renumbered_equal_p: <>
 4929 																																																												find_reg_note: <>
 4930 																																																												CONSTANT_P: 118
 4931 																																																												single_set: 560
 4932 																																																												SET_DEST: 87
 4933 																																																												validate_change: 142
 4934 																																																												SET_SRC: 484
 4935 																																																												cancel_changes: 656
 4936 																																																												apply_change_group: 533
 4937 																																																												sets_cc0_p: <>
 4938 																																																												JUMP_LABEL: 3730
 4939 																																																												prev_real_insn: 4565
 4940 																																																											do_cross_jump: void (), <./cc/jump.c 2537>
 4941 																																																												get_label_before: 4578
 4942 																																																												GET_CODE: 81
 4943 																																																												PATTERN: <>
 4944 																																																												delete_from_jump_chain: <>
 4945 																																																												gen_jump: <>
 4946 																																																												INSN_CODE: <>
 4947 																																																												JUMP_LABEL: 3730
 4948 																																																												LABEL_NUSES: <>
 4949 																																																												INSN_UID: <>
 4950 																																																												redirect_jump: <>
 4951 																																																												REG_NOTES: <>
 4952 																																																												XEXP: 105
 4953 																																																												REG_NOTE_KIND: switch (), <./cc/sched.c 4292>
 4954 																																																												find_reg_note: <>
 4955 																																																												remove_note: <>
 4956 																																																												delete_insn: <>
 4957 																																																												next_real_insn: 553
 4958 																																																											gen_rtx: <>
 4959 																																																											NOTE_SOURCE_FILE: <>
 4960 																																																										pop_obstacks: 396
 4961 																																																										NEXT_INSN: <>
 4962 																																																										GET_CODE: 81
 4963 																																																										PATTERN: <>
 4964 																																																										XEXP: 105
 4965 																																																										build_int_2: <>
 4966 																																																									DECL_INITIAL: 168
 4967 																																																								toplevel_bindings_p: 1614
 4968 																																																								DECL_COMMON: <>
 4969 																																																								DECL_INITIAL: 168
 4970 																																																								build: <>
 4971 																																																								TREE_TYPE: 160
 4972 																																																							TREE_CODE_CLASS: switch (), <./cc/dwarfout.c 3160>
 4973 																																																							CLASSTYPE_READONLY_FIELDS_NEED_INIT: <>
 4974 																																																							CLASSTYPE_REF_FIELDS_NEED_INIT: <>
 4975 																																																							TYPE_READONLY: 217
 4976 																																																							TYPE_SIZE: if (), <./cc/dwarfout.c 3636>
 4977 																																																							TYPE_DOMAIN: <>
 4978 																																																							complete_array_type: 2929
 4979 																																																							TREE_PUBLIC: 194
 4980 																																																							tree_int_cst_lt: 683
 4981 																																																							TYPE_MAX_VALUE: <>
 4982 																																																							layout_decl: <>
 4983 																																																							note_debug_info_needed: void (), <./cc/cp/search.c 3085>
 4984 																																																								dfs_walk: 2050
 4985 																																																								TYPE_BINFO: if (), <./cc/cp/search.c 454>
 4986 																																																								dfs_debug_mark: void (), <./cc/cp/search.c 2472>
 4987 																																																									BINFO_TYPE: <>
 4988 																																																									CLASSTYPE_METHOD_VEC: <>
 4989 																																																									CLASSTYPE_DEBUG_REQUESTED: <>
 4990 																																																									CLASSTYPE_INTERFACE_KNOWN: <>
 4991 																																																									TYPE_VIRTUAL_P: <>
 4992 																																																									DECL_CLASS_CONTEXT: <>
 4993 																																																									TREE_VEC_ELT: <>
 4994 																																																									DECL_VINDEX: <>
 4995 																																																									DECL_THIS_INLINE: 1311
 4996 																																																									DECL_ABSTRACT_VIRTUAL_P: <>
 4997 																																																									TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 4998 																																																									TYPE_DECL_SUPPRESS_DEBUG: <>
 4999 																																																									TYPE_NAME: 271
 5000 																																																									rest_of_type_compilation: 1103
 5001 																																																									global_bindings_p: 1509
 5002 																																																								dfs_debug_unmarkedp: int (), <./cc/cp/search.c 2419>
 5003 																																																									CLASSTYPE_DEBUG_REQUESTED: <>
 5004 																																																									BINFO_TYPE: <>
 5005 																																																								TYPE_FIELDS: <>
 5006 																																																								TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 5007 																																																								TREE_CODE: 162
 5008 																																																								IS_AGGR_TYPE: else if (), <./cc/cp/typeck.c 6140>
 5009 																																																								target_type: 3214
 5010 																																																								TREE_TYPE: 160
 5011 																																																								note_debug_info_needed: 4983
 5012 																																																							TREE_CONSTANT: if (), <./cc/fold-const.c 3102>
 5013 																																																							constant_expression_warning: 1498
 5014 																																																							TYPE_NEEDS_DESTRUCTOR: <>
 5015 																																																							suspend_momentary: 1832
 5016 																																																							comptypes: 1133
 5017 																																																							TREE_OPERAND: <>
 5018 																																																							maybe_build_cleanup: tree (), <./cc/cp/decl.c 12696>
 5019 																																																								TREE_TYPE: 160
 5020 																																																								TYPE_NEEDS_DESTRUCTOR: <>
 5021 																																																								TREE_CODE: 162
 5022 																																																								suspend_momentary: 1832
 5023 																																																								mark_addressable: <>
 5024 																																																								build_unary_op: <>
 5025 																																																								TYPE_USES_VIRTUAL_BASECLASSES: <>
 5026 																																																								build_delete: 3259
 5027 																																																								TYPE_HAS_DESTRUCTOR: if (), <./cc/cp/typeck.c 1728>
 5028 																																																								build_compound_expr: <>
 5029 																																																								tree_cons: <>
 5030 																																																								build_tree_list: <>
 5031 																																																								build_vbase_delete: tree (), <./cc/cp/init.c 4094>
 5032 																																																									CLASSTYPE_VBASECLASSES: <>
 5033 																																																									build_unary_op: <>
 5034 																																																									my_friendly_assert: 379
 5035 																																																									convert_force: 3275
 5036 																																																									build_pointer_type: 390
 5037 																																																									BINFO_TYPE: <>
 5038 																																																									tree_cons: <>
 5039 																																																									build_delete: 3259
 5040 																																																									TREE_TYPE: 160
 5041 																																																									TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 5042 																																																									build_compound_expr: <>
 5043 																																																									nreverse: <>
 5044 																																																								resume_momentary: 1878
 5045 																																																							resume_momentary: 1878
 5046 																																																							resume_temporary_allocation: void (), <./cc/tree.c 473>
 5047 																																																							type_needs_gc_entry: 3866
 5048 																																																							DECL_GC_OFFSET: <>
 5049 																																																							size_int: <>
 5050 																																																							DECL_VIRTUAL_P: if (), <./cc/dwarfout.c 2795>
 5051 																																																							EMPTY_CONSTRUCTOR_P: <>
 5052 																																																							save_expr: <>
 5053 																																																							TREE_SIDE_EFFECTS: if (), <./cc/cp/typeck.c 4958>
 5054 																																																							DECL_MODE: <>
 5055 																																																							gen_reg_rtx: 523
 5056 																																																							store_expr: <>
 5057 																																																							TREE_ASM_WRITTEN: else if (), <./cc/dwarfout.c 3566>
 5058 																																																							DECL_LANG_SPECIFIC: if (), <./cc/cp/decl.c 2992>
 5059 																																																							DECL_IN_AGGR_P: if (), <./cc/cp/decl2.c 1860>
 5060 																																																							CLASSTYPE_ABSTRACT_VIRTUALS: <>
 5061 																																																								abstract_virtuals_error: void (), <./cc/cp/typeck2.c 152>
 5062 																																																									CLASSTYPE_ABSTRACT_VIRTUALS: 5060
 5063 																																																									TREE_CODE: 162
 5064 																																																									cp_error: 259
 5065 																																																									TREE_TYPE: 160
 5066 																																																									TREE_PURPOSE: 215
 5067 																																																									error: 52
 5068 																																																									TREE_VALUE: <>
 5069 																																																									TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 5070 																																																							abstract_virtuals_error: 5061
 5071 																																																							IS_SIGNATURE: 1061
 5072 																																																							signature_error: 1062
 5073 																																																							expand_static_init: 3602
 5074 																																																							build_static_gc_entry: void (), <./cc/cp/gc.c 278>
 5075 																																																								TREE_CODE: 162
 5076 																																																								assemble_gc_entry: void (), <./cc/varasm.c 753>
 5077 																																																								IDENTIFIER_POINTER: <>
 5078 																																																								DECL_NAME: 250
 5079 																																																								get_temp_name: 3609
 5080 																																																								build_reference_type: 1407
 5081 																																																								DECL_INITIAL: 168
 5082 																																																								build1: 334
 5083 																																																								TREE_TYPE: 160
 5084 																																																								TREE_CONSTANT: if (), <./cc/fold-const.c 3102>
 5085 																																																								cp_finish_decl: 3002
 5086 																																																								my_friendly_abort: 357
 5087 																																																							TREE_ADDRESSABLE: <>
 5088 																																																							TREE_USED: <>
 5089 																																																							expand_decl: <>
 5090 																																																							cp_expand_decl_cleanup: <>
 5091 																																																							expand_decl_init: <>
 5092 																																																							emit_line_note: 169
 5093 																																																							DECL_SOURCE_FILE: <>
 5094 																																																							DECL_SOURCE_LINE: 182
 5095 																																																							expand_aggr_init: 3843
 5096 																																																							expand_cleanups_to: 4242
 5097 																																																							DECL_REAL_CONTEXT: <>
 5098 																																																							popclass: 1937
 5099 																																																							TREE_INT_CST_LOW: <>
 5100 																																																							warning_with_decl: <>
 5101 																																																							pop_obstacks: 396
 5102 																																																							cadillac_finish_decl: void (), <./cc/cp/edsel.c 864>
 5103 																																																								TREE_CODE: 162
 5104 																																																								cadillac_printf: 2497
 5105 																																																								IDENTIFIER_POINTER: <>
 5106 																																																								DECL_NAME: 250
 5107 																																																								CWriteHeader: <>
 5108 																																																								CWriteLength: <>
 5109 																																																								my_friendly_abort: 357
 5110 																																																								DECL_ASSEMBLER_NAME: <>
 5111 																																																								CWriteTopLevel: 2503
 5112 																																																								CWriteRequestBuffer: <>
 5113 																																																								cadillac_process_requests: 2524
 5114 																																																					constructor_name_full: <>
 5115 																																																					IDENTIFIER_OPNAME_P: <>
 5116 																																																					IDENTIFIER_TYPENAME_P: if (), <./cc/cp/decl.c 10510>
 5117 																																																						operator_name_string: char * (), <./cc/cp/lex.c 236>
 5118 																																																							IDENTIFIER_POINTER: <>
 5119 																																																							IDENTIFIER_GLOBAL_VALUE: <>
 5120 																																																							TREE_CODE: 162
 5121 																																																						alloca: <>
 5122 																																																						strlen: <>
 5123 																																																						sprintf: <>
 5124 																																																					TREE_TYPE: 160
 5125 																																																					operator_name_string: 5117
 5126 																																																					TYPE_NAME: 271
 5127 																																																					DECL_NAME: 250
 5128 																																																					temp_tree_cons: <>
 5129 																																																					IS_AGGR_TYPE_CODE: if (), <./cc/cp/decl2.c 2088>
 5130 																																																						CLASSTYPE_DECLARED_CLASS: <>
 5131 																																																					is_aggr_typedef: else if (), <./cc/cp/typeck.c 1554>
 5132 																																																						IDENTIFIER_HAS_TYPE_VALUE: else if (), <./cc/cp/call.c 1742>
 5133 																																																						IDENTIFIER_TYPE_VALUE: <>
 5134 																																																						cp_error: 259
 5135 																																																						IS_AGGR_TYPE: else if (), <./cc/cp/typeck.c 6140>
 5136 																																																						TREE_CODE: 162
 5137 																																																					IDENTIFIER_TYPE_VALUE: <>
 5138 																																																					TREE_COMPLEXITY: <>
 5139 																																																					UNIQUELY_DERIVED_FROM_P: <>
 5140 																																																					cp_error: 259
 5141 																																																					namespace_bindings_p: int (), <./cc/cp/decl.c 858>
 5142 																																																					toplevel_bindings_p: 1614
 5143 																																																					TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 5144 																																																					TREE_VALUE: <>
 5145 																																																					IDENTIFIER_GLOBAL_VALUE: <>
 5146 																																																					IDENTIFIER_HAS_TYPE_VALUE: else if (), <./cc/cp/call.c 1742>
 5147 																																																					RIDBIT_SETP: <>
 5148 																																																					RIDBIT_SET: <>
 5149 																																																					lookup_name: 1474
 5150 																																																					DECL_MACHINE_ATTRIBUTES: <>
 5151 																																																					build_pointer_type: 390
 5152 																																																					IS_SIGNATURE: 1061
 5153 																																																					SIGNATURE_GROKKING_TYPEDEF: <>
 5154 																																																					copy_node: 874
 5155 																																																					cp_pedwarn: 1314
 5156 																																																					comptypes: 1133
 5157 																																																					TYPE_MAIN_VARIANT: 324
 5158 																																																					RIDBIT_RESET: <>
 5159 																																																					build_type_variant: 1000
 5160 																																																					TYPE_READONLY: 217
 5161 																																																					TYPE_VOLATILE: <>
 5162 																																																					C_TYPEDEF_EXPLICITLY_SIGNED: <>
 5163 																																																					RIDBIT_NOTSETP: <>
 5164 																																																					unsigned_type: 699
 5165 																																																					RIDBIT_ANY_SET: <>
 5166 																																																					ANON_AGGRNAME_P: <>
 5167 																																																					TYPE_IDENTIFIER: <>
 5168 																																																					tree_cons: <>
 5169 																																																					grokdeclarator: 1602
 5170 																																																					TREE_SET_CODE: <>
 5171 																																																					DECL_NESTED_TYPENAME: <>
 5172 																																																					permalloc: 2873
 5173 																																																					DECL_LANG_SPECIFIC: if (), <./cc/cp/decl.c 2992>
 5174 																																																					SIGNATURE_HAS_OPAQUE_TYPEDECLS: <>
 5175 																																																					RIDBIT_NOSETP: <>
 5176 																																																					root_lang_context_p: int (), <./cc/cp/class.c 4637>
 5177 																																																					TYPE_METHOD_BASETYPE: <>
 5178 																																																					dummy: void (), <./bison/gram.c 56>
 5179 																																																					make_type_decl: 911
 5180 																																																					build_decl: 888
 5181 																																																					grok_method_quals: <>
 5182 																																																					signed_type: 701
 5183 																																																					suspend_momentary: 1832
 5184 																																																					TREE_READONLY_DECL_P: if (), <./cc/cp/decl.c 11146>
 5185 																																																					decl_constant_value: 2192
 5186 																																																					integer_zerop: 405
 5187 																																																					TREE_CONSTANT: if (), <./cc/fold-const.c 3102>
 5188 																																																					constant_expression_warning: 1498
 5189 																																																					INT_CST_LT: <>
 5190 																																																					fold: <>
 5191 																																																					build_binary_op: 164
 5192 																																																					convert: 427
 5193 																																																					variable_size: 1507
 5194 																																																					build_index_type: 1516
 5195 																																																					resume_momentary: 1878
 5196 																																																					build_cplus_array_type: 972
 5197 																																																					cp_build_type_variant: 967
 5198 																																																					IS_AGGR_TYPE: else if (), <./cc/cp/typeck.c 6140>
 5199 																																																					TYPE_HAS_CONVERSION: <>
 5200 																																																					member_function_or_else: int (), <./cc/cp/decl.c 7154>
 5201 																																																						TYPE_NAME_STRING: <>
 5202 																																																					TYPE_HAS_CONSTRUCTOR: else if (), <./cc/cp/typeck.c 5733>
 5203 																																																					grokparms: <>
 5204 																																																					build_function_type: 1210
 5205 																																																					build_type_copy: 1006
 5206 																																																					TYPE_STDCALL: <>
 5207 																																																					CLASSTYPE_METHOD_VEC: <>
 5208 																																																					TYPE_SIZE: if (), <./cc/dwarfout.c 3636>
 5209 																																																					cp_warning: 279
 5210 																																																					build_signature_reference_type: tree (), <./cc/cp/sig.c 249>
 5211 																																																						build_signature_pointer_or_reference_type: 1067
 5212 																																																					sorry: <>
 5213 																																																					build_signature_pointer_type: 1066
 5214 																																																					build_reference_type: 1407
 5215 																																																					build_ptrmemfunc_type: 839
 5216 																																																					pop_nested_class: void (), <./cc/cp/class.c 4548>
 5217 																																																						DECL_CONTEXT: 267
 5218 																																																						TYPE_NAME: 271
 5219 																																																						popclass: 1937
 5220 																																																						TREE_CODE: 162
 5221 																																																						pop_nested_class: 5216
 5222 																																																					my_friendly_abort: 357
 5223 																																																					build_cplus_method_type: 1056
 5224 																																																					TYPE_ARG_TYPES: 791
 5225 																																																					lookup_field: <>
 5226 																																																					build_lang_field_decl: 887
 5227 																																																					build_nt: <>
 5228 																																																					DECL_INITIAL: 168
 5229 																																																					lookup_fnfields: <>
 5230 																																																					TYPE_BINFO: if (), <./cc/cp/search.c 454>
 5231 																																																					TREE_VEC_ELT: <>
 5232 																																																					DECL_CHAIN: if (), <./cc/cp/decl2.c 1871>
 5233 																																																					build_tree_list: <>
 5234 																																																					build_offset_type: 1414
 5235 																																																					uses_template_parms: 2709
 5236 																																																					error: 52
 5237 																																																					lookup_tag_reverse: 3226
 5238 																																																					TYPE_LANG_SPECIFIC: 370
 5239 																																																					TYPE_WAS_ANONYMOUS: <>
 5240 																																																					DECL_CONTEXT: 267
 5241 																																																					set_nested_typename: 2342
 5242 																																																					DECL_ASSEMBLER_NAME: <>
 5243 																																																					TYPE_NESTED_NAME: <>
 5244 																																																					get_identifier: <>
 5245 																																																					build_overload_name: 767
 5246 																																																					cp_error_at: 1225
 5247 																																																					TYPE_DOMAIN: <>
 5248 																																																					make_friend_class: void (), <./cc/cp/init.c 2543>
 5249 																																																						IS_SIGNATURE: 1061
 5250 																																																						IDENTIFIER_POINTER: <>
 5251 																																																						DECL_NAME: 250
 5252 																																																						TYPE_NAME: 271
 5253 																																																						TYPE_NAME_STRING: <>
 5254 																																																						GNU_xref_hier: void (), <./cc/cp/xref.c 573>
 5255 																																																							find_file: 1905
 5256 																																																							fprintf: <>
 5257 																																																						CLASSTYPE_FRIEND_CLASSES: <>
 5258 																																																						TREE_VALUE: <>
 5259 																																																						TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 5260 																																																						tree_cons: <>
 5261 																																																					TYPE_NAME_STRING: <>
 5262 																																																					make_anon_name: tree (), <./cc/cp/decl.c 2276>
 5263 																																																						sprintf: <>
 5264 																																																						get_identifier: <>
 5265 																																																					bad_specifiers: void (), <./cc/cp/decl.c 7171>
 5266 																																																						cp_error: 259
 5267 																																																						cp_error_at: 1225
 5268 																																																					DECL_ARG_TYPE: <>
 5269 																																																					type_promotes_to: tree (), <./cc/cp/cvt.c 1774>
 5270 																																																						TYPE_READONLY: 217
 5271 																																																						TYPE_VOLATILE: <>
 5272 																																																						TYPE_MAIN_VARIANT: 324
 5273 																																																						TREE_CODE: 162
 5274 																																																						MAX: <>
 5275 																																																						TYPE_PRECISION: 211
 5276 																																																						type_for_size: <>
 5277 																																																						TREE_UNSIGNED: 678
 5278 																																																						int_fits_type_p: <>
 5279 																																																						TYPE_MAX_VALUE: <>
 5280 																																																						C_PROMOTING_INTEGER_TYPE_P: if (), <./cc/cp/decl.c 11606>
 5281 																																																						cp_build_type_variant: 967
 5282 																																																					grokfndecl: tree (), <./cc/cp/decl.c 7201>
 5283 																																																						TREE_CODE: 162
 5284 																																																						TYPE_NAME: 271
 5285 																																																						TYPE_IDENTIFIER: <>
 5286 																																																						build_exception_variant: 2820
 5287 																																																						TYPE_RAISES_EXCEPTIONS: <>
 5288 																																																						build_lang_decl: 1284
 5289 																																																						TYPE_VOLATILE: <>
 5290 																																																						TREE_THIS_VOLATILE: <>
 5291 																																																						DECL_STATIC_FUNCTION_P: 2808
 5292 																																																						DECL_CONTEXT: 267
 5293 																																																						DECL_CLASS_CONTEXT: <>
 5294 																																																						TREE_PUBLIC: 194
 5295 																																																						strcmp: 157
 5296 																																																						IDENTIFIER_POINTER: <>
 5297 																																																						DECL_C_STATIC: <>
 5298 																																																						DECL_THIS_INLINE: 1311
 5299 																																																						DECL_INLINE: if (), <./cc/dwarfout.c 2737>
 5300 																																																						DECL_EXTERNAL: else if (), <./cc/dwarfout.c 3220>
 5301 																																																						cp_error: 259
 5302 																																																						TREE_VALUE: <>
 5303 																																																						IDENTIFIER_OPNAME_P: <>
 5304 																																																						DECL_NAME: 250
 5305 																																																						grok_op_properties: <>
 5306 																																																						constructor_name: <>
 5307 																																																						DECL_CONSTRUCTOR_P: if (), <./cc/cp/decl2.c 951>
 5308 																																																						grokclassfn: <>
 5309 																																																						check_classfn: <>
 5310 																																																						grok_ctor_properties: <>
 5311 																																																						lookup_name: 1474
 5312 																																																						DECL_ASSEMBLER_NAME: <>
 5313 																																																						IDENTIFIER_GLOBAL_VALUE: <>
 5314 																																																						duplicate_decls: <>
 5315 																																																						DECL_CHAIN: if (), <./cc/cp/decl2.c 1871>
 5316 																																																						make_decl_rtl: 1326
 5317 																																																						cplus_decl_attributes: <>
 5318 																																																						TREE_PURPOSE: 215
 5319 																																																						BINFO_BASETYPES: <>
 5320 																																																						TYPE_BINFO: if (), <./cc/cp/search.c 454>
 5321 																																																						TREE_VEC_LENGTH: <>
 5322 																																																						TREE_VEC_ELT: <>
 5323 																																																						TYPE_VIRTUAL_P: <>
 5324 																																																						BINFO_TYPE: <>
 5325 																																																						get_matching_virtual: tree (), <./cc/cp/search.c 1990>
 5326 																																																							tree_has_any_destructor_p: int (), <./cc/cp/search.c 1973>
 5327 																																																								BINFO_TYPE: <>
 5328 																																																								TREE_VEC_ELT: <>
 5329 																																																								BINFO_BASETYPES: <>
 5330 																																																								TYPE_NEEDS_DESTRUCTOR: <>
 5331 																																																							get_virtual_destructor: tree (), <./cc/cp/search.c 1960>
 5332 																																																								BINFO_TYPE: <>
 5333 																																																								TREE_VEC_ELT: <>
 5334 																																																								BINFO_BASETYPES: <>
 5335 																																																								TYPE_HAS_DESTRUCTOR: if (), <./cc/cp/typeck.c 1728>
 5336 																																																								DECL_VINDEX: <>
 5337 																																																								CLASSTYPE_METHOD_VEC: <>
 5338 																																																							breadth_first_search: <>
 5339 																																																							DECL_CLASS_CONTEXT: <>
 5340 																																																							DECL_ASSEMBLER_NAME: <>
 5341 																																																							DECL_NAME: 250
 5342 																																																							IDENTIFIER_VIRTUAL_P: <>
 5343 																																																							get_virtuals_named_this: tree (), <./cc/cp/search.c 1935>
 5344 																																																								lookup_fnfields: <>
 5345 																																																								TREE_VALUE: <>
 5346 																																																								DECL_CHAIN: if (), <./cc/cp/decl2.c 1871>
 5347 																																																								DECL_VINDEX: <>
 5348 																																																								next_baselink: 2906
 5349 																																																							TREE_TYPE: 160
 5350 																																																							TYPE_ARG_TYPES: 791
 5351 																																																							DECL_STATIC_FUNCTION_P: 2808
 5352 																																																							TREE_VALUE: <>
 5353 																																																							next_baselink: 2906
 5354 																																																							DECL_CHAIN: if (), <./cc/cp/decl2.c 1871>
 5355 																																																							DECL_VINDEX: <>
 5356 																																																							compparms: <>
 5357 																																																							TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 5358 																																																							TYPE_READONLY: 217
 5359 																																																							comptypes: 1133
 5360 																																																							TREE_CODE: 162
 5361 																																																							TYPE_MAIN_VARIANT: 324
 5362 																																																							get_binfo: <>
 5363 																																																							BINFO_OFFSET_ZEROP: if (), <./cc/cp/call.c 290>
 5364 																																																							sorry: <>
 5365 																																																							cp_error: 259
 5366 																																																							cp_error_at: 1225
 5367 																																																							TYPE_VOLATILE: <>
 5368 																																																							IS_AGGR_TYPE_2: <>
 5369 																																																							IDENTIFIER_ERROR_LOCUS: <>
 5370 																																																							SET_IDENTIFIER_ERROR_LOCUS: <>
 5371 																																																							cp_warning_at: 283
 5372 																																																						DECL_VIRTUAL_P: if (), <./cc/dwarfout.c 2795>
 5373 																																																						cp_error_at: 1225
 5374 																																																						TYPE_ARG_TYPES: 791
 5375 																																																						TREE_TYPE: 160
 5376 																																																						commonparms: tree (), <./cc/cp/typeck.c 179>
 5377 																																																							oballoc: 530
 5378 																																																							list_length: 1446
 5379 																																																							tree_last: <>
 5380 																																																							tree_cons: <>
 5381 																																																							TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 5382 																																																							TREE_PURPOSE: 215
 5383 																																																							simple_cst_equal: 235
 5384 																																																							TREE_VALUE: <>
 5385 																																																							common_type: 212
 5386 																																																							obfree: void (), <./cc/tree.c 664>
 5387 																																																								obstack_free: 397
 5388 																																																						TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 5389 																																																						build_cplus_method_type: 1056
 5390 																																																						DECL_VINDEX: <>
 5391 																																																						tree_cons: <>
 5392 																																																						IDENTIFIER_VIRTUAL_P: <>
 5393 																																																						CLASSTYPE_VTABLE_NEEDS_WRITING: <>
 5394 																																																						IDENTIFIER_TEMPLATE: <>
 5395 																																																						CLASSTYPE_INTERFACE_KNOWN: <>
 5396 																																																					build_decl_attribute_variant: 1567
 5397 																																																					DECL_STDCALL: <>
 5398 																																																					DECL_NONCONVERTING_P: <>
 5399 																																																					IDENTIFIER_TEMPLATE: <>
 5400 																																																					warning: 281
 5401 																																																					do_friend: tree (), <./cc/cp/init.c 2602>
 5402 																																																						DECL_FRIEND_P: <>
 5403 																																																						TYPE_NAME: 271
 5404 																																																						TREE_CODE: 162
 5405 																																																						DECL_NAME: 250
 5406 																																																						DECL_CONSTRUCTOR_P: if (), <./cc/cp/decl2.c 951>
 5407 																																																						grokclassfn: <>
 5408 																																																						TYPE_SIZE: if (), <./cc/dwarfout.c 3636>
 5409 																																																						check_classfn: <>
 5410 																																																						TREE_TYPE: 160
 5411 																																																						make_decl_rtl: 1326
 5412 																																																						add_friend: void (), <./cc/cp/init.c 2419>
 5413 																																																							TYPE_NAME: 271
 5414 																																																							DECL_FRIENDLIST: <>
 5415 																																																							DECL_NAME: 250
 5416 																																																							TREE_PURPOSE: 215
 5417 																																																							TREE_VALUE: <>
 5418 																																																							TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 5419 																																																							cp_warning: 279
 5420 																																																							cp_warning_at: 283
 5421 																																																							tree_cons: <>
 5422 																																																							build_tree_list: <>
 5423 																																																							TYPE_ARG_TYPES: 791
 5424 																																																							TREE_TYPE: 160
 5425 																																																							TYPE_HAS_ASSIGNMENT: else if (), <./cc/cp/typeck.c 5757>
 5426 																																																							TREE_CODE: 162
 5427 																																																							TYPE_HAS_ASSIGN_REF: <>
 5428 																																																						IDENTIFIER_POINTER: <>
 5429 																																																						IDENTIFIER_TYPE_VALUE: <>
 5430 																																																						lookup_fnfields: <>
 5431 																																																						TYPE_BINFO: if (), <./cc/cp/search.c 454>
 5432 																																																						add_friends: void (), <./cc/cp/init.c 2468>
 5433 																																																							TYPE_NAME: 271
 5434 																																																							DECL_FRIENDLIST: <>
 5435 																																																							TREE_PURPOSE: 215
 5436 																																																							TREE_VALUE: <>
 5437 																																																							TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 5438 																																																							TYPE_NAME_STRING: <>
 5439 																																																							IDENTIFIER_POINTER: <>
 5440 																																																							DECL_NAME: 250
 5441 																																																							tree_cons: <>
 5442 																																																							build_tree_list: <>
 5443 																																																							strncmp: 233
 5444 																																																							strlen: <>
 5445 																																																							TYPE_HAS_ASSIGNMENT: else if (), <./cc/cp/typeck.c 5757>
 5446 																																																							TREE_TYPE: 160
 5447 																																																							sorry: <>
 5448 																																																						xref_friend: void (), <./cc/cp/init.c 2515>
 5449 																																																							TYPE_NAME: 271
 5450 																																																							tree_cons: <>
 5451 																																																							DECL_UNDEFINED_FRIENDS: <>
 5452 																																																							SET_DECL_WAITING_FRIENDS: <>
 5453 																																																							DECL_WAITING_FRIENDS: <>
 5454 																																																							TREE_TYPE: 160
 5455 																																																						IDENTIFIER_LENGTH: <>
 5456 																																																						strcmp: 157
 5457 																																																						strncmp: 233
 5458 																																																						DECL_ASSEMBLER_NAME: <>
 5459 																																																						build_decl_overload: 1264
 5460 																																																						TYPE_ARG_TYPES: 791
 5461 																																																						DECL_ARGUMENTS: <>
 5462 																																																						DECL_CLASS_CONTEXT: <>
 5463 																																																						pushdecl: <>
 5464 																																																						TREE_OVERLOADED: <>
 5465 																																																						lookup_name_nonclass: 1229
 5466 																																																						xref_tag: 2280
 5467 																																																						TREE_PURPOSE: 215
 5468 																																																						make_friend_class: 5248
 5469 																																																					INTEGRAL_TYPE_P: <>
 5470 																																																					TREE_STATIC: if (), <./cc/stor-layout.c 332>
 5471 																																																					TREE_PUBLIC: 194
 5472 																																																					DECL_EXTERNAL: else if (), <./cc/dwarfout.c 3220>
 5473 																																																					DECL_MUTABLE_P: <>
 5474 																																																					pedwarn: <>
 5475 																																																					IDENTIFIER_LENGTH: <>
 5476 																																																					strcmp: 157
 5477 																																																					strncmp: 233
 5478 																																																					build_decl_overload: 1264
 5479 																																																					DECL_LANGUAGE: 1293
 5480 																																																					current_namespace_id: 2323
 5481 																																																					grokvardecl: tree (), <./cc/cp/decl.c 7429>
 5482 																																																						TREE_CODE: 162
 5483 																																																						TYPE_OFFSET_BASETYPE: <>
 5484 																																																						TREE_TYPE: 160
 5485 																																																						build_lang_field_decl: 887
 5486 																																																						DECL_CONTEXT: 267
 5487 																																																						DECL_CLASS_CONTEXT: <>
 5488 																																																						DECL_ASSEMBLER_NAME: <>
 5489 																																																						build_static_name: tree (), <./cc/cp/method.c 916>
 5490 																																																							build_overload_name: 767
 5491 																																																							alloca: <>
 5492 																																																							IDENTIFIER_LENGTH: <>
 5493 																																																							strlen: <>
 5494 																																																							sprintf: <>
 5495 																																																							IDENTIFIER_POINTER: <>
 5496 																																																							get_identifier: <>
 5497 																																																						build_decl: 888
 5498 																																																						current_namespace_id: 2323
 5499 																																																						RIDBIT_SETP: <>
 5500 																																																						DECL_THIS_EXTERN: <>
 5501 																																																						DECL_EXTERNAL: else if (), <./cc/dwarfout.c 3220>
 5502 																																																						DECL_FIELD_CONTEXT: <>
 5503 																																																						IS_AGGR_TYPE: else if (), <./cc/cp/typeck.c 6140>
 5504 																																																						TREE_PUBLIC: 194
 5505 																																																						TREE_STATIC: if (), <./cc/stor-layout.c 332>
 5506 																																																						toplevel_bindings_p: 1614
 5507 																																																						RIDBIT_NOTSETP: <>
 5508 																																																					DECL_REGISTER: <>
 5509 																																																					DECL_THIS_EXTERN: <>
 5510 																																																					DECL_THIS_STATIC: <>
 5511 																																																					TREE_READONLY: if (), <./cc/cp/decl2.c 1229>
 5512 																																																					TREE_SIDE_EFFECTS: if (), <./cc/cp/typeck.c 4958>
 5513 																																																					TREE_THIS_VOLATILE: <>
 5514 																																																					malloc: <>
 5515 																																																					strlen: <>
 5516 																																																					sprintf: <>
 5517 																																																					DECL_DLLIMPORT: <>
 5518 																																																					realloc: <>
 5519 																																																			tsubst: 834
 5520 																																																			TREE_TYPE: 160
 5521 																																																			digest_init: 2175
 5522 																																																			TREE_CONSTANT: if (), <./cc/fold-const.c 3102>
 5523 																																																			POINTER_TYPE_P: if (), <./cc/cp/typeck.c 5083>
 5524 																																																			integer_zerop: 405
 5525 																																																			STRIP_NOPS: <>
 5526 																																																			TREE_OPERAND: <>
 5527 																																																			DECL_PUBLIC: <>
 5528 																																																		uses_template_parms: 2709
 5529 																																																		make_lang_type: 843
 5530 																																																		make_anon_name: 5262
 5531 																																																		build_decl: 888
 5532 																																																		TYPE_NAME: 271
 5533 																																																		TYPE_VALUES: <>
 5534 																																																		build_tree_list: <>
 5535 																																																		pushdecl_top_level: <>
 5536 																																																		mangle_class_name_for_template: char * (), <./cc/cp/pt.c 480>
 5537 																																																			gcc_obstack_init: void (), <./cc/tree.c 315>
 5538 																																																			obstack_alloc: <>
 5539 																																																			obstack_free: 397
 5540 																																																			cat: <>
 5541 																																																			ccat: <>
 5542 																																																			TREE_VEC_LENGTH: <>
 5543 																																																			my_friendly_assert: 379
 5544 																																																			TREE_VALUE: <>
 5545 																																																			TREE_VEC_ELT: <>
 5546 																																																			TREE_CODE: 162
 5547 																																																			type_as_string: 3037
 5548 																																																			TREE_PURPOSE: 215
 5549 																																																			expr_as_string: char * (), <./cc/cp/error.c 1349>
 5550 																																																				OB_INIT: <>
 5551 																																																				dump_expr: 3046
 5552 																																																				OB_FINISH: <>
 5553 																																																				obstack_base: <>
 5554 																																																			obstack_next_free: <>
 5555 																																																			obstack_blank_fast: void () (), <./cc/obstack.c 457>
 5556 																																																			obstack_base: <>
 5557 																																																			fatal: 49
 5558 																																																		IDENTIFIER_POINTER: <>
 5559 																																																		get_identifier: <>
 5560 																																																		IDENTIFIER_TEMPLATE: <>
 5561 																																																		copy_to_permanent: 1830
 5562 																																																		perm_tree_cons: <>
 5563 																																																	IDENTIFIER_HAS_TYPE_VALUE: else if (), <./cc/cp/call.c 1742>
 5564 																																																	instantiate_class_template: tree (), <./cc/cp/pt.c 986>
 5565 																																																		my_friendly_assert: 379
 5566 																																																		TREE_CODE: 162
 5567 																																																		IDENTIFIER_TEMPLATE: <>
 5568 																																																		IDENTIFIER_HAS_TYPE_VALUE: else if (), <./cc/cp/call.c 1742>
 5569 																																																		IDENTIFIER_TYPE_VALUE: <>
 5570 																																																		TYPE_BEING_DEFINED: <>
 5571 																																																		TYPE_SIZE: if (), <./cc/dwarfout.c 3636>
 5572 																																																		CLASSTYPE_USE_TEMPLATE: <>
 5573 																																																		IDENTIFIER_LOCAL_VALUE: <>
 5574 																																																		uses_template_parms: 2709
 5575 																																																		TREE_TYPE: 160
 5576 																																																		make_lang_type: 843
 5577 																																																		build_decl: 888
 5578 																																																		DECL_NAME: 250
 5579 																																																		TYPE_NAME: 271
 5580 																																																		pushdecl: <>
 5581 																																																		TREE_PURPOSE: 215
 5582 																																																		DECL_TEMPLATE_INFO: <>
 5583 																																																		push_to_top_level: void (), <./cc/cp/decl.c 1825>
 5584 																																																			xmalloc: 1643
 5585 																																																			TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 5586 																																																			DECL_ASSEMBLER_NAME: <>
 5587 																																																			IDENTIFIER_LOCAL_VALUE: <>
 5588 																																																			IDENTIFIER_CLASS_VALUE: <>
 5589 																																																			TREE_VEC_ELT: <>
 5590 																																																			make_tree_vec: 857
 5591 																																																			my_friendly_assert: 379
 5592 																																																			TREE_CODE: 162
 5593 																																																			IDENTIFIER_TYPE_VALUE: <>
 5594 																																																			SET_IDENTIFIER_TYPE_VALUE: <>
 5595 																																																			TREE_PURPOSE: 215
 5596 																																																			TREE_VALUE: <>
 5597 																																																			popclass: 1937
 5598 																																																		push_tinst_level: int (), <./cc/cp/pt.c 924>
 5599 																																																			IDENTIFIER_GLOBAL_VALUE: <>
 5600 																																																			error: 52
 5601 																																																			cp_error: 259
 5602 																																																			xmalloc: 1643
 5603 																																																			DECL_SOURCE_LINE: 182
 5604 																																																			DECL_SOURCE_FILE: <>
 5605 																																																		push_template_decls: 2161
 5606 																																																		DECL_TEMPLATE_PARMS: <>
 5607 																																																		TREE_VALUE: <>
 5608 																																																		set_current_level_tags_transparency: void (), <./cc/cp/decl.c 4261>
 5609 																																																		feed_input: inline void (), <./cc/cp/input.c 105>
 5610 																																																			allocate_input: inline struct input_source * (), <./cc/cp/input.c 69>
 5611 																																																			save_pending_input: struct pending_input (), <./cc/cp/lex.c 1502>
 5612 																																																		extract_interface_info: 2875
 5613 																																																		overload_template_name: 2271
 5614 																																																		perm_tree_cons: <>
 5615 																																																		xref_tag: 2280
 5616 																																																		IDENTIFIER_CLASS_VALUE: <>
 5617 																																																		push_obstacks: 392
 5618 																																																		pushdecl_top_level: <>
 5619 																																																		copy_node: 874
 5620 																																																		pop_obstacks: 396
 5621 																																																		pop_from_top_level: void (), <./cc/cp/decl.c 1916>
 5622 																																																			TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 5623 																																																			TREE_VEC_ELT: <>
 5624 																																																			IDENTIFIER_TYPE_VALUE: <>
 5625 																																																			IDENTIFIER_LOCAL_VALUE: <>
 5626 																																																			IDENTIFIER_CLASS_VALUE: <>
 5627 																																																			free: <>
 5628 																																																	add_pending_template: void (), <./cc/cp/pt.c 2492>
 5629 																																																		malloc: <>
 5630 																																																	TYPE_MAIN_VARIANT: 324
 5631 																																																	IDENTIFIER_TYPE_VALUE: <>
 5632 																																																	ANON_AGGRNAME_P: <>
 5633 																																																	TYPE_NAME: 271
 5634 																																																	search_nested_type_in_tmpl: tree (), <./cc/cp/pt.c 1131>
 5635 																																																		TYPE_CONTEXT: <>
 5636 																																																		search_nested_type_in_tmpl: 5634
 5637 																																																		lookup_nested_type_by_name: tree (), <./cc/cp/pt.c 1117>
 5638 																																																			CLASSTYPE_TAGS: <>
 5639 																																																			TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 5640 																																																			TREE_PURPOSE: 215
 5641 																																																			TREE_VALUE: <>
 5642 																																																		DECL_NAME: 250
 5643 																																																		TYPE_NAME: 271
 5644 																																																	fold: <>
 5645 																																																	build: <>
 5646 																																																	TREE_OPERAND: <>
 5647 																																																	build1: 334
 5648 																																																	sorry: <>
 5649 																																																TREE_TYPE: 160
 5650 																																																build_overload_value: void (), <./cc/cp/method.c 377>
 5651 																																																	TREE_CODE: 162
 5652 																																																	TREE_OPERAND: <>
 5653 																																																	my_friendly_assert: 379
 5654 																																																	TREE_TYPE: 160
 5655 																																																	OB_PUTC: <>
 5656 																																																	sorry: <>
 5657 																																																	TYPE_PTRMEMFUNC_P: 258
 5658 																																																	TYPE_PTRMEMFUNC_FN_TYPE: <>
 5659 																																																	build_overload_int: void (), <./cc/cp/method.c 352>
 5660 																																																		my_friendly_assert: 379
 5661 																																																		TREE_CODE: 162
 5662 																																																		TYPE_PRECISION: 211
 5663 																																																		tree_int_cst_lt: 683
 5664 																																																		OB_PUTC: <>
 5665 																																																		build_int_2: <>
 5666 																																																		TREE_INT_CST_LOW: <>
 5667 																																																		TREE_INT_CST_HIGH: <>
 5668 																																																		sorry: <>
 5669 																																																		icat: 774
 5670 																																																	TREE_REAL_CST: <>
 5671 																																																	sprintf: <>
 5672 																																																	index: 3554
 5673 																																																	strcat: <>
 5674 																																																	OB_PUTCP: <>
 5675 																																																	CONSTRUCTOR_ELTS: <>
 5676 																																																	TREE_VALUE: <>
 5677 																																																	TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 5678 																																																	STRIP_NOPS: <>
 5679 																																																	build_overload_identifier: 820
 5680 																																																	DECL_ASSEMBLER_NAME: <>
 5681 																																																	DECL_NAME: 250
 5682 																																																	my_friendly_abort: 357
 5683 																																														TYPE_MAIN_DECL: <>
 5684 																																														build_overload_identifier: 820
 5685 																																														sprintf: <>
 5686 																																														OB_PUTCP: <>
 5687 																																													get_identifier: <>
 5688 																																													obstack_base: <>
 5689 																																													IDENTIFIER_OPNAME_P: <>
 5690 																																													IDENTIFIER_GLOBAL_VALUE: <>
 5691 																																													TYPE_NAME: 271
 5692 																																													TREE_TYPE: 160
 5693 																																												lookup_fnfields: <>
 5694 																																												TYPE_BINFO: if (), <./cc/cp/search.c 454>
 5695 																																												build_type_conversion_1: tree (), <./cc/cp/cvt.c 1432>
 5696 																																													build_method_call: <>
 5697 																																													IS_AGGR_TYPE: else if (), <./cc/cp/typeck.c 6140>
 5698 																																													TREE_TYPE: 160
 5699 																																													TREE_READONLY: if (), <./cc/cp/decl2.c 1229>
 5700 																																													convert: 427
 5701 																																												lookup_conversions: tree (), <./cc/cp/search.c 3526>
 5702 																																													dfs_walk: 2050
 5703 																																													TYPE_BINFO: if (), <./cc/cp/search.c 454>
 5704 																																													add_conversions: void (), <./cc/cp/search.c 3515>
 5705 																																														CLASSTYPE_FIRST_CONVERSION: <>
 5706 																																														BINFO_TYPE: <>
 5707 																																														IDENTIFIER_TYPENAME_P: 5116
 5708 																																														DECL_NAME: 250
 5709 																																														TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 5710 																																														tree_cons: <>
 5711 																																														TREE_TYPE: 160
 5712 																																												TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 5713 																																												TREE_PURPOSE: 215
 5714 																																												can_convert: <>
 5715 																																												TREE_VALUE: <>
 5716 																																												cp_error: 259
 5717 																																											real_lvalue_p: int (), <./cc/cp/tree.c 37>
 5718 																																												language_lvalue_valid: <>
 5719 																																												TREE_CODE: 162
 5720 																																												TREE_TYPE: 160
 5721 																																												real_lvalue_p: 5717
 5722 																																												TREE_OPERAND: <>
 5723 																																												TREE_READONLY: if (), <./cc/cp/decl2.c 1229>
 5724 																																												TREE_STATIC: if (), <./cc/stor-layout.c 332>
 5725 																																												DECL_LANG_SPECIFIC: if (), <./cc/cp/decl.c 2992>
 5726 																																												DECL_IN_AGGR_P: if (), <./cc/cp/decl2.c 1860>
 5727 																																												my_friendly_abort: 357
 5728 																																											TREE_READONLY: if (), <./cc/cp/decl2.c 1229>
 5729 																																											TREE_THIS_VOLATILE: <>
 5730 																																											cp_build_type_variant: 967
 5731 																																											TYPE_READONLY: 217
 5732 																																											cp_pedwarn: 1314
 5733 																																											TYPE_VOLATILE: <>
 5734 																																											build_up_reference: tree (), <./cc/cp/cvt.c 316>
 5735 																																												TREE_TYPE: 160
 5736 																																												target_type: 3214
 5737 																																												my_friendly_assert: 379
 5738 																																												TREE_CODE: 162
 5739 																																												TYPE_MAIN_VARIANT: 324
 5740 																																												IS_AGGR_TYPE: else if (), <./cc/cp/typeck.c 6140>
 5741 																																												get_binfo: <>
 5742 																																												error_not_base_type: 3364
 5743 																																												TYPE_READONLY: 217
 5744 																																												TYPE_VOLATILE: <>
 5745 																																												cp_build_type_variant: 967
 5746 																																												TREE_OPERAND: <>
 5747 																																												TREE_HAS_CONSTRUCTOR: <>
 5748 																																												build_cplus_new: tree (), <./cc/cp/tree.c 216>
 5749 																																													build: <>
 5750 																																													layout_decl: <>
 5751 																																													TREE_OPERAND: <>
 5752 																																													TREE_SIDE_EFFECTS: if (), <./cc/cp/typeck.c 4958>
 5753 																																													TREE_ADDRESSABLE: <>
 5754 																																													TYPE_NEEDS_DESTRUCTOR: <>
 5755 																																													build_delete: 3259
 5756 																																													build_pointer_type: 390
 5757 																																													build_unary_op: <>
 5758 																																												build_up_reference: 5734
 5759 																																												TREE_REFERENCE_EXPR: <>
 5760 																																												TREE_READONLY: if (), <./cc/cp/decl2.c 1229>
 5761 																																												copy_node: 874
 5762 																																												build1: 334
 5763 																																												TREE_CONSTANT: if (), <./cc/fold-const.c 3102>
 5764 																																												done: 61
 5765 																																												mark_addressable: <>
 5766 																																												build_binary_op: 164
 5767 																																												staticp: <>
 5768 																																												TREE_STATIC: if (), <./cc/stor-layout.c 332>
 5769 																																												my_friendly_abort: 357
 5770 																																												build_component_addr: <>
 5771 																																												build_pointer_type: 390
 5772 																																												TREE_ADDRESSABLE: <>
 5773 																																												put_var_into_stack: void (), <./cc/function.c 1221>
 5774 																																													decl_function_context: <>
 5775 																																													TREE_CODE: 162
 5776 																																													SAVE_EXPR_RTL: <>
 5777 																																													DECL_RTL: <>
 5778 																																													TYPE_MODE: <>
 5779 																																													TREE_TYPE: 160
 5780 																																													DECL_MODE: <>
 5781 																																													GET_MODE: 139
 5782 																																													DECL_NONLOCAL: <>
 5783 																																													GET_CODE: 81
 5784 																																													XEXP: 105
 5785 																																													REGNO: 93
 5786 																																													put_reg_into_stack: void (), <./cc/function.c 1311>
 5787 																																														REGNO: 93
 5788 																																														assign_outer_stack_local: rtx (), <./cc/function.c 739>
 5789 																																															push_obstacks: 392
 5790 																																															GET_MODE_ALIGNMENT: <>
 5791 																																															CEIL_ROUND: <>
 5792 																																															FLOOR_ROUND: <>
 5793 																																															GET_MODE_SIZE: 461
 5794 																																															plus_constant: <>
 5795 																																															gen_rtx: <>
 5796 																																															pop_obstacks: 396
 5797 																																														GET_MODE_SIZE: 461
 5798 																																														assign_stack_local: rtx (), <./cc/function.c 670>
 5799 																																															GET_MODE_ALIGNMENT: <>
 5800 																																															CEIL_ROUND: <>
 5801 																																															FLOOR_ROUND: <>
 5802 																																															GET_MODE_SIZE: 461
 5803 																																															plus_constant: <>
 5804 																																															gen_rtx: <>
 5805 																																														PUT_MODE: <>
 5806 																																														XEXP: 105
 5807 																																														MEM_VOLATILE_P: <>
 5808 																																														PUT_CODE: <>
 5809 																																														MEM_IN_STRUCT_P: <>
 5810 																																														AGGREGATE_TYPE_P: 1383
 5811 																																														push_obstacks: 392
 5812 																																														savealloc: char * (), <./cc/tree.c 698>
 5813 																																														TREE_UNSIGNED: 678
 5814 																																														pop_obstacks: 396
 5815 																																														fixup_var_refs: 1975
 5816 																																													TREE_SIDE_EFFECTS: if (), <./cc/cp/typeck.c 4958>
 5817 																																													PUT_CODE: <>
 5818 																																													MEM_VOLATILE_P: <>
 5819 																																													copy_rtx: <>
 5820 																																												DECL_REGISTER: <>
 5821 																																												DECL_ARTIFICIAL: 278
 5822 																																												cp_warning: 279
 5823 																																												build: <>
 5824 																																												compiler_error: 4285
 5825 																																												get_temp_name: 3609
 5826 																																												toplevel_bindings_p: 1614
 5827 																																												DECL_INITIAL: 168
 5828 																																												cp_finish_decl: 3002
 5829 																																												build_unary_op: <>
 5830 																																												BINFO_OFFSET_ZEROP: if (), <./cc/cp/call.c 290>
 5831 																																												convert_pointer_to: 381
 5832 																																												TREE_SIDE_EFFECTS: if (), <./cc/cp/typeck.c 4958>
 5833 																																												TYPE_USES_COMPLEX_INHERITANCE: <>
 5834 																																												convert_to_pointer_force: 3281
 5835 																																											lvalue_p: 2656
 5836 																																											comptypes: 1133
 5837 																																											cp_warning: 279
 5838 																																											build_unary_op: <>
 5839 																																											convert_force: 3275
 5840 																																											build_pointer_type: 390
 5841 																																											build1: 334
 5842 																																											cp_error: 259
 5843 																																											TYPE_HAS_CONSTRUCTOR: else if (), <./cc/cp/typeck.c 5733>
 5844 																																											CLASSTYPE_ABSTRACT_VIRTUALS: 5060
 5845 																																											build_method_call: <>
 5846 																																											constructor_name_full: <>
 5847 																																											build_tree_list: <>
 5848 																																											TYPE_BINFO: if (), <./cc/cp/search.c 454>
 5849 																																											toplevel_bindings_p: 1614
 5850 																																											get_temp_name: 3609
 5851 																																											make_decl_rtl: 1326
 5852 																																											perm_tree_cons: <>
 5853 																																											build_cplus_new: 5748
 5854 																																											convert: 427
 5855 																																											my_friendly_assert: 379
 5856 																																										convert_from_reference: 3251
 5857 																																										resolve_offset_ref: 3351
 5858 																																										TREE_READONLY_DECL_P: if (), <./cc/cp/decl.c 11146>
 5859 																																										decl_constant_value: 2192
 5860 																																										INTEGRAL_CODE_P: 3333
 5861 																																										ARITHMETIC_TYPE_P: <>
 5862 																																										cp_pedwarn: 1314
 5863 																																										build_type_conversion: 758
 5864 																																										cp_error: 259
 5865 																																										truthvalue_conversion: <>
 5866 																																										convert_to_integer: 436
 5867 																																										TYPE_PTRMEMFUNC_P: 258
 5868 																																										cp_convert_to_pointer: 3297
 5869 																																										convert_to_real: 719
 5870 																																										IS_AGGR_TYPE_CODE: 5129
 5871 																																										TYPE_LANG_SPECIFIC: 370
 5872 																																										IS_SIGNATURE_POINTER: <>
 5873 																																										IS_SIGNATURE_REFERENCE: <>
 5874 																																										build_signature_pointer_constructor: tree (), <./cc/cp/sig.c 768>
 5875 																																											TREE_CODE: 162
 5876 																																											TREE_TYPE: 160
 5877 																																											SIGNATURE_TYPE: <>
 5878 																																											TYPE_LANG_SPECIFIC: 370
 5879 																																											IS_SIGNATURE_POINTER: <>
 5880 																																											IS_SIGNATURE_REFERENCE: <>
 5881 																																											error: 52
 5882 																																											TYPE_SIZE: if (), <./cc/dwarfout.c 3636>
 5883 																																											cp_error: 259
 5884 																																											TREE_PERMANENT: if (), <./cc/cp/decl.c 10271>
 5885 																																											build_optr_ref: 3288
 5886 																																											build_sptr_ref: tree (), <./cc/cp/sig.c 1043>
 5887 																																												get_identifier: <>
 5888 																																												build_component_ref: 159
 5889 																																											build1: 334
 5890 																																											build_sigtable: tree (), <./cc/cp/sig.c 689>
 5891 																																												init_expr: void (), <./cc/expr.c 329>
 5892 																																													init_queue: void (), <./cc/expr.c 541>
 5893 																																														abort: <>
 5894 																																												push_obstacks_nochange: 517
 5895 																																												end_temporary_allocation: 1463
 5896 																																												IS_SIGNATURE: 1061
 5897 																																												get_sigtable_name: tree (), <./cc/cp/sig.c 261>
 5898 																																													build_typename_overload: 764
 5899 																																													alloca: <>
 5900 																																													IDENTIFIER_LENGTH: <>
 5901 																																													IDENTIFIER_POINTER: <>
 5902 																																													IS_SIGNATURE: 1061
 5903 																																													sprintf: <>
 5904 																																													get_identifier: <>
 5905 																																												IDENTIFIER_GLOBAL_VALUE: <>
 5906 																																												SIGNATURE_HAS_OPAQUE_TYPEDECLS: <>
 5907 																																												SIGTABLE_HAS_BEEN_GENERATED: <>
 5908 																																												error: 52
 5909 																																												build_signature_table_constructor: tree (), <./cc/cp/sig.c 442>
 5910 																																													TREE_TYPE: 160
 5911 																																													TYPE_FIELDS: <>
 5912 																																													IS_SIGNATURE: 1061
 5913 																																													CLASSTYPE_TAGS: <>
 5914 																																													sorry: <>
 5915 																																													TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 5916 																																													TREE_CODE: 162
 5917 																																													TYPE_MAIN_VARIANT: 324
 5918 																																													DECL_NAME: 250
 5919 																																													lookup_field: <>
 5920 																																													cp_error: 259
 5921 																																													undo_casts: void (), <./cc/cp/sig.c 424>
 5922 																																														TYPE_FIELDS: <>
 5923 																																														TREE_CODE: 162
 5924 																																														TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 5925 																																														TYPE_MAIN_VARIANT: 324
 5926 																																														TREE_TYPE: 160
 5927 																																													DECL_MEMFUNC_POINTING_TO: <>
 5928 																																													TYPE_BINFO: if (), <./cc/cp/search.c 454>
 5929 																																													lookup_fnfields: <>
 5930 																																													IS_DEFAULT_IMPLEMENTATION: <>
 5931 																																													TREE_PURPOSE: 215
 5932 																																													TREE_VALUE: <>
 5933 																																													DECL_STATIC_FUNCTION_P: 2808
 5934 																																													match_method_types: int (), <./cc/cp/sig.c 384>
 5935 																																														TREE_TYPE: 160
 5936 																																														TYPE_ARG_TYPES: 791
 5937 																																														comptypes: 1133
 5938 																																														TYPE_FIELDS: <>
 5939 																																														TREE_VALUE: <>
 5940 																																														TREE_CODE: 162
 5941 																																														TYPE_READONLY: 217
 5942 																																														TYPE_VOLATILE: <>
 5943 																																														TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 5944 																																														compparms: <>
 5945 																																													compute_access: <>
 5946 																																													error: 52
 5947 																																													TYPE_NAME_STRING: <>
 5948 																																													fndecl_as_string: char * (), <./cc/cp/error.c 1324>
 5949 																																														decl_as_string: 251
 5950 																																													DECL_MEMFUNC_POINTER_TO: <>
 5951 																																													build_component_ref: 159
 5952 																																													index: 3554
 5953 																																													build_unary_op: <>
 5954 																																													TREE_ADDRESSABLE: <>
 5955 																																													DECL_VINDEX: <>
 5956 																																													BINFO_OFFSET: <>
 5957 																																													get_binfo: <>
 5958 																																													DECL_CLASS_CONTEXT: <>
 5959 																																													get_vfield_offset: tree (), <./cc/cp/class.c 1156>
 5960 																																														size_binop: <>
 5961 																																														DECL_FIELD_BITPOS: <>
 5962 																																														CLASSTYPE_VFIELD: <>
 5963 																																														BINFO_TYPE: <>
 5964 																																														size_int: <>
 5965 																																														BINFO_OFFSET: <>
 5966 																																													DECL_CONTEXT: 267
 5967 																																													convert: 427
 5968 																																													build_tree_list: <>
 5969 																																													tree_cons: <>
 5970 																																													build: <>
 5971 																																													TREE_CONSTANT: if (), <./cc/fold-const.c 3102>
 5972 																																													build_nt: <>
 5973 																																													nreverse: <>
 5974 																																													TREE_HAS_CONSTRUCTOR: <>
 5975 																																												TREE_CODE: 162
 5976 																																												pushdecl_top_level: <>
 5977 																																												build_decl: 888
 5978 																																												store_init_value: 2543
 5979 																																												DECL_INITIAL: 168
 5980 																																												DECL_ALIGN: <>
 5981 																																												MAX: <>
 5982 																																												TYPE_ALIGN: <>
 5983 																																												TREE_READONLY: if (), <./cc/cp/decl2.c 1229>
 5984 																																												TREE_STATIC: if (), <./cc/stor-layout.c 332>
 5985 																																												TREE_USED: <>
 5986 																																												make_decl_rtl: 1326
 5987 																																												expand_static_init: 3602
 5988 																																												pop_obstacks: 396
 5989 																																											copy_node: 874
 5990 																																											build_unary_op: <>
 5991 																																											build_pointer_type: 390
 5992 																																											tree_cons: <>
 5993 																																											build_tree_list: <>
 5994 																																											build_nt: <>
 5995 																																											TREE_HAS_CONSTRUCTOR: <>
 5996 																																											digest_init: 2175
 5997 																																											TREE_READONLY: if (), <./cc/cp/decl2.c 1229>
 5998 																																											TYPE_READONLY: 217
 5999 																																											readonly_error: void (), <./cc/cp/typeck2.c 102>
 6000 																																												pedwarn: <>
 6001 																																												error: 52
 6002 																																												TREE_CODE: 162
 6003 																																												TYPE_READONLY: 217
 6004 																																												TREE_TYPE: 160
 6005 																																												TREE_OPERAND: <>
 6006 																																												lang_printable_name: char * (), <./cc/cp/tree.c 1513>
 6007 																																													TREE_CODE: 162
 6008 																																													DECL_LANG_SPECIFIC: if (), <./cc/cp/decl.c 2992>
 6009 																																													decl_as_string: 251
 6010 																																													my_friendly_abort: 357
 6011 																																													free: <>
 6012 																																													DECL_CONSTRUCTOR_P: if (), <./cc/cp/decl2.c 951>
 6013 																																													DESTRUCTOR_NAME_P: <>
 6014 																																													DECL_ASSEMBLER_NAME: <>
 6015 																																													malloc: <>
 6016 																																													strlen: <>
 6017 																																													strcpy: <>
 6018 																																												DECL_LANG_SPECIFIC: if (), <./cc/cp/decl.c 2992>
 6019 																																												DECL_IN_AGGR_P: if (), <./cc/cp/decl2.c 1860>
 6020 																																												TREE_STATIC: if (), <./cc/stor-layout.c 332>
 6021 																																											build_modify_expr: <>
 6022 																																											build_compound_expr: <>
 6023 																																										SIGNATURE_TYPE: <>
 6024 																																										get_temp_name: 3609
 6025 																																										DECL_INITIAL: 168
 6026 																																										CLEAR_SIGNATURE: <>
 6027 																																										cp_finish_decl: 3002
 6028 																																										SET_SIGNATURE: <>
 6029 																																										TREE_READONLY: if (), <./cc/cp/decl2.c 1229>
 6030 																																										DERIVED_FROM_P: <>
 6031 																																										TYPE_HAS_CONVERSION: <>
 6032 																																										TYPE_HAS_CONSTRUCTOR: else if (), <./cc/cp/typeck.c 5733>
 6033 																																										build_method_call: <>
 6034 																																										constructor_name_full: <>
 6035 																																										build_tree_list: <>
 6036 																																										TYPE_BINFO: if (), <./cc/cp/search.c 454>
 6037 																																										build_cplus_new: 5748
 6038 																																										index_type_equal: int (), <./cc/tree.c 3759>
 6039 																																											TREE_CODE: 162
 6040 																																											TYPE_PRECISION: 211
 6041 																																											TYPE_MODE: <>
 6042 																																											simple_cst_equal: 235
 6043 																																											TYPE_SIZE: if (), <./cc/dwarfout.c 3636>
 6044 																																											TYPE_ALIGN: <>
 6045 																																											TYPE_MIN_VALUE: <>
 6046 																																											TYPE_MAX_VALUE: <>
 6047 																																										TYPE_DOMAIN: <>
 6048 																																								TREE_CODE: 162
 6049 																																								TREE_OVERFLOW: <>
 6050 																																								signed_type: 701
 6051 																																								warning: 281
 6052 																																								TREE_SIDE_EFFECTS: if (), <./cc/cp/typeck.c 4958>
 6053 																																								build: <>
 6054 																																								TREE_TYPE: 160
 6055 																																								STRIP_NOPS: <>
 6056 																																								TREE_INT_CST_LOW: <>
 6057 																																								TREE_INT_CST_HIGH: <>
 6058 																																								integer_zerop: 405
 6059 																																								TREE_REALPART: <>
 6060 																																								TREE_IMAGPART: <>
 6061 																																								cp_pedwarn: 1314
 6062 																																							get_base_distance: <>
 6063 																																							cp_error: 259
 6064 																																							build_vbase_path: 2084
 6065 																																							build1: 334
 6066 																																							TREE_OPERAND: <>
 6067 																																							TREE_CONSTANT: if (), <./cc/fold-const.c 3102>
 6068 																																					build: <>
 6069 																																					build_indirect_ref: 329
 6070 																																					require_complete_type: 345
 6071 																																				error: 52
 6072 																																				warning: 281
 6073 																																				TREE_READONLY: if (), <./cc/cp/decl2.c 1229>
 6074 																																				TYPE_READONLY: 217
 6075 																																				TREE_SIDE_EFFECTS: if (), <./cc/cp/typeck.c 4958>
 6076 																																				TYPE_VOLATILE: <>
 6077 																																				TREE_THIS_VOLATILE: <>
 6078 																																			TYPE_LANG_SPECIFIC: 370
 6079 																																			TYPE_HAS_ASSIGNMENT: else if (), <./cc/cp/typeck.c 5757>
 6080 																																			build_opfncall: 3433
 6081 																																			make_node: 307
 6082 																																			TYPE_USES_VIRTUAL_BASECLASSES: <>
 6083 																																			TYPE_GETS_ASSIGNMENT: <>
 6084 																																			TYPE_GETS_INIT_REF: <>
 6085 																																			BINFO_BASETYPES: <>
 6086 																																			TYPE_BINFO: if (), <./cc/cp/search.c 454>
 6087 																																			TREE_VEC_LENGTH: <>
 6088 																																			TREE_VEC_ELT: <>
 6089 																																			TREE_VIA_VIRTUAL: 1041
 6090 																																			get_base_ref: <>
 6091 																																			BINFO_INHERITANCE_CHAIN: <>
 6092 																																			build_modify_expr_1: <>
 6093 																																			TREE_CODE: 162
 6094 																																			build_compound_expr: <>
 6095 																																			tree_cons: <>
 6096 																																			TYPE_FIELDS: <>
 6097 																																			TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 6098 																																			DECL_NAME: 250
 6099 																																			VFIELD_NAME_P: <>
 6100 																																			VBASE_NAME_P: <>
 6101 																																			TREE_READONLY: if (), <./cc/cp/decl2.c 1229>
 6102 																																			TREE_TYPE: 160
 6103 																																			cp_error: 259
 6104 																																			cp_error_at: 1225
 6105 																																			IS_AGGR_TYPE: else if (), <./cc/cp/typeck.c 6140>
 6106 																																			CLASSTYPE_VBASECLASSES: <>
 6107 																																			build: <>
 6108 																																			build_unary_op: <>
 6109 																																			convert_pointer_to: 381
 6110 																																			TREE_VALUE: <>
 6111 																																			TREE_SIDE_EFFECTS: if (), <./cc/cp/typeck.c 4958>
 6112 																																		TYPE_OBSTACK: <>
 6113 																																		TYPE_ATTRIBUTES: <>
 6114 																																		SET_DEFAULT_TYPE_ATTRIBUTES: <>
 6115 																																		TREE_CONSTANT: if (), <./cc/fold-const.c 3102>
 6116 																																	pushtag: 2293
 6117 																																	warning: 281
 6118 																																	error: 52
 6119 																																TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 6120 																																TREE_VALUE: <>
 6121 																																TREE_CODE: 162
 6122 																																IS_AGGR_TYPE_CODE: 5129
 6123 																																my_friendly_assert: 379
 6124 																																TYPE_NAME: 271
 6125 																																TYPE_SIZE: if (), <./cc/dwarfout.c 3636>
 6126 																																cp_error: 259
 6127 																																ANON_AGGRNAME_P: <>
 6128 																																TYPE_IDENTIFIER: <>
 6129 																																TYPE_FIELDS: <>
 6130 																																grokdeclarator: 1602
 6131 																																finish_anon_union: void (), <./cc/cp/decl2.c 2264>
 6132 																																	TREE_TYPE: 160
 6133 																																	TREE_PUBLIC: 194
 6134 																																	TREE_STATIC: if (), <./cc/stor-layout.c 332>
 6135 																																	DECL_EXTERNAL: else if (), <./cc/dwarfout.c 3220>
 6136 																																	TYPE_FIELDS: <>
 6137 																																	error: 52
 6138 																																	TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 6139 																																	TREE_CODE: 162
 6140 																																	TREE_PRIVATE: <>
 6141 																																	cp_pedwarn_at: 1317
 6142 																																	TREE_PROTECTED: else if (), <./cc/cp/search.c 906>
 6143 																																	build_decl: 888
 6144 																																	DECL_NAME: 250
 6145 																																	DECL_INITIAL: 168
 6146 																																	pushdecl: <>
 6147 																																	simple_cst_equal: 235
 6148 																																	DECL_SIZE: <>
 6149 																																	TREE_ASM_WRITTEN: else if (), <./cc/dwarfout.c 3566>
 6150 																																	tree_cons: <>
 6151 																																	make_decl_rtl: 1326
 6152 																																	toplevel_bindings_p: 1614
 6153 																																	DECL_RTL: <>
 6154 																																	warning: 281
 6155 																																	expand_anon_union_decl: <>
 6156 																																	cadillac_finish_anon_union: void (), <./cc/cp/edsel.c 876>
 6157 																																		global_bindings_p: 1509
 6158 																																		cadillac_printf: 2497
 6159 																																		CWriteHeader: <>
 6160 																																		CWriteLength: <>
 6161 																																		CWriteTopLevel: 2503
 6162 																																		CWriteRequestBuffer: <>
 6163 																																		cadillac_process_requests: 2524
 6164 																															build_tree_list: <>
 6165 																															CLASSTYPE_GOT_SEMICOLON: <>
 6166 																															TREE_CODE: 162
 6167 																															build_function_type: 1210
 6168 																															TYPE_ARG_TYPES: 791
 6169 																															build_cplus_method_type: 1056
 6170 																															build_type_variant: 1000
 6171 																															TYPE_METHOD_BASETYPE: <>
 6172 																															TREE_READONLY: if (), <./cc/cp/decl2.c 1229>
 6173 																															TREE_SIDE_EFFECTS: if (), <./cc/cp/typeck.c 4958>
 6174 																															TREE_TYPE: 160
 6175 																														TYPE_MAIN_VARIANT: 324
 6176 																														dump_type: 3039
 6177 																														DECL_NAME: 250
 6178 																														VTABLE_NAME_P: <>
 6179 																														DECL_CONTEXT: 267
 6180 																														dump_type_prefix: 3155
 6181 																														OB_PUTC: <>
 6182 																														dump_readonly_or_volatile: 3124
 6183 																														TREE_CODE_CLASS: switch (), <./cc/dwarfout.c 3160>
 6184 																														OB_PUTC2: <>
 6185 																														dump_decl: 253
 6186 																														dump_type_suffix: 3177
 6187 																														OB_PUTID: <>
 6188 																														TREE_OPERAND: <>
 6189 																														my_friendly_abort: 357
 6190 																														DESTRUCTOR_NAME_P: <>
 6191 																														ident_fndecl: tree (), <./cc/cp/error.c 515>
 6192 																															lookup_name: 1474
 6193 																															TREE_CODE: 162
 6194 																															TREE_VALUE: <>
 6195 																															my_friendly_abort: 357
 6196 																														DECL_LANGUAGE: 1293
 6197 																														IDENTIFIER_TYPENAME_P: 5116
 6198 																														IDENTIFIER_OPNAME_P: <>
 6199 																														operator_name_string: 5117
 6200 																														OB_PUTCP: <>
 6201 																														GLOBAL_IORD_P: <>
 6202 																														DECL_ASSEMBLER_NAME: <>
 6203 																														dump_global_iord: void (), <./cc/cp/error.c 547>
 6204 																															IDENTIFIER_POINTER: <>
 6205 																															OB_PUTS: <>
 6206 																															my_friendly_abort: 357
 6207 																															OB_PUTCP: <>
 6208 																															OB_PUTC: <>
 6209 																														dump_function_decl: void (), <./cc/cp/error.c 764>
 6210 																															DECL_ASSEMBLER_NAME: <>
 6211 																															TREE_TYPE: 160
 6212 																															TYPE_ARG_TYPES: 791
 6213 																															DECL_CONTEXT: 267
 6214 																															DECL_CLASS_CONTEXT: <>
 6215 																															TREE_CODE: 162
 6216 																															TREE_VALUE: <>
 6217 																															DECL_STATIC_FUNCTION_P: 2808
 6218 																															OB_PUTS: <>
 6219 																															IDENTIFIER_TYPENAME_P: 5116
 6220 																															DECL_CONSTRUCTOR_P: if (), <./cc/cp/decl2.c 951>
 6221 																															DESTRUCTOR_NAME_P: <>
 6222 																															dump_type_prefix: 3155
 6223 																															OB_PUTC: <>
 6224 																															dump_type: 3039
 6225 																															OB_PUTC2: <>
 6226 																															TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 6227 																															DECL_CONSTRUCTOR_FOR_VBASE_P: if (), <./cc/cp/decl2.c 1033>
 6228 																															DECL_LANGUAGE: 1293
 6229 																															dump_function_name: void (), <./cc/cp/error.c 839>
 6230 																																DECL_NAME: 250
 6231 																																DESTRUCTOR_NAME_P: <>
 6232 																																DECL_ASSEMBLER_NAME: <>
 6233 																																DECL_LANGUAGE: 1293
 6234 																																OB_PUTC: <>
 6235 																																dump_decl: 253
 6236 																																IDENTIFIER_TYPENAME_P: 5116
 6237 																																OB_PUTS: <>
 6238 																																dump_type: 3039
 6239 																																TREE_TYPE: 160
 6240 																																IDENTIFIER_OPNAME_P: <>
 6241 																																operator_name_string: 5117
 6242 																																OB_PUTCP: <>
 6243 																															dump_type_suffix: 3177
 6244 																															IS_SIGNATURE: 1061
 6245 																															dump_readonly_or_volatile: 3124
 6246 																															TYPE_FIELDS: <>
 6247 																														DECL_TEMPLATE_PARMS: <>
 6248 																														TREE_VEC_LENGTH: <>
 6249 																														TREE_VEC_ELT: <>
 6250 																														TREE_PURPOSE: 215
 6251 																														TREE_VALUE: <>
 6252 																														OB_UNPUT: <>
 6253 																														DECL_TEMPLATE_IS_CLASS: <>
 6254 																														NEXT_CODE: <>
 6255 																														dump_expr: 3046
 6256 																														DECL_INITIAL: 168
 6257 																														METHOD_DEFINITION: <>
 6258 																														sorry: <>
 6259 																													OB_FINISH: <>
 6260 																													obstack_base: <>
 6261 																												DECL_NAME: 250
 6262 																												strlen: <>
 6263 																												get_identifier: <>
 6264 																											DECL_RTL: <>
 6265 																											TREE_CODE_CLASS: switch (), <./cc/dwarfout.c 3160>
 6266 																									list_length: 1446
 6267 																									TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 6268 																									lookup_attribute: 222
 6269 																									IDENTIFIER_POINTER: <>
 6270 																									TREE_PURPOSE: 215
 6271 																									copy_node: 874
 6272 																									TREE_CODE: 162
 6273 																									type_for_size: <>
 6274 																									TYPE_PRECISION: 211
 6275 																									TREE_TYPE: 160
 6276 																									common_type: 212
 6277 																									build_type_attribute_variant: 1730
 6278 																									build_complex_type: 1482
 6279 																									TYPE_MAIN_VARIANT: 324
 6280 																									TREE_UNSIGNED: 678
 6281 																									TYPE_READONLY: 217
 6282 																									TYPE_VOLATILE: <>
 6283 																									build_pointer_type: 390
 6284 																									c_build_type_variant: <>
 6285 																									TYPE_DOMAIN: <>
 6286 																									build_array_type: 974
 6287 																									TYPE_ARG_TYPES: 791
 6288 																									build_function_type: 1210
 6289 																									tree_cons: <>
 6290 																									TREE_VALUE: <>
 6291 																									TYPE_FIELDS: <>
 6292 																									comptypes: 1133
 6293 																									pedwarn: <>
 6294 																									cp_build_type_variant: 967
 6295 																									build_reference_type: 1407
 6296 																									build_ptrmemfunc_type: 839
 6297 																									build_cplus_array_type: 972
 6298 																									TYPE_RAISES_EXCEPTIONS: <>
 6299 																									build_exception_variant: 2820
 6300 																									commonparms: 5376
 6301 																									my_friendly_assert: 379
 6302 																									DERIVED_FROM_P: <>
 6303 																									binfo_or_else: tree (), <./cc/cp/typeck2.c 58>
 6304 																										TYPE_MAIN_VARIANT: 324
 6305 																										TYPE_BINFO: if (), <./cc/cp/search.c 454>
 6306 																										get_binfo: <>
 6307 																										error_not_base_type: 3364
 6308 																									compiler_error: 4285
 6309 																									TYPE_OFFSET_BASETYPE: <>
 6310 																									build_cplus_method_type: 1056
 6311 																								signed_or_unsigned_type: tree (), <./cc/cp/typeck.c 1220>
 6312 																									INTEGRAL_TYPE_P: <>
 6313 																									TYPE_PRECISION: 211
 6314 																								TREE_UNSIGNED: 678
 6315 																								convert: 427
 6316 																								operand_equal_p: else if (), <./cc/fold-const.c 2153>
 6317 																									tree_int_cst_lt: 683
 6318 																									range_test: <>
 6319 																									TREE_CODE: 162
 6320 																									save_expr: <>
 6321 																									build: <>
 6322 																									TREE_TYPE: 160
 6323 																							TREE_UNSIGNED: 678
 6324 																							convert: 427
 6325 																							C_PROMOTING_INTEGER_TYPE_P: if (), <./cc/cp/decl.c 11606>
 6326 																							TYPE_MAIN_VARIANT: 324
 6327 																							error: 52
 6328 																							build_unary_op: <>
 6329 																							TREE_CODE_CLASS: switch (), <./cc/dwarfout.c 3160>
 6330 																							TREE_READONLY: if (), <./cc/cp/decl2.c 1229>
 6331 																							TREE_THIS_VOLATILE: <>
 6332 																							TYPE_READONLY: 217
 6333 																							TYPE_VOLATILE: <>
 6334 																							c_build_type_variant: <>
 6335 																							TYPE_POINTER_TO: <>
 6336 																							default_conversion: 165
 6337 																							build: <>
 6338 																							lvalue_p: 2656
 6339 																							TREE_STATIC: if (), <./cc/stor-layout.c 332>
 6340 																							build_pointer_type: 390
 6341 																							build1: 334
 6342 																							mark_addressable: <>
 6343 																							TREE_CONSTANT: if (), <./cc/fold-const.c 3102>
 6344 																							staticp: <>
 6345 																							TREE_SIDE_EFFECTS: if (), <./cc/cp/typeck.c 4958>
 6346 																						TREE_TYPE: 160
 6347 																						TREE_CODE: 162
 6348 																						STRIP_TYPE_NOPS: <>
 6349 																						pointer_int_sum: tree (), <./cc/c-typeck.c 2637>
 6350 																						comp_target_types: int (), <./cc/c-typeck.c 550>
 6351 																							maybe_objc_comptypes: 1173
 6352 																							TYPE_MAIN_VARIANT: 324
 6353 																							TREE_TYPE: 160
 6354 																							TREE_CODE: 162
 6355 																							comp_target_types: 6350
 6356 																							comptypes: 1133
 6357 																							pedwarn: <>
 6358 																							TYPE_READONLY: 217
 6359 																							warn_for_assignment: 406
 6360 																							get_spelling: 413
 6361 																							TYPE_VOLATILE: <>
 6362 																							DECL_IN_SYSTEM_HEADER: <>
 6363 																							build1: 334
 6364 																							integer_zerop: 405
 6365 																						pointer_diff: <>
 6366 																						TREE_UNSIGNED: 678
 6367 																						TREE_INT_CST_LOW: <>
 6368 																						TREE_INT_CST_HIGH: <>
 6369 																						TYPE_PRECISION: 211
 6370 																						TREE_OPERAND: <>
 6371 																						truthvalue_conversion: <>
 6372 																						tree_int_cst_sgn: 688
 6373 																						warning: 281
 6374 																						TYPE_MAIN_VARIANT: 324
 6375 																						convert: 427
 6376 																						common_type: 212
 6377 																						integer_zerop: 405
 6378 																						pedwarn: <>
 6379 																						TYPE_SIZE: if (), <./cc/dwarfout.c 3636>
 6380 																						get_narrower: <>
 6381 																						signed_or_unsigned_type: 6311
 6382 																						int_fits_type_p: <>
 6383 																						shorten_compare: <>
 6384 																						signed_type: 701
 6385 																						binary_op_error: <>
 6386 																						build: <>
 6387 																						fold: <>
 6388 																						TREE_CONSTANT: if (), <./cc/fold-const.c 3102>
 6389 																					convert: 427
 6390 																					TREE_OPERAND: <>
 6391 																					TREE_ADDRESSABLE: <>
 6392 																					DECL_REGISTER: <>
 6393 																					DECL_NONLOCAL: <>
 6394 																					TREE_PUBLIC: 194
 6395 																					error: 52
 6396 																					IDENTIFIER_POINTER: <>
 6397 																					DECL_NAME: 250
 6398 																					pedwarn: <>
 6399 																					C_TYPE_FIELDS_VOLATILE: <>
 6400 																					TREE_TYPE: 160
 6401 																					put_var_into_stack: 5773
 6402 																					DECL_CONTEXT: 267
 6403 																					DECL_ASSEMBLER_NAME: <>
 6404 																					TREE_UNSIGNED: 678
 6405 																					signed_or_unsigned_type: 6311
 6406 																					TYPE_MAX_VALUE: <>
 6407 																					TYPE_MIN_VALUE: <>
 6408 																					signed_type: 701
 6409 																					INT_CST_LT_UNSIGNED: <>
 6410 																					INT_CST_LT: <>
 6411 																					unsigned_type: 699
 6412 																					warning: 281
 6413 																					TREE_SIDE_EFFECTS: if (), <./cc/cp/typeck.c 4958>
 6414 																					build: <>
 6415 																					push_temp_slots: 1914
 6416 																					get_inner_reference: <>
 6417 																					stabilize_reference: <>
 6418 																					TYPE_ALIGN: <>
 6419 																					expand_expr: <>
 6420 																					GET_CODE: 81
 6421 																					abort: <>
 6422 																					change_address: <>
 6423 																					gen_rtx: <>
 6424 																					XEXP: 105
 6425 																					force_reg: <>
 6426 																					MEM_VOLATILE_P: <>
 6427 																					DECL_RELATIVE: <>
 6428 																					build1: 334
 6429 																					store_field: <>
 6430 																					TYPE_MODE: <>
 6431 																					int_size_in_bytes: <>
 6432 																					preserve_temp_slots: <>
 6433 																					free_temp_slots: void (), <./cc/function.c 1165>
 6434 																					pop_temp_slots: 3685
 6435 																					convert_modes: <>
 6436 																					emit_insn: <>
 6437 																					TREE_STATIC: if (), <./cc/stor-layout.c 332>
 6438 																					GET_MODE_SIZE: 461
 6439 																					GET_MODE: 139
 6440 																					emit_move_insn: <>
 6441 																					list_length: 1446
 6442 																					CONSTRUCTOR_ELTS: <>
 6443 																					TYPE_FIELDS: <>
 6444 																					clear_storage: <>
 6445 																					expr_size: <>
 6446 																					TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 6447 																					TREE_PURPOSE: 215
 6448 																					TREE_INT_CST_LOW: <>
 6449 																					DECL_SIZE: <>
 6450 																					DECL_MODE: <>
 6451 																					DECL_BIT_FIELD: if (), <./cc/cp/typeck.c 3863>
 6452 																					DECL_FIELD_BITPOS: <>
 6453 																					contains_placeholder_p: <>
 6454 																					size_binop: <>
 6455 																					size_int: <>
 6456 																					TREE_VALUE: <>
 6457 																					TYPE_SIZE: if (), <./cc/dwarfout.c 3636>
 6458 																					store_expr: <>
 6459 																					comptypes: 1133
 6460 																					cp_error_at: 1225
 6461 																					my_friendly_abort: 357
 6462 																					TYPE_MAIN_VARIANT: 324
 6463 																					IS_AGGR_TYPE: else if (), <./cc/cp/typeck.c 6140>
 6464 																					build_pointer_type: 390
 6465 																					my_friendly_assert: 379
 6466 																					build_unary_op: <>
 6467 																					sorry: <>
 6468 																					get_delta_difference: <>
 6469 																					DECL_FIELD_CONTEXT: <>
 6470 																					TREE_READONLY: if (), <./cc/cp/decl2.c 1229>
 6471 																					DECL_RTL: <>
 6472 																					decl_in_memory_p: int (), <./cc/cp/expr.c 288>
 6473 																						DECL_RTL: <>
 6474 																						GET_CODE: 81
 6475 																					push_obstacks_nochange: 517
 6476 																					end_temporary_allocation: 1463
 6477 																					TREE_ASM_WRITTEN: else if (), <./cc/dwarfout.c 3566>
 6478 																					rest_of_decl_compilation: 2969
 6479 																					IDENTIFIER_LOCAL_VALUE: <>
 6480 																					pop_obstacks: 396
 6481 																					DECL_LANG_SPECIFIC: if (), <./cc/cp/decl.c 2992>
 6482 																					DECL_IN_AGGR_P: if (), <./cc/cp/decl2.c 1860>
 6483 																					DECL_EXTERNAL: else if (), <./cc/dwarfout.c 3220>
 6484 																					DECL_MAIN_VARIANT: <>
 6485 																					DECL_THIS_INLINE: 1311
 6486 																					DECL_PENDING_INLINE_INFO: <>
 6487 																					TREE_CODE_CLASS: switch (), <./cc/dwarfout.c 3160>
 6488 																					CLASSTYPE_INTERFACE_ONLY: <>
 6489 																					mark_inline_for_output: void (), <./cc/cp/decl2.c 2136>
 6490 																						DECL_MAIN_VARIANT: <>
 6491 																						DECL_SAVED_INLINE: <>
 6492 																						my_friendly_assert: 379
 6493 																						TREE_PERMANENT: if (), <./cc/cp/decl.c 10271>
 6494 																						DECL_PENDING_INLINE_INFO: <>
 6495 																						DECL_SAVED_INSNS: <>
 6496 																						perm_tree_cons: <>
 6497 																					TREE_USED: <>
 6498 																					assemble_external: <>
 6499 																					cp_error: 259
 6500 																					get_unwidened: <>
 6501 																					copy_node: 874
 6502 																					DECL_CLASS_CONTEXT: <>
 6503 																					BINFO_OFFSET_ZEROP: if (), <./cc/cp/call.c 290>
 6504 																					TYPE_BINFO: if (), <./cc/cp/search.c 454>
 6505 																					get_binfo: <>
 6506 																					TYPE_METHOD_BASETYPE: <>
 6507 																					error_not_base_type: 3364
 6508 																					DECL_INITIAL: 168
 6509 																					integer_zerop: 405
 6510 																					TREE_CONSTANT: if (), <./cc/fold-const.c 3102>
 6511 																					fold: <>
 6512 																					save_expr: <>
 6513 																				comptypes: 1133
 6514 																				TREE_TYPE: 160
 6515 																				TYPE_ARG_TYPES: 791
 6516 																				DECL_INITIAL: 168
 6517 																				TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 6518 																				TREE_VALUE: <>
 6519 																				TYPE_MAIN_VARIANT: 324
 6520 																				error: 52
 6521 																				C_PROMOTING_INTEGER_TYPE_P: if (), <./cc/cp/decl.c 11606>
 6522 																				cp_error: 259
 6523 																				cp_pedwarn: 1314
 6524 																				build_pointer_type: 390
 6525 																				CLASSTYPE_VBASECLASSES: <>
 6526 																				build_unary_op: <>
 6527 																				IS_AGGR_TYPE: else if (), <./cc/cp/typeck.c 6140>
 6528 																				TREE_SIDE_EFFECTS: if (), <./cc/cp/typeck.c 4958>
 6529 																				save_expr: <>
 6530 																				break_out_cleanups: tree (), <./cc/cp/tree.c 254>
 6531 																					TREE_CODE: 162
 6532 																					TYPE_NEEDS_DESTRUCTOR: <>
 6533 																					TREE_TYPE: 160
 6534 																					build_cplus_new: 5748
 6535 																					TREE_OPERAND: <>
 6536 																				rationalize_conditional_expr: <>
 6537 																				tree_cons: <>
 6538 																				convert: 427
 6539 																				build_reference_type: 1407
 6540 																				convert_pointer_to: 381
 6541 																				TYPE_NONCOPIED_PARTS: <>
 6542 																				init_noncopied_parts: <>
 6543 																				build_modify_expr: <>
 6544 																				TREE_PURPOSE: 215
 6545 																				build_indirect_ref: 329
 6546 																				build_modify_expr_1: <>
 6547 																				TYPE_BINFO: if (), <./cc/cp/search.c 454>
 6548 																				build_compound_expr: <>
 6549 																				TYPE_PTRMEMFUNC_FN_TYPE: <>
 6550 																				comp_target_types: if (), <./cc/cp/typeck.c 1106>
 6551 																				build_ptrmemfunc: <>
 6552 																				build1: 334
 6553 																				TREE_CONSTANT: if (), <./cc/fold-const.c 3102>
 6554 																				build_opfncall: 3433
 6555 																			TREE_CODE: 162
 6556 																			build_component_ref: 159
 6557 																			TREE_OPERAND: <>
 6558 																			build: <>
 6559 																			build_conditional_expr: <>
 6560 																			TYPE_SIZE: if (), <./cc/dwarfout.c 3636>
 6561 																			incomplete_type_error: 348
 6562 																			lookup_field: tree (), <./cc/c-typeck.c 1158>
 6563 																				TYPE_LANG_SPECIFIC: 370
 6564 																				TYPE_FIELDS: <>
 6565 																				DECL_NAME: 250
 6566 																				lookup_field: 6562
 6567 																				TREE_TYPE: 160
 6568 																				TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 6569 																			error: 52
 6570 																			IDENTIFIER_POINTER: <>
 6571 																			TREE_READONLY: if (), <./cc/cp/decl2.c 1229>
 6572 																			TREE_THIS_VOLATILE: <>
 6573 																		build_modify_expr: <>
 6574 																		build_tree_list: <>
 6575 																		get_identifier: <>
 6576 																		TREE_CODE: 162
 6577 																		CLASS_SUPER_NAME: <>
 6578 																		error: 52
 6579 																		IDENTIFIER_POINTER: <>
 6580 																		CLASS_NAME: <>
 6581 																		get_class_reference: tree (), <./cc/objc-act.c 2633>
 6582 																			TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 6583 																			TREE_VALUE: <>
 6584 																			TREE_PURPOSE: 215
 6585 																			build_class_reference_decl: tree (), <./cc/obcp/obcp-act.c 2667>
 6586 																				sprintf: <>
 6587 																				get_identifier: <>
 6588 																				machopic_define_ident: <>
 6589 																				build_decl: 888
 6590 																				DECL_EXTERNAL: else if (), <./cc/dwarfout.c 3220>
 6591 																				TREE_PUBLIC: 194
 6592 																				TREE_USED: <>
 6593 																				TREE_READONLY: if (), <./cc/cp/decl2.c 1229>
 6594 																				DECL_CONTEXT: 267
 6595 																				DECL_ARTIFICIAL: 278
 6596 																				make_decl_rtl: 1326
 6597 																				pushdecl_top_level: <>
 6598 																			perm_tree_cons: <>
 6599 																			add_class_reference: void (), <./cc/obcp/obcp-act.c 2706>
 6600 																				TREE_VALUE: <>
 6601 																				TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 6602 																				perm_tree_cons: <>
 6603 																			build_tree_list: <>
 6604 																			my_build_string: tree (), <./cc/obcp/obcp-act.c 1622>
 6605 																				build_string: tree (), <./cc/tree.c 1422>
 6606 																					make_node: 307
 6607 																					TREE_STRING_LENGTH: <>
 6608 																					TREE_STRING_POINTER: <>
 6609 																					obstack_copy0: <>
 6610 																				TREE_TYPE: 160
 6611 																				build_array_type: 974
 6612 																				build_index_type: 1516
 6613 																				build_int_2: <>
 6614 																				TREE_CONSTANT: if (), <./cc/fold-const.c 3102>
 6615 																				TREE_STATIC: if (), <./cc/stor-layout.c 332>
 6616 																			IDENTIFIER_LENGTH: <>
 6617 																			IDENTIFIER_POINTER: <>
 6618 																			assemble_external: <>
 6619 																			build_function_call: 3506
 6620 																			build_class_reference_decl: tree (), <./cc/objc-act.c 2565>
 6621 																				sprintf: <>
 6622 																				get_identifier: <>
 6623 																				machopic_define_ident: <>
 6624 																				build_decl: 888
 6625 																				DECL_EXTERNAL: else if (), <./cc/dwarfout.c 3220>
 6626 																				TREE_PUBLIC: 194
 6627 																				TREE_USED: <>
 6628 																				TREE_READONLY: if (), <./cc/cp/decl2.c 1229>
 6629 																				DECL_CONTEXT: 267
 6630 																				DECL_ARTIFICIAL: 278
 6631 																				make_decl_rtl: 1326
 6632 																				pushdecl_top_level: <>
 6633 																			add_class_reference: void (), <./cc/objc-act.c 2604>
 6634 																				TREE_VALUE: <>
 6635 																				TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 6636 																				perm_tree_cons: <>
 6637 																			my_build_string: tree (), <./cc/objc-act.c 1602>
 6638 																				build_string: 6605
 6639 																				TREE_TYPE: 160
 6640 																				build_array_type: 974
 6641 																				build_index_type: 1516
 6642 																				build_int_2: <>
 6643 																				TREE_CONSTANT: if (), <./cc/fold-const.c 3102>
 6644 																				TREE_STATIC: if (), <./cc/stor-layout.c 332>
 6645 																		build_indirect_ref: 329
 6646 																		get_orig_class_reference: tree (), <./cc/objc-act.c 2669>
 6647 																			add_class_reference: 6599
 6648 																			build_tree_list: <>
 6649 																			my_build_string: 6604
 6650 																			IDENTIFIER_LENGTH: <>
 6651 																			IDENTIFIER_POINTER: <>
 6652 																			assemble_external: <>
 6653 																			build_function_call: 3506
 6654 																			add_class_reference: 6633
 6655 																			my_build_string: 6637
 6656 																		build_c_cast: <>
 6657 																		TREE_TYPE: 160
 6658 																		chainon: 1712
 6659 																		build_unary_op: <>
 6660 																		build_compound_expr: <>
 6661 																	strcmp: 157
 6662 																abort: <>
 6663 																gen_rtx: <>
 6664 																PATTERN: <>
 6665 																SUBST: <>
 6666 																SET_SRC: 484
 6667 																find_single_use: <>
 6668 																SET_DEST: 87
 6669 																SELECT_CC_MODE: <>
 6670 																REG_USERVAR_P: <>
 6671 																gen_rtx_combine: <>
 6672 															abort: <>
 6673 															GET_CODE: 81
 6674 															INSN_CODE: <>
 6675 															apply_change_group: 533
 6676 														XEXP: 105
 6677 														apply_change_group: 533
 6678 														GET_CODE: 81
 6679 														copy_rtx: <>
 6680 														reg_overlap_mentioned_p: 91
 6681 														SET_DEST: 87
 6682 													GET_MODE_CLASS: 492
 6683 													GET_MODE: 139
 6684 													lookup: hash_table_entry * (), <./cc/protoize.c 1154>
 6685 													safe_hash: unsigned (), <./cc/cse.c 2021>
 6686 														canon_hash: unsigned (), <./cc/cse.c 1865>
 6687 															GET_CODE: 81
 6688 															REGNO: 93
 6689 															INTVAL: 129
 6690 															GET_MODE: 139
 6691 															GET_RTX_LENGTH: <>
 6692 															XINT: <>
 6693 															CONST_DOUBLE_LOW: <>
 6694 															CONST_DOUBLE_HIGH: <>
 6695 															XEXP: 105
 6696 															XSTR: <>
 6697 															MEM_VOLATILE_P: <>
 6698 															RTX_UNCHANGING_P: It is correct to set, <./cc/stmt.c 3489>
 6699 															MEM_IN_STRUCT_P: <>
 6700 															GET_RTX_FORMAT: <>
 6701 															canon_hash: 6686
 6702 															XVECLEN: <>
 6703 															XVECEXP: <>
 6704 															abort: <>
 6705 													exp_equiv_p: int (), <./cc/cse.c 2051>
 6706 														GET_CODE: 81
 6707 														CONSTANT_P: 118
 6708 														REGNO_QTY_VALID_P: <>
 6709 														REGNO: 93
 6710 														GET_MODE: 139
 6711 														rtx_equal_p: 143
 6712 														INTVAL: 129
 6713 														XEXP: 105
 6714 														XSTR: <>
 6715 														HARD_REGNO_NREGS: <>
 6716 														exp_equiv_p: 6705
 6717 														GET_RTX_FORMAT: <>
 6718 														GET_RTX_LENGTH: <>
 6719 														XVECLEN: <>
 6720 														XVECEXP: <>
 6721 														strcmp: 157
 6722 														XINT: <>
 6723 														XWINT: <>
 6724 														abort: <>
 6725 													GET_MODE_BITSIZE: 447
 6726 													NONZERO_BASE_PLUS_P: <>
 6727 													XEXP: 105
 6728 													reverse_condition: <>
 6729 													gen_rtx: <>
 6730 													plus_constant: <>
 6731 													RTX_UNCHANGING_P: It is correct to set, <./cc/stmt.c 3489>
 6732 													REGNO: 93
 6733 													output_asm_insn: 94
 6734 													abort: <>
 6735 													SET_DEST: 87
 6736 												CONST_DOUBLE_HIGH: <>
 6737 												CONST_DOUBLE_LOW: <>
 6738 												output_operand_lossage: void (), <./cc/final.c 2326>
 6739 												simplify_subtraction: rtx (), <./cc/varasm.c 3142>
 6740 													decode_rtx_const: void (), <./cc/varasm.c 3052>
 6741 														GET_CODE: 81
 6742 														GET_MODE: 139
 6743 														CONST_DOUBLE_LOW: <>
 6744 														CONST_DOUBLE_HIGH: <>
 6745 														INTVAL: 129
 6746 														decode_rtx_const: 6740
 6747 														XEXP: 105
 6748 														abort: <>
 6749 													GET_MODE: 139
 6750 													XEXP: 105
 6751 													GEN_INT: <>
 6752 											fprintf: <>
 6753 											REGNO: 93
 6754 											GET_CODE: 81
 6755 											gen_rtx: <>
 6756 											plus_constant: <>
 6757 											INTVAL: 129
 6758 										INTVAL: 129
 6759 										gen_rtx: <>
 6760 										form_sum: <>
 6761 										GET_MODE: 139
 6762 										REG_NOTE_KIND: switch (), <./cc/sched.c 4292>
 6763 										GET_MODE_SIZE: 461
 6764 										PUSH_ROUNDING: <>
 6765 											anti_adjust_stack: <>
 6766 											GEN_INT: <>
 6767 											move_by_pieces: <>
 6768 											gen_rtx: <>
 6769 											gen_push_operand: rtx (), <./cc/expr.c 2082>
 6770 											INTVAL: 129
 6771 										SUBREG_REG: <>
 6772 										emit_insn_before: <>
 6773 										INTEGRAL_MODE_P: <>
 6774 										LOAD_EXTEND_OP: <>
 6775 										SUBREG_WORD: <>
 6776 										MIN: <>
 6777 										PUT_MODE: <>
 6778 										ASM_OPERANDS_INPUT_VEC: <>
 6779 										alloca: <>
 6780 										XVECLEN: <>
 6781 										ASM_OPERANDS_INPUT_LENGTH: <>
 6782 										ASM_OPERANDS_INPUT: <>
 6783 										gen_rtvec_v: rtvec (), <./cc/emit-rtl.c 438>
 6784 											rtvec_alloc: 3756
 6785 										ASM_OPERANDS_TEMPLATE: <>
 6786 										ASM_OPERANDS_OUTPUT_CONSTRAINT: <>
 6787 										ASM_OPERANDS_OUTPUT_IDX: <>
 6788 										ASM_OPERANDS_INPUT_CONSTRAINT_VEC: <>
 6789 										ASM_OPERANDS_SOURCE_FILE: <>
 6790 										ASM_OPERANDS_SOURCE_LINE: <>
 6791 										SET_DEST: 87
 6792 										SET_SRC: 484
 6793 										emit_insn_after: <>
 6794 										GET_RTX_FORMAT: <>
 6795 										GET_RTX_LENGTH: <>
 6796 										rtx_alloc: 172
 6797 										bcopy: <>
 6798 										XVECEXP: <>
 6799 										XVEC: <>
 6800 									GET_MODE_SIZE: 461
 6801 									GET_MODE: 139
 6802 									SUBREG_REG: <>
 6803 									MIN: <>
 6804 									plus_constant: <>
 6805 									gen_rtx: <>
 6806 									RTX_UNCHANGING_P: It is correct to set, <./cc/stmt.c 3489>
 6807 									find_reloads_address: <>
 6808 									legitimize_pic_address: rtx (), <./cc/config/sparc/sparc.c 1126>
 6809 										gen_reg_rtx: 523
 6810 										GET_CODE: 81
 6811 										XEXP: 105
 6812 										legitimize_pic_address: 6808
 6813 										abort: <>
 6814 										SMALL_INT: <>
 6815 										plus_constant_for_output: <>
 6816 										INTVAL: 129
 6817 										force_reg: <>
 6818 										gen_rtx: <>
 6819 										machopic_legitimize_pic_address: rtx (), <./cc/config/next/machopic.c 543>
 6820 											GET_CODE: 81
 6821 											machopic_indirect_data_reference: rtx (), <./cc/config/next/machopic.c 343>
 6822 												GET_CODE: 81
 6823 												XSTR: <>
 6824 												machopic_name_defined_p: int (), <./cc/config/next/machopic.c 167>
 6825 												gen_rtx: <>
 6826 												machopic_function_base_name: char * (), <./cc/config/next/machopic.c 194>
 6827 													IDENTIFIER_POINTER: <>
 6828 													DECL_ASSEMBLER_NAME: <>
 6829 													strchr: <>
 6830 													sprintf: <>
 6831 												gen_reg_rtx: 523
 6832 												abort: <>
 6833 												emit_insn: <>
 6834 												get_last_insn: 1981
 6835 												find_reg_note: <>
 6836 												XEXP: 105
 6837 												REG_NOTES: <>
 6838 												machopic_non_lazy_ptr_name: char * (), <./cc/config/next/machopic.c 219>
 6839 													get_identifier: <>
 6840 													TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 6841 													TREE_VALUE: <>
 6842 													IDENTIFIER_POINTER: <>
 6843 													TREE_PURPOSE: 215
 6844 													strcpy: <>
 6845 													strcat: <>
 6846 													perm_tree_cons: <>
 6847 													TREE_USED: <>
 6848 												RTX_UNCHANGING_P: It is correct to set, <./cc/stmt.c 3489>
 6849 												machopic_indirect_data_reference: 6821
 6850 												INT_14_BITS: <>
 6851 												plus_constant_for_output: <>
 6852 												INTVAL: 129
 6853 												force_reg: <>
 6854 												emit_move_insn: <>
 6855 												GET_MODE: 139
 6856 												REGNO: 93
 6857 											XEXP: 105
 6858 											force_reg: <>
 6859 											emit_move_insn: <>
 6860 											gen_rtx: <>
 6861 											machopic_function_base_name: 6826
 6862 											abort: <>
 6863 											gen_reg_rtx: 523
 6864 											emit_insn: <>
 6865 											GET_MODE: 139
 6866 											RTX_UNCHANGING_P: It is correct to set, <./cc/stmt.c 3489>
 6867 											machopic_legitimize_pic_address: 6819
 6868 											INT_14_BITS: <>
 6869 											plus_constant_for_output: <>
 6870 											INTVAL: 129
 6871 										emit_insn: <>
 6872 										gen_rtvec: <>
 6873 										RTX_UNCHANGING_P: It is correct to set, <./cc/stmt.c 3489>
 6874 										emit_move_insn: <>
 6875 										REG_NOTES: <>
 6876 								output_operand_lossage: void (), <./cc/final.c 2326>
 6877 								assemble_name: <>
 6878 							output_address: void (), <./cc/final.c 2586>
 6879 								walk_alter_subreg: <>
 6880 								PRINT_OPERAND_ADDRESS: <>
 6881 							CONSTANT_ADDRESS_P: if (), <./cc/config/i386/i386.c 2571>
 6882 							output_addr_const: 119
 6883 							output_operand: void (), <./cc/final.c 2565>
 6884 								GET_CODE: 81
 6885 								alter_subreg: <>
 6886 								REGNO: 93
 6887 								abort: <>
 6888 								PRINT_OPERAND: <>
 6889 							GET_CODE: 81
 6890 							INTVAL: 129
 6891 							PRINT_OPERAND_PUNCT_VALID_P: <>
 6892 							strchr: <>
 6893 						singlemove_string: char * (), <./cc/config/sparc/sparc.c 1498>
 6894 							GET_CODE: 81
 6895 							GET_MODE: 139
 6896 							abort: <>
 6897 							REAL_VALUE_FROM_CONST_DOUBLE: <>
 6898 							REAL_VALUE_TO_TARGET_SINGLE: <>
 6899 							GEN_INT: <>
 6900 							INTVAL: 129
 6901 							VAL_14_BITS_P: if (), <./cc/config/pa/pa.c 2180>
 6902 							zdepi_cint_p: <>
 6903 							gen_rtx: <>
 6904 							CONST_OK_FOR_LETTER_P: <>
 6905 					SUBREG_REG: <>
 6906 					SUBREG_WORD: <>
 6907 					CONSTANT_P: 118
 6908 					GET_RTX_FORMAT: <>
 6909 					GET_RTX_LENGTH: <>
 6910 					reg_overlap_mentioned_p: 91
 6911 					XEXP: 105
 6912 					reg_mentioned_p: else if (), <./cc/loop.c 5796>
 6913 					abort: <>
 6914 					HARD_REGNO_NREGS: <>
 6915 					GET_MODE: 139
 6916 					refers_to_regno_p: int (), <./cc/rtlanal.c 670>
 6917 						GET_CODE: 81
 6918 						REGNO: 93
 6919 						HARD_REGNO_NREGS: <>
 6920 						GET_MODE: 139
 6921 						SUBREG_REG: <>
 6922 						SUBREG_WORD: <>
 6923 						SET_DEST: 87
 6924 						refers_to_regno_p: 6916
 6925 						SET_SRC: 484
 6926 						GET_RTX_FORMAT: <>
 6927 						GET_RTX_LENGTH: <>
 6928 						XEXP: 105
 6929 						XVECLEN: <>
 6930 						XVECEXP: <>
 6931 				SET_DEST: 87
 6932 				SET_SRC: 484
 6933 				INSN_CUID: <>
 6934 				SUBST: <>
 6935 				XEXP: 105
 6936 			SUBREG_REG: <>
 6937 			REGNO: 93
 6938 			XEXP: 105
 6939 			gen_lowpart_if_possible: <>
 6940 			INTVAL: 129
 6941 			CONST_DOUBLE_LOW: <>
 6942 			CONST_DOUBLE_HIGH: <>
 6943 			REAL_VALUE_FROM_INT: <>
 6944 			real_value_truncate: REAL_VALUE_TYPE (), <./cc/fold-const.c 712>
 6945 				REAL_VALUE_TRUNCATE: <>
 6946 			CONST_DOUBLE_FROM_REAL_VALUE: <>
 6947 			GET_MODE_BITSIZE: 447
 6948 			GET_MODE_MASK: <>
 6949 			REAL_VALUE_FROM_UNSIGNED_INT: <>
 6950 			setjmp: else if (), <./cc/fold-const.c 1489>
 6951 			set_float_handler: 494
 6952 			REAL_VALUE_FROM_CONST_DOUBLE: <>
 6953 			REAL_ARITHMETIC: <>
 6954 			rtx_to_tree_code: <>
 6955 			MIN: <>
 6956 			MAX: <>
 6957 			abort: <>
 6958 			NEXT_INSN: <>
 6959 			LABEL_NUSES: <>
 6960 			delete_insn: <>
 6961 			prev_nonnote_insn: 4509
 6962 			cse_end_of_basic_block: void (), <./cc/cse.c 8024>
 6963 				INSN_CUID: <>
 6964 				GET_RTX_CLASS: 141
 6965 				GET_CODE: 81
 6966 				next_real_insn: 553
 6967 				NOTE_LINE_NUMBER: 177
 6968 				PATTERN: <>
 6969 				XVECLEN: <>
 6970 				INSN_UID: <>
 6971 				JUMP_LABEL: 3730
 6972 				SET_SRC: 484
 6973 				LABEL_NUSES: <>
 6974 				NEXT_INSN: <>
 6975 				PREV_INSN: <>
 6976 				PUT_MODE: <>
 6977 			PREV_INSN: <>
 6978 			SET_SRC: 484
 6979 			INSN_REF_COUNT: <>
 6980 			priority: int (), <./cc/sched.c 1425>
 6981 				GET_RTX_CLASS: 141
 6982 				GET_CODE: 81
 6983 				INSN_PRIORITY: <>
 6984 				SCHED_GROUP_P: if (), <./cc/sched.c 3907>
 6985 				PREV_INSN: <>
 6986 				INSN_REF_COUNT: <>
 6987 				LOG_LINKS: <>
 6988 				XEXP: 105
 6989 				INSN_DELETED_P: <>
 6990 				remove_dependence: void (), <./cc/sched.c 960>
 6991 					LOG_LINKS: <>
 6992 					XEXP: 105
 6993 					abort: <>
 6994 				LINK_COST_FREE: <>
 6995 				LINK_COST_ZERO: <>
 6996 				priority: 6980
 6997 				insn_cost: int (), <./cc/sched.c 1363>
 6998 					INSN_COST: <>
 6999 					recog_memoized: 538
 7000 					INSN_CODE: <>
 7001 					result_ready_cost: <>
 7002 					LINK_COST_FREE: <>
 7003 					LINK_COST_ZERO: <>
 7004 					ADJUST_COST: <>
 7005 				prepare_unit: <>
 7006 				insn_unit: int (), <./cc/sched.c 1099>
 7007 					INSN_UNIT: <>
 7008 					recog_memoized: 538
 7009 					INSN_CODE: <>
 7010 					function_units_used: <>
 7011 			INSN_PRIORITY: <>
 7012 			find_insn_list: <>
 7013 			LOG_LINKS: <>
 7014 			add_dependence: void (), <./cc/sched.c 891>
 7015 				NEXT_INSN: <>
 7016 				GET_CODE: 81
 7017 				SCHED_GROUP_P: if (), <./cc/sched.c 3907>
 7018 				LOG_LINKS: <>
 7019 				XEXP: 105
 7020 				REG_NOTE_KIND: switch (), <./cc/sched.c 4292>
 7021 				PUT_REG_NOTE_KIND: <>
 7022 				rtx_alloc: 172
 7023 			SCHED_GROUP_P: if (), <./cc/sched.c 3907>
 7024 			QUEUED_VAR: <>
 7025 			gen_rtx: <>
 7026 			GET_MODE: 139
 7027 			MEM_IN_STRUCT_P: <>
 7028 			RTX_UNCHANGING_P: It is correct to set, <./cc/stmt.c 3489>
 7029 			MEM_VOLATILE_P: <>
 7030 			QUEUED_INSN: <>
 7031 			gen_reg_rtx: 523
 7032 			emit_insn_before: <>
 7033 			gen_move_insn: 4595
 7034 			expand_expr: <>
 7035 			TYPE_MODE: <>
 7036 			TREE_TYPE: 160
 7037 			convert_modes: <>
 7038 			store_bit_field: rtx (), <./cc/expmed.c 221>
 7039 			expand_and: <>
 7040 			GEN_INT: <>
 7041 			build_int_2: <>
 7042 			expand_shift: <>
 7043 			extract_bit_field: <>
 7044 			get_last_insn: 1981
 7045 			GET_MODE_SIZE: 461
 7046 			get_best_mode: enum machine_mode (), <./cc/stor-layout.c 1166>
 7047 			change_address: <>
 7048 			plus_constant: <>
 7049 			force_reg: <>
 7050 			gen_lowpart: <>
 7051 			gen_extv: <>
 7052 			protect_from_queue: <>
 7053 			emit_insn: <>
 7054 			delete_insns_since: <>
 7055 			extract_fixed_bit_field: <>
 7056 			validate_change: 142
 7057 			reg_set_p: 4708
 7058 			reg_mentioned_p: else if (), <./cc/loop.c 5796>
 7059 			PATTERN: <>
 7060 			simplejump_p: if (), <./cc/cse.c 8510>
 7061 			JUMP_LABEL: 3730
 7062 			break_out_memory_refs: <>
 7063 			copy_all_regs: <>
 7064 			push_reload: <>
 7065 			gen_lowpart_common: rtx (), <./cc/emit-rtl.c 567>
 7066 			done: 61
 7067 			undo_all: void (), <./cc/combine.c 2380>
 7068 			output_addr_const: 119
 7069 			small_data_operand: <>
 7070 			fprintf: <>
 7071 		merge_trees: <>
 7072 		make_insn_sequence: <>
 7073 		break_out_subroutines: <>
 7074 		write_subroutine: <>
 7075 		fflush: <>
 7076 		ferror: <>
 7077 		fgets: <>
 7078 		feof: <>
 7079 		strlen: <>
 7080 		handle_input: void (), <./cc/doschk.c 229>
 7081 			alloc_ent: ENT * (), <./cc/doschk.c 52>
 7082 				malloc: <>
 7083 				fprintf: <>
 7084 				exit: 5
 7085 				memset: <>
 7086 			fill_ent: void (), <./cc/doschk.c 65>
 7087 				strlen: <>
 7088 				strrchr: <>
 7089 				malloc: <>
 7090 				strcpy: <>
 7091 				strncpy: <>
 7092 				strcmp: 157
 7093 				invalid_msg: void (), <./cc/doschk.c 38>
 7094 					putchar: <>
 7095 					printf: <>
 7096 				printf: <>
 7097 				islower: <>
 7098 				toupper: <>
 7099 			add_ent: void (), <./cc/doschk.c 221>
 7100 		display_problems: void (), <./cc/doschk.c 238>
 7101 			malloc: <>
 7102 			qsort: <>
 7103 			compare_ent_dosname: int (), <./cc/doschk.c 179>
 7104 				strcmp: 157
 7105 			strcmp: 157
 7106 			putchar: <>
 7107 			printf: <>
 7108 			mpath: char * (), <./cc/doschk.c 205>
 7109 				sprintf: <>
 7110 			compare_ent_fullname: int (), <./cc/doschk.c 192>
 7111 				strncmp: 233
 7112 				strcmp: 157
 7113 			strncmp: 233
 7114 			strlen: <>
 7115 		gen_peephole: void (), <./cc/genpeep.c 70>
 7116 			XVECLEN: <>
 7117 			printf: <>
 7118 			match_rtx: void (), <./cc/genpeep.c 154>
 7119 				GET_CODE: 81
 7120 				XINT: <>
 7121 				printf: <>
 7122 				print_path: void (), <./cc/genpeep.c 355>
 7123 					printf: <>
 7124 					print_path: 7122
 7125 				XSTR: <>
 7126 				GET_MODE_NAME: <>
 7127 				GET_MODE: 139
 7128 				XVECLEN: <>
 7129 				match_rtx: 7118
 7130 				XVECEXP: <>
 7131 				XEXP: 105
 7132 				print_code: void (), <./cc/genpeep.c 375>
 7133 					GET_RTX_NAME: <>
 7134 					putchar: <>
 7135 				GET_RTX_FORMAT: <>
 7136 				GET_RTX_LENGTH: <>
 7137 				XWINT: <>
 7138 			XVECEXP: <>
 7139 			XSTR: <>
 7140 		local_rindex: <>
 7141 		catch_signal: STATIC void (), <./cc/mips-tfile.c 5072>
 7142 			signal: Procedure (), <./cc/enquire.c 489>
 7143 			fatal: 49
 7144 		getopt: int (), <./bison/getopt.c 734>
 7145 		strtol: <>
 7146 		fputc: <>
 7147 		rename: <>
 7148 		allocate_multiple_pages: STATIC page_t * (), <./cc/mips-tfile.c 5188>
 7149 			allocate_cluster: <>
 7150 			xcalloc: char * (), <./cc/collect2.c 592>
 7151 				calloc: <>
 7152 				fatal: 49
 7153 		open: int (), <./cc/cccp-winnt.c 10357>
 7154 		pfatal_with_name: void (), <./cc/gcc.c 5890>
 7155 			fprintf: <>
 7156 			perror: <>
 7157 			exit: 5
 7158 			report_event: void (), <./cc/toplev.c 1008>
 7159 				va_start: <>
 7160 				v_report_event: void (), <./cc/toplev.c 958>
 7161 					maybe_objc_method_name: <>
 7162 					IDENTIFIER_POINTER: <>
 7163 					V_REPORT_EVENT: <>
 7164 				va_end: <>
 7165 			strerror: <>
 7166 		read: int (), <./cc/cccp-winnt.c 10276>
 7167 		write: int (), <./cc/cccp-winnt.c 10303>
 7168 		free_multiple_pages: STATIC void (), <./cc/mips-tfile.c 5218>
 7169 			free: <>
 7170 		close: int (), <./cc/config/winnt/oldnames.c 14>
 7171 		unlink: 57
 7172 		strcmp: 157
 7173 		freopen: FILE * (), <./cc/cccp-winnt.c 10334>
 7174 		copy_object: <>
 7175 		parse_input: <>
 7176 		update_headers: <>
 7177 		write_object: <>
 7178 		yyparse: int (), </usr/local/lib/bison.simple 199>
 7179 			fprintf: <>
 7180 			yyoverflow: <>
 7181 			yyerror: void (), <cexp.y 882>
 7182 				error: 52
 7183 				longjmp: <>
 7184 			alloca: <>
 7185 			YYTRANSLATE: <>
 7186 			YYPRINT: <>
 7187 			pedwarn: <>
 7188 			integer_overflow: void (), <cexp.y 891>
 7189 				pedwarn: <>
 7190 			check_assertion: <>
 7191 			error: 52
 7192 			possible_sum_sign: <>
 7193 			right_shift: <>
 7194 			left_shift: long (), <cexp.y 898>
 7195 			xmalloc: 416
 7196 			strlen: <>
 7197 			malloc: <>
 7198 			strcpy: <>
 7199 			strcat: <>
 7200 			free: <>
 7201 			yyoverflow: <>
 7202 			yyerror: void (), <bi-parser.y 164>
 7203 			YYTRANSLATE: <>
 7204 			YYPRINT: <>
 7205 			makedef: struct def * (), <bi-parser.y 149>
 7206 			makevar: struct variation * (), <bi-parser.y 132>
 7207 			makenode: struct node (), <bi-parser.y 120>
 7208 		reverse: , <./cc/expr.c 1422>
 7209 		initialize_random_junk:  (), <cexp.y 999>
 7210 		getchar: <>
 7211 		parse_c_expression: HOST_WIDE_INT (), <cexp.y 934>
 7212 		gen_insn: void (), <./cc/genemit.c 267>
 7213 			XVEC: <>
 7214 			XVECLEN: <>
 7215 			GET_CODE: 81
 7216 			XVECEXP: <>
 7217 			XEXP: 105
 7218 			xmalloc: 416
 7219 			GET_MODE: 139
 7220 			REGNO: 93
 7221 			XSTR: <>
 7222 			max_operand_vec: int (), <./cc/genemit.c 106>
 7223 				XVECLEN: <>
 7224 				max_operand_1: void (), <./cc/genemit.c 67>
 7225 					GET_CODE: 81
 7226 					XSTR: <>
 7227 					MAX: <>
 7228 					XINT: <>
 7229 					GET_RTX_FORMAT: <>
 7230 					GET_RTX_LENGTH: <>
 7231 					max_operand_1: 7224
 7232 					XEXP: 105
 7233 					XVECLEN: <>
 7234 					XVECEXP: <>
 7235 				XVECEXP: <>
 7236 			fatal: 49
 7237 			printf: <>
 7238 			gen_exp: void (), <./cc/genemit.c 140>
 7239 				printf: <>
 7240 				GET_CODE: 81
 7241 				XINT: <>
 7242 				XVECLEN: <>
 7243 				gen_exp: 7238
 7244 				XVECEXP: <>
 7245 				GET_MODE_NAME: <>
 7246 				GET_MODE: 139
 7247 				fatal: 49
 7248 				INTVAL: 129
 7249 				abort: <>
 7250 				print_code: void (), <./cc/genemit.c 123>
 7251 					GET_RTX_NAME: <>
 7252 					putchar: <>
 7253 				GET_RTX_FORMAT: <>
 7254 				GET_RTX_LENGTH: <>
 7255 				XEXP: 105
 7256 				XSTR: <>
 7257 		gen_expand: void (), <./cc/genemit.c 384>
 7258 			strlen: <>
 7259 			XSTR: <>
 7260 			fatal: 49
 7261 			XVEC: <>
 7262 			max_operand_vec: 7222
 7263 			printf: <>
 7264 			XVECLEN: <>
 7265 			gen_exp: 7238
 7266 			XVECEXP: <>
 7267 			MAX: <>
 7268 			GET_CODE: 81
 7269 			SET_DEST: 87
 7270 			SET_SRC: 484
 7271 		gen_split: void (), <./cc/genemit.c 510>
 7272 			XVEC: <>
 7273 			fatal: 49
 7274 			max_operand_vec: 7222
 7275 			MAX: <>
 7276 			printf: <>
 7277 			XSTR: <>
 7278 			XVECLEN: <>
 7279 			XVECEXP: <>
 7280 			GET_CODE: 81
 7281 			SET_DEST: 87
 7282 			SET_SRC: 484
 7283 			gen_exp: 7238
 7284 		output_add_clobbers: void (), <./cc/genemit.c 602>
 7285 			printf: <>
 7286 			XVECLEN: <>
 7287 			gen_exp: 7238
 7288 			XVECEXP: <>
 7289 		output_init_mov_optab: void (), <./cc/genemit.c 640>
 7290 			printf: <>
 7291 		xcalloc: 7150
 7292 		obstack_begin: <>
 7293 		obstack_alloc: <>
 7294 		getenv: <>
 7295 		xmalloc: 416
 7296 		strcpy: <>
 7297 		sprintf: <>
 7298 		strcat: <>
 7299 		putenv: void (), <./cc/gcc.c 1764>
 7300 			abort: <>
 7301 			strncmp: 233
 7302 			xmalloc: 416
 7303 			bcopy: <>
 7304 			strlen: <>
 7305 			xmalloc: 1643
 7306 		prefix_from_env: void (), <./cc/collect2.c 1012>
 7307 			getenv: <>
 7308 			prefix_from_string: void (), <./cc/collect2.c 1023>
 7309 				xmalloc: 416
 7310 				strlen: <>
 7311 				strncpy: <>
 7312 				strcpy: <>
 7313 				add_prefix: void (), <./cc/collect2.c 976>
 7314 					strlen: <>
 7315 					xmalloc: 416
 7316 					savestring: char * (), <./cc/collect2.c 636>
 7317 		handler: void (), <./cc/collect2.c 567>
 7318 			maybe_unlink: 56
 7319 			signal: Procedure (), <./cc/enquire.c 489>
 7320 			kill: <>
 7321 			getpid: <>
 7322 		find_a_file: char * (), <./cc/collect2.c 924>
 7323 			strlen: <>
 7324 			xmalloc: 416
 7325 			access: int (), <./cc/config/winnt/oldnames.c 2>
 7326 			strcpy: <>
 7327 			strcat: <>
 7328 			is_in_prefix_list: int (), <./cc/collect2.c 888>
 7329 				strlen: <>
 7330 				strncmp: 233
 7331 				strcmp: 157
 7332 			strcmp: 157
 7333 			free: <>
 7334 		execvp: <>
 7335 		choose_temp_base: void (), <./cc/collect2.c 780>
 7336 		add_to_tmp_fl_file: char * (), <./cc/collect2.c 406>
 7337 			strrchr: <>
 7338 			strlen: <>
 7339 			fatal: 49
 7340 			strcpy: <>
 7341 			fopen: FILE * (), <./cc/cccp-winnt.c 10346>
 7342 			malloc: <>
 7343 			tmpnam: <>
 7344 			realloc: <>
 7345 			fgets: <>
 7346 			fputs: <>
 7347 			fclose: <>
 7348 		rindex: <>
 7349 		savestring: char * (), <./cc/collect2.c 636>
 7350 		strncmp: 233
 7351 		scan_prog_file: void (), <./cc/collect2.c 3007>
 7352 			fatal: 49
 7353 			fatal_perror: void (), <./cc/collect2.c 514>
 7354 				fprintf: <>
 7355 				my_strerror: char * (), <./cc/gcc.c 1130>
 7356 					strerror: <>
 7357 					sprintf: <>
 7358 				collect_exit: 55
 7359 			fdopen: <>
 7360 			fprintf: <>
 7361 			fflush: <>
 7362 			vfork: <>
 7363 			dup2: int (), <./cc/collect2.c 345>
 7364 				close: 7170
 7365 				dup: , <./cc/c-decl.c 2611>
 7366 			close: 7170
 7367 			execv: <>
 7368 			signal: Procedure (), <./cc/enquire.c 489>
 7369 			fgets: <>
 7370 			isspace: <>
 7371 			is_ctor_dtor: int (), <./cc/collect2.c 707>
 7372 			add_to_list: void (), <./cc/collect2.c 1846>
 7373 				xcalloc: 7150
 7374 				strlen: <>
 7375 				strcpy: <>
 7376 				strcmp: 157
 7377 				free: <>
 7378 			fclose: <>
 7379 			do_wait: void (), <./cc/collect2.c 1748>
 7380 				collect_wait: int (), <./cc/collect2.c 1714>
 7381 					wait: <>
 7382 					WIFSIGNALED: if (), <./cc/protoize.c 2148>
 7383 					WTERMSIG: <>
 7384 					error: 52
 7385 					collect_exit: 55
 7386 					WIFEXITED: <>
 7387 					WEXITSTATUS: <>
 7388 				error: 52
 7389 				collect_exit: 55
 7390 			ldopen: <>
 7391 			MY_ISCOFF: <>
 7392 			HEADER: <>
 7393 			GCC_CHECK_HDR: <>
 7394 			GCC_SYMBOLS: <>
 7395 			GCC_SYMZERO: <>
 7396 			ldtbread: <>
 7397 			GCC_SYMINC: <>
 7398 			GCC_OK_SYMBOL: <>
 7399 			ldgetname: <>
 7400 			ldclose: <>
 7401 			open: int (), <./cc/cccp-winnt.c 10357>
 7402 			read_file: struct file_info (), <./cc/collect2.c 3495>
 7403 			decode_mach_o_hdr: <>
 7404 			bad_header: void (), <./cc/collect2.c 3470>
 7405 				fatal: 49
 7406 			print_header: void (), <./cc/collect2.c 3360>
 7407 				fprintf: <>
 7408 			xcalloc: 7150
 7409 			xmalloc: 416
 7410 			bcopy: <>
 7411 			print_load_command: void (), <./cc/collect2.c 3403>
 7412 				fprintf: <>
 7413 			strlen: <>
 7414 			strcmp: 157
 7415 			add_func_table: void (), <./cc/collect2.c 3280>
 7416 				xcalloc: 7150
 7417 				fatal: 49
 7418 				fprintf: <>
 7419 			encode_mach_o_hdr: <>
 7420 			end_file: <>
 7421 		alloca: <>
 7422 		fatal_perror: 7353
 7423 		write_export_file: void (), <./cc/collect2.c 2051>
 7424 			fprintf: <>
 7425 		fclose: <>
 7426 		collect_execute: void (), <./cc/collect2.c 1763>
 7427 			fprintf: <>
 7428 			fflush: <>
 7429 			fatal: 49
 7430 			vfork: <>
 7431 			fatal_perror: 7353
 7432 			unlink: 57
 7433 			freopen: FILE * (), <./cc/cccp-winnt.c 10334>
 7434 			execvp: <>
 7435 		do_wait: 7379
 7436 		dump_file: void (), <./cc/collect2.c 647>
 7437 		scan_libraries: void (), <./cc/collect2.c 2780>
 7438 			mapfile: void (), <./cc/collect2.c 2263>
 7439 				open: int (), <./cc/cccp-winnt.c 10357>
 7440 				fatal: 49
 7441 				fstat: <>
 7442 				mmap: <>
 7443 				close: 7170
 7444 			N_BADMAG: <>
 7445 			fatal: 49
 7446 			N_TXTOFF: <>
 7447 			N_DATOFF: <>
 7448 			N_SYMOFF: <>
 7449 			fprintf: <>
 7450 			sprintf: <>
 7451 			locatelib: void (), <./cc/collect2.c 2346>
 7452 				malloc: <>
 7453 				strlen: <>
 7454 				strcpy: <>
 7455 				getenv: <>
 7456 				scandir: <>
 7457 				libselect: int (), <./cc/collect2.c 2287>
 7458 					strncmp: 233
 7459 					strlen: <>
 7460 				libcompare: int (), <./cc/collect2.c 2302>
 7461 					strlen: <>
 7462 					isdigit: if (), <./cc/cplus-dem.c 1861>
 7463 					strtol: <>
 7464 				sprintf: <>
 7465 				add_to_list: 7372
 7466 				fprintf: <>
 7467 				fatal: 49
 7468 			add_to_list: 7372
 7469 			scan_prog_file: 7351
 7470 			error: 52
 7471 			fatal_perror: 7353
 7472 			fdopen: <>
 7473 			fflush: <>
 7474 			vfork: <>
 7475 			dup2: 7363
 7476 			close: 7170
 7477 			execv: <>
 7478 			signal: Procedure (), <./cc/enquire.c 489>
 7479 			fgets: <>
 7480 			PARSE_LDD_OUTPUT: <>
 7481 			strncmp: 233
 7482 			isspace: <>
 7483 			access: 7325
 7484 			fclose: <>
 7485 			do_wait: 7379
 7486 			ldopen: <>
 7487 			MY_ISCOFF: <>
 7488 			HEADER: <>
 7489 			ldnshread: <>
 7490 			FSEEK: <>
 7491 			FREAD: <>
 7492 			alloca: <>
 7493 			prefix_from_string: 7308
 7494 			strlen: <>
 7495 			strcmp: 157
 7496 			MAX: <>
 7497 			strcpy: <>
 7498 			strcat: <>
 7499 			TYPE: <>
 7500 			ldahread: <>
 7501 			LDR_EXPORT: <>
 7502 			is_ctor_dtor: int (), <./cc/collect2.c 707>
 7503 			ldclose: <>
 7504 		fork_execute: void (), <./cc/collect2.c 1822>
 7505 			collect_execute: 7426
 7506 			do_wait: 7379
 7507 		maybe_unlink: 56
 7508 		write_c_file: void (), <./cc/collect2.c 2038>
 7509 			write_c_file_glob: void (), <./cc/collect2.c 2011>
 7510 				fprintf: <>
 7511 				write_list_with_asm: void (), <./cc/collect2.c 1894>
 7512 					fprintf: <>
 7513 				write_list: void (), <./cc/collect2.c 1881>
 7514 					fprintf: <>
 7515 			write_c_file_stat: void (), <./cc/collect2.c 1911>
 7516 				rindex: <>
 7517 				index: 3554
 7518 				strlen: <>
 7519 				strncmp: 233
 7520 				xmalloc: 416
 7521 				strncpy: <>
 7522 				isalnum: <>
 7523 				fprintf: <>
 7524 				sprintf: <>
 7525 				free: <>
 7526 				write_list_with_asm: 7511
 7527 				write_list: 7513
 7528 		add_to_list: 7372
 7529 		init_range: void (), <./cc/genattr.c 74>
 7530 		gen_attr: void (), <./cc/genattr.c 93>
 7531 			printf: <>
 7532 			XSTR: <>
 7533 			write_upcase: void (), <./cc/genattr.c 82>
 7534 				printf: <>
 7535 			strcmp: 157
 7536 		XVECLEN: <>
 7537 		XVECEXP: <>
 7538 		XSTR: <>
 7539 		XINT: <>
 7540 		MAX: <>
 7541 		XVEC: <>
 7542 		bcopy: <>
 7543 		extend_range: void (), <./cc/genattr.c 64>
 7544 		write_units: void (), <./cc/genattr.c 143>
 7545 			printf: <>
 7546 			MAX: <>
 7547 		gen_insn: void (), <./cc/genconfig.c 165>
 7548 			XVEC: <>
 7549 			XVECLEN: <>
 7550 			walk_insn_part: void (), <./cc/genconfig.c 64>
 7551 				GET_CODE: 81
 7552 				XINT: <>
 7553 				XSTR: <>
 7554 				XEXP: 105
 7555 				walk_insn_part: 7550
 7556 				SET_DEST: 87
 7557 				SET_SRC: 484
 7558 				GET_RTX_FORMAT: <>
 7559 				GET_RTX_LENGTH: <>
 7560 				XVEC: <>
 7561 				XVECLEN: <>
 7562 				XVECEXP: <>
 7563 			XVECEXP: <>
 7564 		gen_expand: void (), <./cc/genconfig.c 186>
 7565 			XVEC: <>
 7566 			XVECLEN: <>
 7567 			walk_insn_part: 7550
 7568 			XVECEXP: <>
 7569 		gen_split: void (), <./cc/genconfig.c 213>
 7570 			XVECLEN: <>
 7571 			walk_insn_part: 7550
 7572 			XVECEXP: <>
 7573 		gen_peephole: void (), <./cc/genconfig.c 228>
 7574 			XVECLEN: <>
 7575 			walk_insn_part: 7550
 7576 			XVECEXP: <>
 7577 		output_prologue: void (), <./cc/genoutput.c 176>
 7578 			printf: <>
 7579 		gen_insn: void (), <./cc/genoutput.c 639>
 7580 			xmalloc: 416
 7581 			XSTR: <>
 7582 			mybzero: <>
 7583 			XVECLEN: <>
 7584 			scan_operands: void (), <./cc/genoutput.c 414>
 7585 				GET_CODE: 81
 7586 				XINT: <>
 7587 				error: 52
 7588 				GET_MODE: 139
 7589 				XSTR: <>
 7590 				n_occurrences: int (), <./cc/genoutput.c 992>
 7591 				XVECLEN: <>
 7592 				scan_operands: 7584
 7593 				XVECEXP: <>
 7594 				XEXP: 105
 7595 				GET_RTX_FORMAT: <>
 7596 				GET_RTX_LENGTH: <>
 7597 				XVEC: <>
 7598 			XVECEXP: <>
 7599 			mybcopy: <>
 7600 			validate_insn_alternatives: void (), <./cc/genoutput.c 614>
 7601 				error: 52
 7602 			process_template: void (), <./cc/genoutput.c 540>
 7603 				printf: <>
 7604 				putchar: <>
 7605 				fatal: 49
 7606 		gen_peephole: void (), <./cc/genoutput.c 695>
 7607 			xmalloc: 416
 7608 			mybzero: <>
 7609 			XVECLEN: <>
 7610 			scan_operands: 7584
 7611 			XVECEXP: <>
 7612 			mybcopy: <>
 7613 			validate_insn_alternatives: 7600
 7614 			process_template: 7602
 7615 			XSTR: <>
 7616 		gen_expand: void (), <./cc/genoutput.c 748>
 7617 			xmalloc: 416
 7618 			XSTR: <>
 7619 			mybzero: <>
 7620 			XVEC: <>
 7621 			XVECLEN: <>
 7622 			scan_operands: 7584
 7623 			XVECEXP: <>
 7624 			mybcopy: <>
 7625 			validate_insn_alternatives: 7600
 7626 		gen_split: void (), <./cc/genoutput.c 809>
 7627 			xmalloc: 416
 7628 			mybzero: <>
 7629 			XVECLEN: <>
 7630 			scan_operands: 7584
 7631 			XVECEXP: <>
 7632 		output_epilogue: void (), <./cc/genoutput.c 199>
 7633 			printf: <>
 7634 			GET_MODE_NAME: <>
 7635 			strcmp: 157
 7636 			alloca: <>
 7637 		dummy: void (), <./bison/gram.c 56>
 7638 		gen_insn: void (), <./cc/genopinit.c 131>
 7639 			XSTR: <>
 7640 			strlen: <>
 7641 			tolower: <>
 7642 			abort: <>
 7643 			GET_MODE_WIDER_MODE: <>
 7644 			printf: <>
 7645 			toupper: <>
 7646 		init_parse_file: <>
 7647 		init_parse_options: <>
 7648 		cpp_handle_options: <>
 7649 		push_parse_file: <>
 7650 		cpp_pfatal_with_name: void (), <./cc/cpperror.c 118>
 7651 			cpp_perror_with_name: <>
 7652 			exit: 5
 7653 		fwrite: <>
 7654 		CPP_WRITTEN: <>
 7655 		cpp_get_token: <>
 7656 		cpp_finish: <>
 7657 		getrlimit: <>
 7658 		setrlimit: <>
 7659 		rtx_alloc: 172
 7660 		XWINT: <>
 7661 		RTX_UNCHANGING_P: It is correct to set, <./cc/stmt.c 3489>
 7662 		RTX_INTEGRATED_P: <>
 7663 		attr_string: char * (), <./cc/genattrtab.c 792>
 7664 			strncmp: 233
 7665 			obstack_alloc: <>
 7666 			bcopy: <>
 7667 			attr_hash_add_string: void (), <./cc/genattrtab.c 506>
 7668 				obstack_alloc: <>
 7669 		gen_insn: void (), <./cc/genattrtab.c 4135>
 7670 			oballoc: 530
 7671 			GET_CODE: 81
 7672 			count_alternatives: int (), <./cc/genattrtab.c 4032>
 7673 				GET_CODE: 81
 7674 				n_comma_elts: int (), <./cc/genattrtab.c 5233>
 7675 				XSTR: <>
 7676 				GET_RTX_FORMAT: <>
 7677 				GET_RTX_LENGTH: <>
 7678 				count_alternatives: 7672
 7679 				XEXP: 105
 7680 				XVEC: <>
 7681 				XVECLEN: <>
 7682 				XVECEXP: <>
 7683 		gen_attr: void (), <./cc/genattrtab.c 3979>
 7684 			find_attr: struct attr_desc (), <./cc/genattrtab.c 5279>
 7685 			XSTR: <>
 7686 			fatal: 49
 7687 			next_comma_elt: char * (), <./cc/genattrtab.c 5253>
 7688 				attr_string: 7663
 7689 			oballoc: 530
 7690 			attr_rtx: <>
 7691 			GET_CODE: 81
 7692 			XEXP: 105
 7693 			strcmp: 157
 7694 			check_attr_value: <>
 7695 			get_attr_value: <>
 7696 		gen_delay: void (), <./cc/genattrtab.c 4179>
 7697 			XVECLEN: <>
 7698 			fatal: 49
 7699 			XVECEXP: <>
 7700 			oballoc: 530
 7701 		gen_unit: void (), <./cc/genattrtab.c 4210>
 7702 			XSTR: <>
 7703 			XINT: <>
 7704 			XEXP: 105
 7705 			MAX: <>
 7706 			strcmp: 157
 7707 			fatal: 49
 7708 			oballoc: 530
 7709 			XVEC: <>
 7710 			XVECLEN: <>
 7711 			insert_right_side: rtx (), <./cc/genattrtab.c 2580>
 7712 				attr_equal_p: int (), <./cc/genattrtab.c 828>
 7713 					RTX_INTEGRATED_P: <>
 7714 					rtx_equal_p: 143
 7715 				GET_CODE: 81
 7716 				insert_right_side: 7711
 7717 				XEXP: 105
 7718 				attr_rtx: <>
 7719 				SIMPLIFY_TEST_EXP: <>
 7720 			XVECEXP: <>
 7721 			extend_range: <>
 7722 		rtvec_alloc: 3756
 7723 		expand_delays: void (), <./cc/genattrtab.c 1497>
 7724 		expand_units: void (), <./cc/genattrtab.c 1789>
 7725 			check_attr_test: <>
 7726 			make_numeric_value: rtx (), <./cc/genattrtab.c 5382>
 7727 			attr_rtx: <>
 7728 			check_attr_value: <>
 7729 			make_canonical: rtx (), <./cc/genattrtab.c 1351>
 7730 				GET_CODE: 81
 7731 				make_numeric_value: rtx (), <./cc/genattrtab.c 5382>
 7732 				INTVAL: 129
 7733 				strcmp: 157
 7734 				XSTR: <>
 7735 				fatal: 49
 7736 				RTX_UNCHANGING_P: It is correct to set, <./cc/stmt.c 3489>
 7737 				convert_const_symbol_ref: rtx (), <./cc/genattrtab.c 1298>
 7738 					rtx_alloc: 172
 7739 					XVEC: <>
 7740 					rtvec_alloc: 3756
 7741 					XEXP: 105
 7742 					oballoc: 530
 7743 					strlen: <>
 7744 					XSTR: <>
 7745 					strcpy: <>
 7746 					strcat: <>
 7747 					attr_rtx: <>
 7748 					RTX_UNCHANGING_P: It is correct to set, <./cc/stmt.c 3489>
 7749 					XVECEXP: <>
 7750 				check_attr_value: <>
 7751 				rtx_alloc: 172
 7752 				XVEC: <>
 7753 				rtvec_alloc: 3756
 7754 				XVECEXP: <>
 7755 				XEXP: 105
 7756 				XVECLEN: <>
 7757 				make_canonical: 7729
 7758 				copy_boolean: rtx (), <./cc/genattrtab.c 1429>
 7759 					GET_CODE: 81
 7760 					attr_rtx: <>
 7761 					copy_boolean: 7758
 7762 					XEXP: 105
 7763 				rtx_equal_p: 143
 7764 			simplify_knowing: rtx (), <./cc/genattrtab.c 2126>
 7765 				GET_CODE: 81
 7766 				attr_rtx: <>
 7767 				make_numeric_value: rtx (), <./cc/genattrtab.c 5382>
 7768 				max_attr_value: int (), <./cc/genattrtab.c 4514>
 7769 					GET_CODE: 81
 7770 					atoi: <>
 7771 					XSTR: <>
 7772 					XVECLEN: <>
 7773 					max_attr_value: 7768
 7774 					XVECEXP: <>
 7775 					XEXP: 105
 7776 					abort: <>
 7777 				simplify_by_exploding: rtx (), <./cc/genattrtab.c 3436>
 7778 					find_and_mark_used_attributes: int (), <./cc/genattrtab.c 3584>
 7779 						GET_CODE: 81
 7780 						MEM_VOLATILE_P: <>
 7781 						rtx_alloc: 172
 7782 						XEXP: 105
 7783 						find_and_mark_used_attributes: 7778
 7784 						XVECLEN: <>
 7785 						XVECEXP: <>
 7786 					unmark_used_attributes: void (), <./cc/genattrtab.c 3633>
 7787 						unmark_used_attributes: 7786
 7788 						XEXP: 105
 7789 						GET_CODE: 81
 7790 						MEM_VOLATILE_P: <>
 7791 					alloca: <>
 7792 					XSTR: <>
 7793 					XEXP: 105
 7794 					find_attr: struct attr_desc (), <./cc/genattrtab.c 5279>
 7795 					strcmp: 157
 7796 					add_values_to_cover: int (), <./cc/genattrtab.c 3656>
 7797 						GET_CODE: 81
 7798 						abort: <>
 7799 						XEXP: 105
 7800 						attr_eq: rtx (), <./cc/genattrtab.c 774>
 7801 							attr_rtx: <>
 7802 							attr_string: 7663
 7803 							strlen: <>
 7804 						XSTR: <>
 7805 						MEM_VOLATILE_P: <>
 7806 						rtx_alloc: 172
 7807 						insert_right_side: 7711
 7808 						attr_rtx: <>
 7809 					test_for_current_value: rtx (), <./cc/genattrtab.c 3740>
 7810 						insert_right_side: 7711
 7811 						XEXP: 105
 7812 					simplify_with_current_value: rtx (), <./cc/genattrtab.c 3760>
 7813 						XEXP: 105
 7814 						GET_CODE: 81
 7815 						MEM_VOLATILE_P: <>
 7816 						simplify_with_current_value_aux: rtx (), <./cc/genattrtab.c 3793>
 7817 							GET_CODE: 81
 7818 							MEM_VOLATILE_P: <>
 7819 							simplify_with_current_value_aux: 7816
 7820 							XEXP: 105
 7821 							attr_rtx: <>
 7822 							XVECLEN: <>
 7823 							XVECEXP: <>
 7824 							abort: <>
 7825 					increment_current_value: int (), <./cc/genattrtab.c 3720>
 7826 						XEXP: 105
 7827 					abort: <>
 7828 					GET_CODE: 81
 7829 					MEM_VOLATILE_P: <>
 7830 					rtx_alloc: 172
 7831 					XVEC: <>
 7832 					rtvec_alloc: 3756
 7833 					XVECEXP: <>
 7834 			attr_printf: char * (), <./cc/genattrtab.c 758>
 7835 				alloca: <>
 7836 				sprintf: <>
 7837 				attr_string: 7663
 7838 				strlen: <>
 7839 			strlen: <>
 7840 			make_internal_attr: void (), <./cc/genattrtab.c 5317>
 7841 			rtx_alloc: 172
 7842 			XEXP: 105
 7843 			operate_exp: rtx (), <./cc/genattrtab.c 1588>
 7844 				GET_CODE: 81
 7845 				atoi: <>
 7846 				XSTR: <>
 7847 				abort: <>
 7848 				make_numeric_value: rtx (), <./cc/genattrtab.c 5382>
 7849 				operate_exp: 7843
 7850 				XEXP: 105
 7851 				rtx_equal_p: 143
 7852 				attr_rtx: <>
 7853 				rtx_alloc: 172
 7854 				XVEC: <>
 7855 				rtvec_alloc: 3756
 7856 				XVECLEN: <>
 7857 				XVECEXP: <>
 7858 				obstack_free: 397
 7859 				fatal: 49
 7860 			simplify_by_exploding: 7777
 7861 			encode_units_mask: rtx (), <./cc/genattrtab.c 2144>
 7862 				GET_CODE: 81
 7863 				atoi: <>
 7864 				XSTR: <>
 7865 				abort: <>
 7866 				attr_rtx: <>
 7867 				attr_printf: 7834
 7868 				GET_RTX_FORMAT: <>
 7869 				GET_RTX_LENGTH: <>
 7870 				XVECLEN: <>
 7871 				XVECEXP: <>
 7872 				encode_units_mask: 7861
 7873 				XEXP: 105
 7874 			alloca: <>
 7875 			bcopy: <>
 7876 			XVEC: <>
 7877 			rtvec_alloc: 3756
 7878 			insert_right_side: 7711
 7879 			XVECEXP: <>
 7880 			max_attr_value: 7768
 7881 			GET_CODE: 81
 7882 			atoi: <>
 7883 			XSTR: <>
 7884 		oballoc: 530
 7885 		check_defs: void (), <./cc/genattrtab.c 1245>
 7886 		check_attr_value: <>
 7887 		fill_attr: void (), <./cc/genattrtab.c 2207>
 7888 			XVEC: <>
 7889 			XVECLEN: <>
 7890 			strcmp: 157
 7891 			XSTR: <>
 7892 			XEXP: 105
 7893 			XVECEXP: <>
 7894 			get_attr_value: <>
 7895 			oballoc: 530
 7896 			insert_insn_ent: void (), <./cc/genattrtab.c 2557>
 7897 		make_length_attrs: void (), <./cc/genattrtab.c 2326>
 7898 			identity_fn: rtx (), <./cc/genattrtab.c 2376>
 7899 			zero_fn: rtx (), <./cc/genattrtab.c 2383>
 7900 				make_numeric_value: rtx (), <./cc/genattrtab.c 5382>
 7901 			max_fn: rtx (), <./cc/genattrtab.c 2397>
 7902 				make_numeric_value: rtx (), <./cc/genattrtab.c 5382>
 7903 				max_attr_value: 7768
 7904 			one_fn: rtx (), <./cc/genattrtab.c 2390>
 7905 				make_numeric_value: rtx (), <./cc/genattrtab.c 5382>
 7906 			find_attr: struct attr_desc (), <./cc/genattrtab.c 5279>
 7907 			fatal: 49
 7908 			make_internal_attr: void (), <./cc/genattrtab.c 5317>
 7909 			substitute_address: , <./cc/genattrtab.c 2252>
 7910 				GET_CODE: 81
 7911 				XVECLEN: <>
 7912 				walk_attr_value: void (), <./cc/genattrtab.c 4563>
 7913 					GET_CODE: 81
 7914 					RTX_UNCHANGING_P: It is correct to set, <./cc/stmt.c 3489>
 7915 					XSTR: <>
 7916 					strcmp: 157
 7917 					GET_RTX_FORMAT: <>
 7918 					GET_RTX_LENGTH: <>
 7919 					walk_attr_value: 7912
 7920 					XEXP: 105
 7921 					XVEC: <>
 7922 					XVECLEN: <>
 7923 					XVECEXP: <>
 7924 				XVECEXP: <>
 7925 				rtx_alloc: 172
 7926 				XVEC: <>
 7927 				rtvec_alloc: 3756
 7928 				substitute_address: 7909
 7929 				XEXP: 105
 7930 				attr_rtx: <>
 7931 			get_attr_value: <>
 7932 			oballoc: 530
 7933 			insert_insn_ent: 7896
 7934 		optimize_attrs: void (), <./cc/genattrtab.c 3289>
 7935 			alloca: <>
 7936 			bzero: <>
 7937 			xmalloc: 416
 7938 			abort: <>
 7939 			clear_struct_flag: void (), <./cc/genattrtab.c 3869>
 7940 				MEM_IN_STRUCT_P: <>
 7941 				RTX_UNCHANGING_P: It is correct to set, <./cc/stmt.c 3489>
 7942 				GET_CODE: 81
 7943 				GET_RTX_FORMAT: <>
 7944 				GET_RTX_LENGTH: <>
 7945 				XVECLEN: <>
 7946 				clear_struct_flag: 7939
 7947 				XVECEXP: <>
 7948 				XEXP: 105
 7949 			obstack_finish: <>
 7950 			GET_CODE: 81
 7951 			count_sub_rtxs: int (), <./cc/genattrtab.c 3923>
 7952 				GET_CODE: 81
 7953 				GET_RTX_FORMAT: <>
 7954 				GET_RTX_LENGTH: <>
 7955 				XVECLEN: <>
 7956 				count_sub_rtxs: 7951
 7957 				XVECEXP: <>
 7958 				XEXP: 105
 7959 			simplify_by_alternatives: rtx (), <./cc/genattrtab.c 3399>
 7960 				rtx_alloc: 172
 7961 				XVEC: <>
 7962 				rtvec_alloc: 3756
 7963 				GET_CODE: 81
 7964 				XEXP: 105
 7965 				attr_numeral: char * (), <./cc/genattrtab.c 782>
 7966 					XSTR: <>
 7967 					make_numeric_value: rtx (), <./cc/genattrtab.c 5382>
 7968 				XVECEXP: <>
 7969 				make_alternative_compare: rtx (), <./cc/genattrtab.c 2676>
 7970 					attr_rtx: <>
 7971 					attr_numeral: 7965
 7972 					RTX_UNCHANGING_P: It is correct to set, <./cc/stmt.c 3489>
 7973 				simplify_cond: rtx (), <./cc/genattrtab.c 2412>
 7974 					XEXP: 105
 7975 					XVECLEN: <>
 7976 					alloca: <>
 7977 					obstack_finish: <>
 7978 					bcopy: <>
 7979 					XVECEXP: <>
 7980 					GET_CODE: 81
 7981 					simplify_cond: 7973
 7982 					SIMPLIFY_TEST_EXP: <>
 7983 					attr_equal_p: 7712
 7984 					insert_right_side: 7711
 7985 					obstack_free: 397
 7986 					rtx_alloc: 172
 7987 					XVEC: <>
 7988 					rtvec_alloc: 3756
 7989 			simplify_cond: 7973
 7990 			attr_copy_rtx: <>
 7991 			remove_insn_ent: void (), <./cc/genattrtab.c 2532>
 7992 			get_attr_value: <>
 7993 			insert_insn_ent: 7896
 7994 			obstack_free: 397
 7995 			free: <>
 7996 		write_attr_get: void (), <./cc/genattrtab.c 4627>
 7997 			find_most_used: <>
 7998 			printf: <>
 7999 			write_attr_set: void (), <./cc/genattrtab.c 4715>
 8000 				GET_CODE: 81
 8001 				write_indent: void (), <./cc/genattrtab.c 4930>
 8002 					printf: <>
 8003 				printf: <>
 8004 				write_attr_value: void (), <./cc/genattrtab.c 4908>
 8005 					GET_CODE: 81
 8006 					abort: <>
 8007 					write_attr_valueq: void (), <./cc/genattrtab.c 4888>
 8008 						printf: <>
 8009 						strlen: <>
 8010 						atoi: <>
 8011 						write_upcase: void (), <./cc/genattrtab.c 4919>
 8012 							printf: <>
 8013 					XSTR: <>
 8014 				XEXP: 105
 8015 				XVECLEN: <>
 8016 				eliminate_known_true: rtx (), <./cc/genattrtab.c 4684>
 8017 					SIMPLIFY_TEST_EXP: <>
 8018 					GET_CODE: 81
 8019 					eliminate_known_true: 8016
 8020 					XEXP: 105
 8021 					simplify_and_tree: rtx (), <./cc/genattrtab.c 2805>
 8022 						GET_CODE: 81
 8023 						simplify_and_tree: 8021
 8024 						XEXP: 105
 8025 						attr_rtx: <>
 8026 						SIMPLIFY_TEST_EXP: <>
 8027 						XSTR: <>
 8028 						strcmp: 157
 8029 						attr_equal_p: 7712
 8030 				XVECEXP: <>
 8031 				attr_rtx: <>
 8032 				insert_right_side: 7711
 8033 				write_test_expr: void (), <./cc/genattrtab.c 4290>
 8034 					printf: <>
 8035 					GET_CODE: 81
 8036 					write_test_expr: 8033
 8037 					XEXP: 105
 8038 					XSTR: <>
 8039 					fatal: 49
 8040 					find_attr: struct attr_desc (), <./cc/genattrtab.c 5279>
 8041 					abort: <>
 8042 					evaluate_eq_attr: rtx (), <./cc/genattrtab.c 2702>
 8043 						GET_CODE: 81
 8044 						strcmp: 157
 8045 						XSTR: <>
 8046 						clear_struct_flag: 7939
 8047 						XVECLEN: <>
 8048 						SIMPLIFY_TEST_EXP: <>
 8049 						XVECEXP: <>
 8050 						SIMPLIFY_ALTERNATIVE: <>
 8051 						insert_right_side: 7711
 8052 						evaluate_eq_attr: 8042
 8053 						attr_rtx: <>
 8054 						XEXP: 105
 8055 						abort: <>
 8056 						walk_attr_value: 7912
 8057 						RTX_UNCHANGING_P: It is correct to set, <./cc/stmt.c 3489>
 8058 						copy_rtx_unchanging: <>
 8059 					write_attr_valueq: 8007
 8060 					GET_MODE: 139
 8061 					XINT: <>
 8062 					GET_MODE_NAME: <>
 8063 					XWINT: <>
 8064 					GET_RTX_NAME: <>
 8065 				write_attr_set: 7999
 8066 				abort: <>
 8067 			write_attr_case: void (), <./cc/genattrtab.c 4812>
 8068 				write_indent: 8001
 8069 				printf: <>
 8070 				walk_attr_value: 7912
 8071 				write_attr_set: 7999
 8072 				strncmp: 233
 8073 		write_eligible_delay: void (), <./cc/genattrtab.c 4953>
 8074 			XVECLEN: <>
 8075 			printf: <>
 8076 			find_attr: struct attr_desc (), <./cc/genattrtab.c 5279>
 8077 			abort: <>
 8078 			find_most_used: <>
 8079 			sprintf: <>
 8080 			write_attr_case: 8067
 8081 		write_function_unit_info: void (), <./cc/genattrtab.c 5072>
 8082 			write_complex_function: void (), <./cc/genattrtab.c 5141>
 8083 				printf: <>
 8084 				alloca: <>
 8085 				strlen: <>
 8086 				sprintf: <>
 8087 				find_attr: struct attr_desc (), <./cc/genattrtab.c 5279>
 8088 				abort: <>
 8089 				find_most_used: <>
 8090 				write_attr_case: 8067
 8091 				contained_in_p: int (), <./cc/genattrtab.c 4102>
 8092 					rtx_equal_p: 143
 8093 					GET_RTX_FORMAT: <>
 8094 					GET_CODE: 81
 8095 					GET_RTX_LENGTH: <>
 8096 					contained_in_p: 8091
 8097 					XEXP: 105
 8098 					XVECLEN: <>
 8099 					XVECEXP: <>
 8100 				make_numeric_value: rtx (), <./cc/genattrtab.c 5382>
 8101 				find_single_value: <>
 8102 				write_attr_set: 7999
 8103 			make_numeric_value: rtx (), <./cc/genattrtab.c 5382>
 8104 			printf: <>
 8105 			XSTR: <>
 8106 		write_const_num_delay_slots: void (), <./cc/genattrtab.c 5495>
 8107 			find_attr: struct attr_desc (), <./cc/genattrtab.c 5279>
 8108 			printf: <>
 8109 			walk_attr_value: 7912
 8110 		pipe_closed: void (), <./cc/cccp-winnt.c 9994>
 8111 		initialize_char_syntax: void (), <./cc/cccp-winnt.c 9487>
 8112 		bzero: <>
 8113 		append_include_chain: <>
 8114 		warning: 281
 8115 		fdopen: <>
 8116 		dup: , <./cc/c-decl.c 2611>
 8117 		fileno: <>
 8118 		append_framework_chain: <>
 8119 		path_include: void (), <./cc/cccp-winnt.c 2329>
 8120 			xmalloc: 416
 8121 			bcopy: <>
 8122 			append_include_chain: <>
 8123 		initialize_builtins: void (), <./cc/cccp-winnt.c 9528>
 8124 		output_line_command: void (), <./cc/cccp-winnt.c 7930>
 8125 		make_definition: void (), <./cc/cccp-winnt.c 9623>
 8126 		abort: <>
 8127 		make_assertion: void (), <./cc/cccp-winnt.c 9740>
 8128 		make_undef: void (), <./cc/cccp-winnt.c 9711>
 8129 		isalpha: <>
 8130 		strncpy: <>
 8131 		stat: <>
 8132 		free: <>
 8133 		perror_with_name: void (), <./cc/cccp-winnt.c 9963>
 8134 		finclude: if (), <./cc/cpplib.c 3522>
 8135 		deps_output: void (), <./cc/cccp-winnt.c 9868>
 8136 		index: 3554
 8137 		file_size_and_mode: int (), <./cc/cccp-winnt.c 10078>
 8138 		S_ISREG: <>
 8139 		safe_read: int (), <./cc/cccp-winnt.c 1090>
 8140 			read: int (), <./cc/cccp-winnt.c 10276>
 8141 		xrealloc: 420
 8142 		trigraph_pcp: void (), <./cc/cccp-winnt.c 2411>
 8143 			index0: U_CHAR * (), <./cc/cccp-winnt.c 2381>
 8144 				index: 3554
 8145 				strlen: <>
 8146 			bcopy: <>
 8147 			warning: 281
 8148 		buf_convert_rtf: void (), <./cc/cccp-winnt.c 10400>
 8149 		rescan: void (), <./cc/cccp.c 3352>
 8150 		pedwarn: <>
 8151 		dump_all_macros: void (), <./cc/cccp-winnt.c 9419>
 8152 		write_output: void (), <./cc/cccp-winnt.c 5523>
 8153 		fputs: <>
 8154 		putc: <>
 8155 		pipe_closed: void (), <./cc/cccp.c 11920>
 8156 		initialize_char_syntax: void (), <./cc/cccp.c 11389>
 8157 		init_output_file_buf: void (), <./cc/cccp.c 12905>
 8158 		getcwd: <>
 8159 		getwd: <>
 8160 		chdir: <>
 8161 		strtok: <>
 8162 		file_modtime: <>
 8163 		handle_file_modification: void (), <./cc/cccp.c 12821>
 8164 		dump_memory_statistics: void (), <./cc/cccp.c 12466>
 8165 		write_header_output: int (), <./cc/cccp.c 7183>
 8166 		fopen: FILE * (), <./cc/cccp.c 12272>
 8167 		BAILOUT: <>
 8168 		hmap_load_header_map: <>
 8169 		path_include: void (), <./cc/cccp.c 3043>
 8170 			xmalloc: 416
 8171 			bcopy: <>
 8172 			append_include_chain: <>
 8173 		initialize_builtins: void (), <./cc/cccp.c 11430>
 8174 		output_line_command: void (), <./cc/cccp.c 9722>
 8175 		make_definition: void (), <./cc/cccp.c 11529>
 8176 		make_assertion: void (), <./cc/cccp.c 11650>
 8177 		make_undef: void (), <./cc/cccp.c 11621>
 8178 		open: int (), <./cc/cccp.c 12283>
 8179 		perror_with_name: void (), <./cc/cccp.c 11881>
 8180 		deps_output: void (), <./cc/cccp.c 11782>
 8181 		file_size_and_mode: int (), <./cc/cccp.c 12004>
 8182 		safe_read: int (), <./cc/cccp.c 1302>
 8183 			read: int (), <./cc/cccp.c 12202>
 8184 			memchr: <>
 8185 		trigraph_pcp: void (), <./cc/cccp.c 3125>
 8186 			index0: U_CHAR * (), <./cc/cccp.c 3095>
 8187 				index: 3554
 8188 				strlen: <>
 8189 			bcopy: <>
 8190 			warning: 281
 8191 		buf_convert_rtf: void (), <./cc/cccp.c 12705>
 8192 		freopen: FILE * (), <./cc/cccp.c 12260>
 8193 		ilog_printf: void (), <./cc/cccp.c 5318>
 8194 		dump_all_macros: void (), <./cc/cccp.c 11315>
 8195 		write_output: void (), <./cc/cccp.c 7085>
 8196 		stop: void (), <./cc/cccp.c 12943>
 8197 		display: void (), <./cc/cccp.c 12949>
 8198 		clear_all_macros: void (), <./cc/cccp.c 12649>
 8199 		clear_import: void (), <./cc/cccp.c 12615>
 8200 		open: int (), <./cc/config/winnt/oldnames.c 26>
 8201 		read_tfile: <>
 8202 		print_aux: <>
 8203 		print_file_desc: <>
 8204 		print_symbol: <>
 8205 		type_to_string: <>
 8206 		fatal: void (), <./cc/cp/g++.c 194>
 8207 			error: void (), <./cc/cp/g++.c 185>
 8208 				fprintf: <>
 8209 			delete_temp_files: void (), <./cc/gcc.c 1669>
 8210 				delete_if_ordinary: void (), <./cc/gcc.c 1648>
 8211 					printf: <>
 8212 					fflush: <>
 8213 					getchar: <>
 8214 					stat: <>
 8215 					S_ISREG: <>
 8216 					unlink: 57
 8217 					perror_with_name: void (), <./cc/gcc.c 5903>
 8218 			exit: 5
 8219 		strchr: <>
 8220 		run_dos: void (), <./cc/cp/g++.c 325>
 8221 			choose_temp_base: void (), <./cc/cp/g++.c 276>
 8222 				choose_temp_base_try: char * (), <./cc/cp/g++.c 259>
 8223 					access: 7325
 8224 				getenv: <>
 8225 				strlen: <>
 8226 				xmalloc: 1643
 8227 				strcpy: <>
 8228 				mktemp: char * (), <./cc/config/winnt/oldnames.c 20>
 8229 				abort: <>
 8230 			malloc: <>
 8231 			strlen: <>
 8232 			sprintf: <>
 8233 			fopen: <>
 8234 			pfatal_with_name: 7154
 8235 			isspace: <>
 8236 			fputc: <>
 8237 			fclose: <>
 8238 			system: <>
 8239 			remove: <>
 8240 			perror_exec: void (), <./cc/cp/g++.c 310>
 8241 				concat: char * (), <./cc/gcc.c 5842>
 8242 				my_strerror: 7355
 8243 				error: 8207
 8244 		spawnvp: <>
 8245 		skip_spaces: <>
 8246 		read_upto: <>
 8247 		isalnum: <>
 8248 		verbose: void (), <./bison/print.c 63>
 8249 			verbose_conflict_log: void (), <./bison/conflicts.c 328>
 8250 				count_sr_conflicts: void (), <./bison/conflicts.c 413>
 8251 					ISVAR: if (), <./bison/closure.c 235>
 8252 					SETBIT: <>
 8253 				count_rr_conflicts: void (), <./bison/conflicts.c 481>
 8254 				fprintf: <>
 8255 				putc: <>
 8256 				total_conflicts: void (), <./bison/conflicts.c 369>
 8257 					fprintf: <>
 8258 					putc: <>
 8259 			print_grammar: void (), <./bison/print.c 246>
 8260 				fputs: <>
 8261 				fprintf: <>
 8262 				putc: <>
 8263 				strlen: <>
 8264 				END_TEST: <>
 8265 				sprintf: <>
 8266 			print_state: void (), <./bison/print.c 88>
 8267 				fprintf: <>
 8268 				print_core: void (), <./bison/print.c 98>
 8269 					fprintf: <>
 8270 					putc: <>
 8271 				print_actions: void (), <./bison/print.c 145>
 8272 					fprintf: <>
 8273 					ISVAR: if (), <./bison/closure.c 235>
 8274 					putc: <>
 8275 					print_reductions: void (), <./bison/conflicts.c 528>
 8276 						ISVAR: if (), <./bison/closure.c 235>
 8277 						SETBIT: <>
 8278 						fprintf: <>
 8279 						putc: <>
 8280 		hashf: <>
 8281 		fopen: <>
 8282 		gen_insn: void (), <./cc/gencodes.c 46>
 8283 			XSTR: <>
 8284 			printf: <>
 8285 		puts: <>
 8286 		float_signal: void (), <./cc/toplev.c 2102>
 8287 			abort: <>
 8288 			signal: Procedure (), <./cc/enquire.c 489>
 8289 			float_signal: 8286
 8290 			longjmp: <>
 8291 		pipe_closed: void (), <./cc/toplev.c 2119>
 8292 			fatal: 49
 8293 		decl_name: char * (), <./cc/toplev.c 1168>
 8294 			IDENTIFIER_POINTER: <>
 8295 			DECL_NAME: 250
 8296 		do_abort: void (), <./cc/toplev.c 1979>
 8297 			abort: <>
 8298 		interim_eh: void (), <./cc/toplev.c 1178>
 8299 		atoi: <>
 8300 		OPTIMIZATION_OPTIONS: <>
 8301 		init_reg_sets: void (), <./cc/regclass.c 200>
 8302 			CLEAR_HARD_REG_SET: <>
 8303 			SET_HARD_REG_BIT: <>
 8304 			bcopy: <>
 8305 			bzero: <>
 8306 			TEST_HARD_REG_BIT: <>
 8307 				SUBREG_REG: <>
 8308 				GET_CODE: 81
 8309 				GET_MODE_SIZE: 461
 8310 				GET_MODE: 139
 8311 				abort: <>
 8312 			COPY_HARD_REG_SET: <>
 8313 			IOR_HARD_REG_SET: <>
 8314 			GO_IF_HARD_REG_SUBSET: <>
 8315 			REGISTER_MOVE_COST: <>
 8316 			MAX: <>
 8317 			reg_class_subset_p: if (), <./cc/reload.c 3130>
 8318 		set_target_switch: void (), <./cc/toplev.c 4361>
 8319 			strcmp: 157
 8320 			strlen: <>
 8321 			strncmp: 233
 8322 			getenv: <>
 8323 			printf: <>
 8324 			set_target_switch: 8318
 8325 			NXGetAllArchInfos: <>
 8326 			error: 52
 8327 		lang_decode_option: int (), <./cc/objc-act.c 894>
 8328 			strcmp: 157
 8329 			cplus_decode_option: , <./cc/cp/decl2.c 461>
 8330 			c_decode_option: int (), <./cc/c-decl.c 591>
 8331 				strcmp: 157
 8332 		set_yydebug: void (), <./cc/c-lex.c 2127>
 8333 			warning: 281
 8334 		fix_register: void (), <./cc/regclass.c 496>
 8335 		error: 52
 8336 		bc_initialize: void (), <./cc/bc-emit.c 401>
 8337 			bc_init_mode_to_code_map: void (), <./cc/bc-optab.c 632>
 8338 			seg_create: struct bc_seg * (), <./cc/bc-emit.c 166>
 8339 			REAL_VALUE_ATOF: <>
 8340 			GET_MODE_SIZE: 461
 8341 			GET_MODE_CLASS: 492
 8342 			GET_MODE_BITSIZE: 447
 8343 		set_target_architecture: void (), <./cc/toplev.c 4453>
 8344 			strcmp: 157
 8345 			warning: 281
 8346 		print_switch_values: void (), <./cc/toplev.c 4506>
 8347 			fprintf: <>
 8348 			print_single_switch: void (), <./cc/toplev.c 4489>
 8349 				fprintf: <>
 8350 				strlen: <>
 8351 		compile_file: void (), <./cc/toplev.c 2225>
 8352 			strcmp: 157
 8353 			fopen: <>
 8354 			pfatal_with_name: 7154
 8355 			setvbuf: <>
 8356 			xmalloc: 1643
 8357 			init_obstacks: void (), <./cc/tree.c 288>
 8358 				gcc_obstack_init: 5537
 8359 				obstack_alloc: <>
 8360 			init_tree_codes: void (), <./cc/tree.c 887>
 8361 			init_lex: void (), <./bison/lex.c 75>
 8362 				init_spew: void (), <./cc/cp/spew.c 72>
 8363 					gcc_obstack_init: 5537
 8364 				set_identifier_size: void (), <./cc/tree.c 1284>
 8365 				lang_printable_name: 6006
 8366 				init_cplus_expand: void (), <./cc/cp/expr.c 246>
 8367 					cplus_expand_expr: rtx (), <./cc/cp/expr.c 36>
 8368 						TREE_TYPE: 160
 8369 						TYPE_MODE: <>
 8370 						TREE_CODE: 162
 8371 						TREE_OPERAND: <>
 8372 						my_friendly_assert: 379
 8373 						DECL_RTL: <>
 8374 						gen_reg_rtx: 523
 8375 						DECL_CONSTRUCTOR_P: if (), <./cc/cp/decl2.c 951>
 8376 						build_pointer_type: 390
 8377 						mark_addressable: <>
 8378 						TREE_PERMANENT: if (), <./cc/cp/decl.c 10271>
 8379 						tree_cons: <>
 8380 						build1: 334
 8381 						TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 8382 						TREE_VALUE: <>
 8383 						validize_mem: <>
 8384 						build: <>
 8385 						TREE_SIDE_EFFECTS: if (), <./cc/cp/typeck.c 4958>
 8386 						expand_call: rtx (), <./cc/calls.c 497>
 8387 							TREE_OPERAND: <>
 8388 							TREE_CODE: 162
 8389 							DECL_INLINE: if (), <./cc/dwarfout.c 2737>
 8390 							DECL_SAVED_INSNS: <>
 8391 							TREE_ADDRESSABLE: <>
 8392 							warning_with_decl: <>
 8393 							warning: 281
 8394 							mark_addressable: <>
 8395 							TREE_READONLY: if (), <./cc/cp/decl2.c 1229>
 8396 							TREE_THIS_VOLATILE: <>
 8397 							TYPE_MODE: <>
 8398 							TREE_TYPE: 160
 8399 							TYPE_STDCALL: <>
 8400 							REG_PARM_STACK_SPACE: <>
 8401 							AGGREGATE_TYPE_P: 1383
 8402 							aggregate_value_p: int (), <./cc/function.c 3125>
 8403 								TREE_CODE_CLASS: switch (), <./cc/dwarfout.c 3160>
 8404 								TREE_CODE: 162
 8405 								TREE_TYPE: 160
 8406 								RETURN_IN_MEMORY: <>
 8407 								AGGREGATE_TYPE_P: 1383
 8408 								hard_function_value: <>
 8409 								REGNO: 93
 8410 								HARD_REGNO_NREGS: <>
 8411 								TYPE_MODE: <>
 8412 							int_size_in_bytes: <>
 8413 							GET_CODE: 81
 8414 							XEXP: 105
 8415 							abort: <>
 8416 							assign_stack_temp: rtx (), <./cc/function.c 813>
 8417 								abort: <>
 8418 								GET_MODE: 139
 8419 								CEIL_ROUND: <>
 8420 								oballoc: 530
 8421 								gen_rtx: <>
 8422 								plus_constant: <>
 8423 								XEXP: 105
 8424 								assign_stack_local: 5798
 8425 							MEM_IN_STRUCT_P: <>
 8426 							get_last_insn: 1981
 8427 							expand_inline_function: rtx (), <./cc/integrate.c 1176>
 8428 								DECL_SAVED_INSNS: <>
 8429 								FIRST_FUNCTION_INSN: <>
 8430 								FIRST_PARM_INSN: <>
 8431 								FIRST_LABELNO: <>
 8432 								LAST_LABELNO: <>
 8433 								ORIGINAL_ARG_VECTOR: <>
 8434 								MAX_REGNUM: <>
 8435 								abort: <>
 8436 								list_length: 1446
 8437 								DECL_ARGUMENTS: <>
 8438 								TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 8439 								TREE_VALUE: <>
 8440 								TYPE_MODE: <>
 8441 								DECL_ARG_TYPE: <>
 8442 								TREE_TYPE: 160
 8443 								expand_expr: <>
 8444 								pushlevel: 1896
 8445 								expand_start_bindings: 1909
 8446 								alloca: <>
 8447 								convert: 427
 8448 								RTVEC_ELT: <>
 8449 								GET_CODE: 81
 8450 								XEXP: 105
 8451 								REGNO: 93
 8452 								assign_stack_temp: 8416
 8453 								int_size_in_bytes: <>
 8454 								MEM_IN_STRUCT_P: <>
 8455 								AGGREGATE_TYPE_P: 1383
 8456 								store_expr: <>
 8457 								GET_MODE: 139
 8458 								convert_modes: <>
 8459 								TREE_UNSIGNED: 678
 8460 								TREE_READONLY: if (), <./cc/cp/decl2.c 1229>
 8461 								reg_overlap_mentioned_p: 91
 8462 								copy_to_mode_reg: <>
 8463 								bzero: <>
 8464 								INSN_UID: <>
 8465 								max_reg_num: 4460
 8466 								get_last_insn: 1981
 8467 								OUTGOING_ARGS_SIZE: <>
 8468 								FUNCTION_FLAGS: <>
 8469 								REG_USERVAR_P: <>
 8470 								REG_LOOP_TEST_P: <>
 8471 								RTX_UNCHANGING_P: It is correct to set, <./cc/stmt.c 3489>
 8472 								lookup_static_chain: rtx (), <./cc/function.c 4323>
 8473 									decl_function_context: <>
 8474 									TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 8475 									TREE_PURPOSE: 215
 8476 									RTL_EXPR_RTL: <>
 8477 									TREE_VALUE: <>
 8478 									abort: <>
 8479 								NOTE_LINE_NUMBER: 177
 8480 								emit_note: 170
 8481 								NOTE_SOURCE_FILE: <>
 8482 								RTX_INTEGRATED_P: <>
 8483 								copy_addr_to_reg: <>
 8484 								CONSTANT_P: 118
 8485 								FIXED_BASE_PLUS_P: <>
 8486 								XSTR: <>
 8487 								machopic_name_defined_p: int (), <./cc/config/next/machopic.c 167>
 8488 								gen_rtx: <>
 8489 								machopic_function_base_name: 6826
 8490 								gen_realpart: <>
 8491 								gen_imagpart: <>
 8492 								DECL_SOURCE_FILE: <>
 8493 								DECL_SOURCE_LINE: 182
 8494 								copy_rtx_and_substitute: <>
 8495 								subst_constants: <>
 8496 								apply_change_group: 533
 8497 								memory_address_p: <>
 8498 								change_address: <>
 8499 								DECL_RTL: <>
 8500 								DECL_RESULT: <>
 8501 								aggregate_value_p: 8402
 8502 								force_reg: <>
 8503 								emit_move_insn: <>
 8504 								gen_reg_rtx: 523
 8505 								REG_FUNCTION_VALUE_P: <>
 8506 								gen_label_rtx: rtx (), <./cc/emit-rtl.c 1327>
 8507 								emit_queue: void (), <./cc/expr.c 530>
 8508 								do_pending_stack_adjust: 3642
 8509 								emit_stack_save: <>
 8510 								NEXT_INSN: <>
 8511 								PATTERN: <>
 8512 								single_set: 560
 8513 								SET_DEST: 87
 8514 								volatile_refs_p: <>
 8515 								SET_SRC: 484
 8516 								emit_insn: <>
 8517 								rtx_equal_p: 143
 8518 								REG_NOTES: <>
 8519 								sets_cc0_p: <>
 8520 								try_constants: <>
 8521 								gen_jump: <>
 8522 								emit_jump_insn: <>
 8523 								condjump_p: <>
 8524 								simplejump_p: if (), <./cc/cse.c 8510>
 8525 								delete_insn: <>
 8526 								PREV_INSN: <>
 8527 								emit_barrier: rtx (), <./cc/emit-rtl.c 2761>
 8528 								emit_call_insn: <>
 8529 								CALL_INSN_FUNCTION_USAGE: <>
 8530 								emit_label: <>
 8531 								CODE_LABEL_NUMBER: <>
 8532 								LABEL_NAME: <>
 8533 								GET_RTX_CLASS: 141
 8534 								emit_stack_restore: <>
 8535 								integrate_parm_decls: void (), <./cc/integrate.c 1978>
 8536 									TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 8537 									build_decl: 888
 8538 									DECL_NAME: 250
 8539 									TREE_TYPE: 160
 8540 									copy_rtx_and_substitute: <>
 8541 									RTVEC_ELT: <>
 8542 									DECL_ARG_TYPE: <>
 8543 									TREE_USED: <>
 8544 									DECL_ABSTRACT_ORIGIN: <>
 8545 									pushdecl: <>
 8546 									subst_constants: <>
 8547 									apply_change_group: 533
 8548 									DECL_RTL: <>
 8549 								integrate_decl_tree: void (), <./cc/integrate.c 2023>
 8550 									pushlevel: 1896
 8551 									BLOCK_VARS: <>
 8552 									TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 8553 									push_obstacks_nochange: 517
 8554 									saveable_allocation: void (), <./cc/tree.c 486>
 8555 									copy_node: 874
 8556 									pop_obstacks: 396
 8557 									DECL_RTL: <>
 8558 									copy_rtx_and_substitute: <>
 8559 									subst_constants: <>
 8560 									apply_change_group: 533
 8561 									TREE_USED: <>
 8562 									DECL_LANG_SPECIFIC: if (), <./cc/cp/decl.c 2992>
 8563 									copy_lang_decl: void (), <./cc/cp/lex.c 4888>
 8564 										TREE_CODE: 162
 8565 										obstack_alloc: <>
 8566 										DECL_LANG_SPECIFIC: if (), <./cc/cp/decl.c 2992>
 8567 									DECL_EXTERNAL: else if (), <./cc/dwarfout.c 3220>
 8568 									TREE_PUBLIC: 194
 8569 									DECL_ABSTRACT_ORIGIN: <>
 8570 									pushdecl: <>
 8571 									BLOCK_SUBBLOCKS: <>
 8572 									integrate_decl_tree: 8549
 8573 									poplevel: 1949
 8574 									BLOCK_ABSTRACT_ORIGIN: <>
 8575 								ORIGINAL_DECL_INITIAL: <>
 8576 								expand_end_bindings: <>
 8577 								getdecls: 2026
 8578 								poplevel: 1949
 8579 								BLOCK_ABSTRACT_ORIGIN: <>
 8580 								DECL_ABSTRACT_ORIGIN: <>
 8581 								emit_line_note: 169
 8582 								memory_address: <>
 8583 							expand_cleanups_to: 4242
 8584 							NEXT_INSN: <>
 8585 							OUTGOING_ARGS_SIZE: <>
 8586 							start_sequence: void (), <./cc/emit-rtl.c 2919>
 8587 							emit_stack_save: <>
 8588 							allocate_dynamic_stack_space: <>
 8589 							GEN_INT: <>
 8590 							get_insns: rtx (), <./cc/emit-rtl.c 1696>
 8591 							end_sequence: 479
 8592 							emit_insns_before: <>
 8593 							emit_stack_restore: <>
 8594 							rtx_equal_p: 143
 8595 							DECL_NAME: 250
 8596 							IDENTIFIER_POINTER: <>
 8597 							strcmp: 157
 8598 							TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 8599 							IDENTIFIER_LENGTH: <>
 8600 							do_pending_stack_adjust: 3642
 8601 							push_temp_slots: 1914
 8602 							INIT_CUMULATIVE_ARGS: <>
 8603 							copy_addr_to_reg: <>
 8604 							tree_cons: <>
 8605 							make_tree: <>
 8606 							build_pointer_type: 390
 8607 							TYPE_ARG_TYPES: 791
 8608 							list_length: 1446
 8609 							alloca: <>
 8610 							bzero: <>
 8611 							TREE_VALUE: <>
 8612 							TYPE_SIZE: if (), <./cc/dwarfout.c 3636>
 8613 							TYPE_TRANSPARENT_UNION: <>
 8614 							TYPE_FIELDS: <>
 8615 							contains_placeholder_p: <>
 8616 							FUNCTION_ARG_PASS_BY_REFERENCE: <>
 8617 							FUNCTION_ARG_CALLEE_COPIES: <>
 8618 							REG_P: if (), <./cc/expr.c 3309>
 8619 							DECL_RTL: <>
 8620 							build1: 334
 8621 							expr_size: <>
 8622 							gen_rtx: <>
 8623 							TYPE_ALIGN: <>
 8624 							store_expr: <>
 8625 							TREE_UNSIGNED: 678
 8626 							promote_mode: <>
 8627 							FUNCTION_ARG: <>
 8628 							FUNCTION_ARG_PARTIAL_NREGS: <>
 8629 							MUST_PASS_IN_STACK: <>
 8630 							locate_and_pad_parm: void (), <./cc/function.c 4040>
 8631 								size_in_bytes: <>
 8632 								size_int: <>
 8633 								GET_MODE_SIZE: 461
 8634 								FUNCTION_ARG_PADDING: <>
 8635 								FUNCTION_ARG_BOUNDARY: <>
 8636 								REG_PARM_STACK_SPACE: <>
 8637 								size_binop: <>
 8638 								ARGS_SIZE_TREE: <>
 8639 								TREE_CODE: 162
 8640 								TREE_INT_CST_LOW: <>
 8641 								round_up: <>
 8642 								SUB_PARM_SIZE: <>
 8643 								pad_to_arg_alignment: void (), <./cc/function.c 4147>
 8644 									round_down: tree (), <./cc/function.c 4206>
 8645 										size_binop: <>
 8646 										size_int: <>
 8647 									round_up: <>
 8648 									ARGS_SIZE_TREE: <>
 8649 									FLOOR_ROUND: <>
 8650 									CEIL_ROUND: <>
 8651 								PUSH_ROUNDING: 6764
 8652 								pad_below: void (), <./cc/function.c 4178>
 8653 									GET_MODE_BITSIZE: 447
 8654 									GET_MODE_SIZE: 461
 8655 									TREE_CODE: 162
 8656 									TREE_INT_CST_LOW: <>
 8657 									round_up: <>
 8658 									ADD_PARM_SIZE: <>
 8659 									SUB_PARM_SIZE: <>
 8660 								ADD_PARM_SIZE: <>
 8661 							ADD_PARM_SIZE: <>
 8662 							SUB_PARM_SIZE: <>
 8663 							FUNCTION_ARG_ADVANCE: <>
 8664 							FINAL_REG_PARM_STACK_SPACE: <>
 8665 							ARGS_SIZE_TREE: <>
 8666 							round_up: <>
 8667 							size_binop: <>
 8668 							size_int: <>
 8669 							MAX: <>
 8670 							reg_mentioned_p: else if (), <./cc/loop.c 5796>
 8671 							copy_to_reg: <>
 8672 							calls_function: int (), <./cc/calls.c 144>
 8673 								calls_function_1: int (), <./cc/calls.c 156>
 8674 									TREE_CODE: 162
 8675 									TREE_CODE_CLASS: switch (), <./cc/dwarfout.c 3160>
 8676 									TREE_OPERAND: <>
 8677 									DECL_BUILT_IN: 2952
 8678 									DECL_FUNCTION_CODE: switch (), <./cc/expr.c 7380>
 8679 									DECL_SAVED_INSNS: <>
 8680 									FUNCTION_FLAGS: <>
 8681 									SAVE_EXPR_RTL: 5776
 8682 									value_member: 2310
 8683 									tree_cons: <>
 8684 									calls_function_1: 8673
 8685 									BLOCK_VARS: <>
 8686 									TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 8687 									DECL_INITIAL: 168
 8688 									BLOCK_SUBBLOCKS: <>
 8689 							expand_expr: <>
 8690 							preserve_temp_slots: <>
 8691 							pop_temp_slots: 3685
 8692 							emit_queue: void (), <./cc/expr.c 530>
 8693 							protect_from_queue: <>
 8694 							convert_modes: <>
 8695 							push_block: <>
 8696 							ARGS_SIZE_RTX: <>
 8697 							bcopy: <>
 8698 							INTVAL: 129
 8699 							plus_constant: <>
 8700 							anti_adjust_stack: <>
 8701 							TREE_USED: <>
 8702 							assemble_external: <>
 8703 							DECL_STDCALL: <>
 8704 							malloc: <>
 8705 							strlen: <>
 8706 							sprintf: <>
 8707 							DECL_ASSEMBLER_NAME: <>
 8708 							get_identifier: <>
 8709 							free: <>
 8710 							XSTR: <>
 8711 							DECL_DLLIMPORT: <>
 8712 							copy_rtx: <>
 8713 							PUT_MODE: <>
 8714 							GET_MODE: 139
 8715 							force_reg: <>
 8716 							hard_function_value: <>
 8717 							SUBREG_REG: <>
 8718 							rtx_cost: 3959
 8719 							preserve_subexpressions_p: 3956
 8720 							copy_to_mode_reg: <>
 8721 							mode_for_size: <>
 8722 							MIN: <>
 8723 							GET_MODE_SIZE: 461
 8724 							memory_address: <>
 8725 							emit_block_move: <>
 8726 							validize_mem: <>
 8727 							gen_reg_rtx: 523
 8728 							emit_move_insn: <>
 8729 							store_one_arg: void (), <./cc/calls.c 3009>
 8730 								TREE_CODE: 162
 8731 								push_temp_slots: 1914
 8732 								GET_CODE: 81
 8733 								XEXP: 105
 8734 								INTVAL: 129
 8735 								abort: <>
 8736 								mode_for_size: <>
 8737 								gen_rtx: <>
 8738 								memory_address: <>
 8739 								assign_stack_temp: 8416
 8740 								MEM_IN_STRUCT_P: <>
 8741 								AGGREGATE_TYPE_P: 1383
 8742 								TREE_TYPE: 160
 8743 								preserve_temp_slots: <>
 8744 								emit_block_move: <>
 8745 								validize_mem: <>
 8746 								GEN_INT: <>
 8747 								gen_reg_rtx: 523
 8748 								emit_move_insn: <>
 8749 								expand_expr: <>
 8750 								TYPE_MODE: <>
 8751 								convert_modes: <>
 8752 								do_pending_stack_adjust: 3642
 8753 								GET_MODE_SIZE: 461
 8754 								PUSH_ROUNDING: 6764
 8755 								FUNCTION_ARG_PADDING: <>
 8756 								emit_push_insn: <>
 8757 								ARGS_SIZE_RTX: <>
 8758 								int_size_in_bytes: <>
 8759 								expr_size: <>
 8760 								TYPE_ALIGN: <>
 8761 								emit_queue: void (), <./cc/expr.c 530>
 8762 								free_temp_slots: void (), <./cc/function.c 1165>
 8763 								pop_temp_slots: 3685
 8764 							operand_subword_force: <>
 8765 							emit_insn: <>
 8766 							store_bit_field: rtx (), <./cc/expmed.c 221>
 8767 							extract_bit_field: <>
 8768 							force_operand: <>
 8769 							use_reg: <>
 8770 							prepare_call_address: rtx (), <./cc/calls.c 255>
 8771 								protect_from_queue: <>
 8772 								lookup_static_chain: 8472
 8773 								GET_CODE: 81
 8774 								force_not_mem: <>
 8775 								memory_address: <>
 8776 								force_reg: <>
 8777 								emit_move_insn: <>
 8778 								use_reg: <>
 8779 							REGNO: 93
 8780 							move_block_to_reg: void (), <./cc/expr.c 1706>
 8781 							use_regs: <>
 8782 							emit_call_1: void (), <./cc/calls.c 342>
 8783 								GEN_INT: <>
 8784 								GET_CODE: 81
 8785 								memory_address: <>
 8786 								RETURN_POPS_ARGS: <>
 8787 								gen_call_value_pop: <>
 8788 								gen_rtx: <>
 8789 								gen_call_pop: <>
 8790 								emit_call_insn: <>
 8791 								gen_call_value: <>
 8792 								gen_call: <>
 8793 								abort: <>
 8794 								get_last_insn: 1981
 8795 								PREV_INSN: <>
 8796 								CALL_INSN_FUNCTION_USAGE: <>
 8797 								XEXP: 105
 8798 								CONST_CALL_P: <>
 8799 								TREE_CODE: 162
 8800 								TYPE_STDCALL: <>
 8801 								TYPE_ARG_TYPES: 791
 8802 								TREE_VALUE: <>
 8803 								tree_last: <>
 8804 								adjust_stack: <>
 8805 							emit_libcall_block: 4777
 8806 							emit_insns: <>
 8807 							emit_note: 170
 8808 							emit_barrier: rtx (), <./cc/emit-rtl.c 2761>
 8809 							convert_to_mode: <>
 8810 							operand_subword: <>
 8811 							SUBREG_PROMOTED_VAR_P: <>
 8812 							SUBREG_PROMOTED_UNSIGNED_P: <>
 8813 						build_decl: 888
 8814 						TREE_ADDRESSABLE: <>
 8815 						expand_aggr_init: 3843
 8816 						TYPE_NEEDS_DESTRUCTOR: <>
 8817 						build_reference_type: 1407
 8818 						XEXP: 105
 8819 						maybe_build_cleanup: 5018
 8820 						convert_from_reference: 3251
 8821 						expand_expr: <>
 8822 						TYPE_HAS_TRIVIAL_INIT_REF: 2596
 8823 						GET_MODE: 139
 8824 						emit_block_move: <>
 8825 						expr_size: <>
 8826 						TYPE_ALIGN: <>
 8827 						emit_move_insn: <>
 8828 						GET_CODE: 81
 8829 						REGNO: 93
 8830 						my_friendly_abort: 357
 8831 						default_conversion: 165
 8832 						resolve_offset_ref: 3351
 8833 						build_unary_op: <>
 8834 						expand_throw: void (), <./cc/cp/except.c 1556>
 8835 							doing_eh: 3912
 8836 							gen_label_rtx: rtx (), <./cc/emit-rtl.c 1327>
 8837 							emit_label: <>
 8838 							decay_conversion: <>
 8839 							TREE_CODE: 162
 8840 							TREE_TYPE: 160
 8841 							build_eh_type: tree (), <./cc/cp/except.c 884>
 8842 								build_typeid: tree (), <./cc/cp/gc.c 418>
 8843 									cp_error: 259
 8844 									TREE_TYPE: 160
 8845 									TYPE_MAIN_VARIANT: 324
 8846 									TREE_CODE: 162
 8847 									get_typeid: tree (), <./cc/cp/gc.c 472>
 8848 										TREE_CODE: 162
 8849 										TREE_TYPE: 160
 8850 										build_t_desc: tree (), <./cc/cp/gc.c 1204>
 8851 											init_type_desc: int (), <./cc/cp/decl.c 5597>
 8852 												lookup_name: 1474
 8853 												get_identifier: <>
 8854 												TREE_TYPE: 160
 8855 												build_pointer_type: 390
 8856 												lookup_field: <>
 8857 											build_t_desc: 8850
 8858 											cp_error: 259
 8859 											add_uninstantiated_desc: void (), <./cc/cp/gc.c 1032>
 8860 												xmalloc: 1643
 8861 											push_obstacks: 392
 8862 											build_t_desc_overload: tree (), <./cc/cp/method.c 1071>
 8863 												OB_INIT: <>
 8864 												OB_PUTS: <>
 8865 												TYPE_SIZE: if (), <./cc/dwarfout.c 3636>
 8866 												isupper: <>
 8867 												tolower: <>
 8868 												my_friendly_assert: 379
 8869 												build_overload_name: 767
 8870 												get_identifier: <>
 8871 												obstack_base: <>
 8872 											IDENTIFIER_AS_DESC: <>
 8873 											build_decl: 888
 8874 											DECL_EXTERNAL: else if (), <./cc/dwarfout.c 3220>
 8875 											TREE_PUBLIC: 194
 8876 											pushdecl_top_level: <>
 8877 											SET_IDENTIFIER_AS_DESC: <>
 8878 											build_unary_op: <>
 8879 											cp_finish_decl: 3002
 8880 											TREE_OPERAND: <>
 8881 											TREE_ASM_WRITTEN: else if (), <./cc/dwarfout.c 3566>
 8882 											DECL_INITIAL: 168
 8883 											get_def_to_follow: tree (), <./cc/cp/gc.c 1048>
 8884 												TYPE_VOLATILE: <>
 8885 												TREE_CODE: 162
 8886 												IS_AGGR_TYPE: else if (), <./cc/cp/typeck.c 6140>
 8887 												TREE_TYPE: 160
 8888 											IS_AGGR_TYPE: else if (), <./cc/cp/typeck.c 6140>
 8889 											CLASSTYPE_VFIELD: <>
 8890 											CLASSTYPE_INTERFACE_KNOWN: <>
 8891 											CLASSTYPE_INTERFACE_ONLY: <>
 8892 											DECL_CONTEXT: 267
 8893 											TREE_CODE_CLASS: switch (), <./cc/dwarfout.c 3160>
 8894 											TREE_CODE: 162
 8895 											pushclass: 1930
 8896 											TYPE_VOLATILE: <>
 8897 											TYPE_READONLY: 217
 8898 											build_attr_desc: tree (), <./cc/cp/gc.c 952>
 8899 												TYPE_READONLY: 217
 8900 												TYPE_VOLATILE: <>
 8901 												lookup_field: <>
 8902 												get_identifier: <>
 8903 												build_t_desc: 8850
 8904 												TYPE_MAIN_VARIANT: 324
 8905 												build_indirect_ref: 329
 8906 												tree_cons: <>
 8907 												build_generic_desc: tree (), <./cc/cp/gc.c 693>
 8908 													global_bindings_p: 1509
 8909 													TREE_CONSTANT: if (), <./cc/fold-const.c 3102>
 8910 													TREE_STATIC: if (), <./cc/stor-layout.c 332>
 8911 													TREE_READONLY: if (), <./cc/cp/decl2.c 1229>
 8912 													TREE_TYPE: 160
 8913 													DECL_INITIAL: 168
 8914 													DECL_SIZE: <>
 8915 													layout_decl: <>
 8916 													push_to_top_level: 5583
 8917 													cp_finish_decl: 3002
 8918 													pop_from_top_level: 5621
 8919 													TREE_USED: <>
 8920 													assemble_external: <>
 8921 													IDENTIFIER_AS_DESC: <>
 8922 													DECL_NAME: 250
 8923 											build_ptr_desc: tree (), <./cc/cp/gc.c 937>
 8924 												TREE_TYPE: 160
 8925 												build_t_desc: 8850
 8926 												build_indirect_ref: 329
 8927 												tree_cons: <>
 8928 												build_generic_desc: 8907
 8929 											TREE_TYPE: 160
 8930 											build_ptmd_desc: tree (), <./cc/cp/gc.c 1010>
 8931 												build_t_desc: 8850
 8932 												TYPE_OFFSET_BASETYPE: <>
 8933 												build_indirect_ref: 329
 8934 												TREE_TYPE: 160
 8935 												tree_cons: <>
 8936 												build_generic_desc: 8907
 8937 											TYPE_BUILT_IN: <>
 8938 											build_bltn_desc: tree (), <./cc/cp/gc.c 727>
 8939 												lookup_field: <>
 8940 												get_identifier: <>
 8941 												cp_compiler_error: void (), <./cc/cp/errfn.c 184>
 8942 													cp_thing: 260
 8943 													compiler_error: 4285
 8944 												tree_cons: <>
 8945 												build_generic_desc: 8907
 8946 											TYPE_PTRMEMFUNC_P: 258
 8947 											build_ptmf_desc: tree (), <./cc/cp/gc.c 995>
 8948 												DECL_NAME: 250
 8949 												combine_strings: tree (), <./cc/c-common.c 105>
 8950 													TYPE_PRECISION: 211
 8951 													TREE_TYPE: 160
 8952 													TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 8953 													TREE_STRING_LENGTH: <>
 8954 													warning: 281
 8955 													error: 52
 8956 													savealloc: char * (), <./cc/tree.c 698>
 8957 													TREE_STRING_POINTER: <>
 8958 													bcopy: <>
 8959 													make_node: 307
 8960 													TREE_CONSTANT: if (), <./cc/fold-const.c 3102>
 8961 													build_type_variant: 1000
 8962 													build_array_type: 974
 8963 													build_index_type: 1516
 8964 													build_int_2: <>
 8965 													TREE_STATIC: if (), <./cc/stor-layout.c 332>
 8966 												build_string: 6605
 8967 												IDENTIFIER_LENGTH: <>
 8968 												IDENTIFIER_POINTER: <>
 8969 												build_generic_desc: 8907
 8970 											build_class_desc: tree (), <./cc/cp/gc.c 809>
 8971 												DECL_NAME: 250
 8972 												CLASSTYPE_N_BASECLASSES: <>
 8973 												TYPE_BINFO_BASETYPES: <>
 8974 												CLASSTYPE_VBASECLASSES: <>
 8975 												access: 7325
 8976 												lookup_field: <>
 8977 												get_identifier: <>
 8978 												build_tree_list: <>
 8979 												TREE_VEC_ELT: <>
 8980 												build_t_desc: 8850
 8981 												BINFO_TYPE: <>
 8982 												TREE_VIA_VIRTUAL: 1041
 8983 												alloca: <>
 8984 												TYPE_NAME_LENGTH: <>
 8985 												sprintf: <>
 8986 												TYPE_NAME_STRING: <>
 8987 												size_binop: <>
 8988 												DECL_FIELD_BITPOS: <>
 8989 												size_int: <>
 8990 												BINFO_OFFSET: <>
 8991 												TREE_VIA_PUBLIC: <>
 8992 												TREE_VIA_PROTECTED: <>
 8993 												build_int_2: <>
 8994 												tree_cons: <>
 8995 												TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 8996 												finish_table: tree (), <./cc/cp/decl2.c 2351>
 8997 													build_index_type: 1516
 8998 													size_int: <>
 8999 													list_length: 1446
 9000 													build_cplus_array_type: 972
 9001 													layout_type: <>
 9002 													TREE_VALUE: <>
 9003 													TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 9004 													get_temp_name: 3609
 9005 													build: <>
 9006 													TREE_CONSTANT: if (), <./cc/fold-const.c 3102>
 9007 													TREE_STATIC: if (), <./cc/stor-layout.c 332>
 9008 													DECL_INITIAL: 168
 9009 													build_string: 6605
 9010 													IDENTIFIER_LENGTH: <>
 9011 													DECL_NAME: 250
 9012 													IDENTIFIER_POINTER: <>
 9013 													cp_finish_decl: 3002
 9014 													build_decl: 888
 9015 													pushdecl: <>
 9016 													TREE_PUBLIC: 194
 9017 													DECL_EXTERNAL: else if (), <./cc/dwarfout.c 3220>
 9018 												build_pointer_type: 390
 9019 												combine_strings: 8949
 9020 												build_string: 6605
 9021 												IDENTIFIER_LENGTH: <>
 9022 												IDENTIFIER_POINTER: <>
 9023 												default_conversion: 165
 9024 												build_generic_desc: 8907
 9025 											build_func_desc: tree (), <./cc/cp/gc.c 981>
 9026 												DECL_NAME: 250
 9027 												combine_strings: 8949
 9028 												build_string: 6605
 9029 												IDENTIFIER_LENGTH: <>
 9030 												IDENTIFIER_POINTER: <>
 9031 												build_generic_desc: 8907
 9032 											build_user_desc: tree (), <./cc/cp/gc.c 795>
 9033 												DECL_NAME: 250
 9034 												combine_strings: 8949
 9035 												build_string: 6605
 9036 												IDENTIFIER_LENGTH: <>
 9037 												IDENTIFIER_POINTER: <>
 9038 												build_generic_desc: 8907
 9039 											pop_obstacks: 396
 9040 											target_type: 3214
 9041 											lookup_name: 1474
 9042 											CLASSTYPE_VTABLE_NEEDS_WRITING: <>
 9043 											build_tree_list: <>
 9044 											TYPE_LANG_SPECIFIC: 370
 9045 											CLASSTYPE_N_BASECLASSES: <>
 9046 											CLASSTYPE_METHOD_VEC: <>
 9047 											TYPE_BINFO_BASETYPES: <>
 9048 											CLASSTYPE_VBASECLASSES: <>
 9049 											tree_cons: <>
 9050 											BINFO_TYPE: <>
 9051 											TREE_VEC_ELT: <>
 9052 											BINFO_OFFSET: <>
 9053 											TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 9054 											TREE_VEC_END: <>
 9055 											build_m_desc: tree (), <./cc/cp/gc.c 1400>
 9056 												TYPE_ARG_TYPES: 791
 9057 												TREE_TYPE: 160
 9058 												TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 9059 												TREE_VALUE: <>
 9060 												TREE_CODE: 162
 9061 												TYPE_VOLATILE: <>
 9062 												tree_cons: <>
 9063 												build_t_desc: 8850
 9064 												IS_AGGR_TYPE: else if (), <./cc/cp/typeck.c 6140>
 9065 												TREE_PURPOSE: 215
 9066 												finish_table: 8996
 9067 												build_pointer_type: 390
 9068 												nreverse: <>
 9069 												build_int_2: <>
 9070 												DECL_VINDEX: <>
 9071 												DECL_CONTEXT: 267
 9072 												TREE_CODE_CLASS: switch (), <./cc/dwarfout.c 3160>
 9073 												DECL_NAME: 250
 9074 												DECL_ASSEMBLER_NAME: <>
 9075 												combine_strings: 8949
 9076 												build_string: 6605
 9077 												IDENTIFIER_LENGTH: <>
 9078 												IDENTIFIER_POINTER: <>
 9079 												build_unary_op: <>
 9080 												build_c_cast: <>
 9081 												build_tree_list: <>
 9082 												build: <>
 9083 												TREE_CONSTANT: if (), <./cc/fold-const.c 3102>
 9084 												TREE_STATIC: if (), <./cc/stor-layout.c 332>
 9085 												TREE_READONLY: if (), <./cc/cp/decl2.c 1229>
 9086 											TYPE_FIELDS: <>
 9087 											build_i_desc: tree (), <./cc/cp/gc.c 1367>
 9088 												DECL_NAME: 250
 9089 												combine_strings: 8949
 9090 												build_string: 6605
 9091 												IDENTIFIER_LENGTH: <>
 9092 												IDENTIFIER_POINTER: <>
 9093 												TREE_TYPE: 160
 9094 												TREE_CODE: 162
 9095 												TYPE_VOLATILE: <>
 9096 												tree_cons: <>
 9097 												build_unary_op: <>
 9098 												DECL_FIELD_BITPOS: <>
 9099 												build_tree_list: <>
 9100 												build_t_desc: 8850
 9101 												IS_AGGR_TYPE: else if (), <./cc/cp/typeck.c 6140>
 9102 												build: <>
 9103 												TREE_CONSTANT: if (), <./cc/fold-const.c 3102>
 9104 												TREE_STATIC: if (), <./cc/stor-layout.c 332>
 9105 												TREE_READONLY: if (), <./cc/cp/decl2.c 1229>
 9106 											nreverse: <>
 9107 											finish_table: 8996
 9108 											build_pointer_type: 390
 9109 											combine_strings: 8949
 9110 											build_string: 6605
 9111 											IDENTIFIER_LENGTH: <>
 9112 											IDENTIFIER_POINTER: <>
 9113 											TYPE_SIZE: if (), <./cc/dwarfout.c 3636>
 9114 											size_in_bytes: <>
 9115 											build_int_2: <>
 9116 											build_generic_desc: 8907
 9117 										TREE_OPERAND: <>
 9118 									build_reference_type: 1407
 9119 									TYPE_VIRTUAL_P: <>
 9120 									build_vfn_ref: 2635
 9121 									build_pointer_type: 390
 9122 									build_indirect_ref: 329
 9123 								build1: 334
 9124 								build_eh_type_type: tree (), <./cc/cp/except.c 855>
 9125 									TREE_CODE: 162
 9126 									TREE_TYPE: 160
 9127 									TYPE_MAIN_VARIANT: 324
 9128 									build1: 334
 9129 									get_typeid: 8847
 9130 									build_overload_name: 767
 9131 									combine_strings: 8949
 9132 									build_string: 6605
 9133 									strlen: <>
 9134 								TREE_TYPE: 160
 9135 							build_reinterpret_cast: <>
 9136 							build_new: tree (), <./cc/cp/init.c 2849>
 9137 								TREE_CODE: 162
 9138 								TREE_VALUE: <>
 9139 								DECL_CONSTRUCTOR_P: if (), <./cc/cp/decl2.c 951>
 9140 								my_friendly_abort: 357
 9141 								TREE_OPERAND: <>
 9142 								save_expr: <>
 9143 								convert: 427
 9144 								build_binary_op: 164
 9145 								groktypename: 1458
 9146 								get_pending_sizes: 2998
 9147 								IDENTIFIER_HAS_TYPE_VALUE: else if (), <./cc/cp/call.c 1742>
 9148 								IDENTIFIER_TYPE_VALUE: <>
 9149 								TYPE_NAME: 271
 9150 								lookup_name: 1474
 9151 								my_friendly_assert: 379
 9152 								TREE_TYPE: 160
 9153 								array_type_nelts_top: <>
 9154 								TYPE_READONLY: 217
 9155 								TYPE_VOLATILE: <>
 9156 								TYPE_MAIN_VARIANT: 324
 9157 								fold: <>
 9158 								size_in_bytes: <>
 9159 								TYPE_SIZE: if (), <./cc/dwarfout.c 3636>
 9160 								incomplete_type_error: 348
 9161 								TYPE_LANG_SPECIFIC: 370
 9162 								CLASSTYPE_ABSTRACT_VIRTUALS: 5060
 9163 								abstract_virtuals_error: 5061
 9164 								IS_SIGNATURE: 1061
 9165 								signature_error: 1062
 9166 								TYPE_VEC_NEW_USES_COOKIE: <>
 9167 								size_binop: <>
 9168 								TYPE_GETS_NEW: <>
 9169 								build_opfncall: 3433
 9170 								build_pointer_type: 390
 9171 								TYPE_NEEDS_CONSTRUCTING: <>
 9172 								build_builtin_call: 3266
 9173 								build_tree_list: <>
 9174 								build: <>
 9175 								build1: 334
 9176 								TREE_CALLS_NEW: <>
 9177 								get_temp_name: 3609
 9178 								TREE_SIDE_EFFECTS: if (), <./cc/cp/typeck.c 4958>
 9179 								build_indirect_ref: 329
 9180 								build_component_ref: 159
 9181 								build_compound_expr: <>
 9182 								tree_cons: <>
 9183 								done: 61
 9184 								IS_AGGR_TYPE: else if (), <./cc/cp/typeck.c 6140>
 9185 								TREE_READONLY: if (), <./cc/cp/decl2.c 1229>
 9186 								TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 9187 								convert_for_initialization: <>
 9188 								build_modify_expr: <>
 9189 								TREE_NO_UNUSED_WARNING: <>
 9190 								TYPE_USES_VIRTUAL_BASECLASSES: <>
 9191 								build_method_call: <>
 9192 								constructor_name_full: <>
 9193 								TREE_HAS_CONSTRUCTOR: <>
 9194 								copy_to_permanent: 1830
 9195 								expand_vec_init: 3851
 9196 								perm_tree_cons: <>
 9197 								make_node: 307
 9198 								TREE_CONSTANT: if (), <./cc/fold-const.c 3102>
 9199 								do_pending_stack_adjust: 3642
 9200 								start_sequence_for_rtl_expr: void (), <./cc/emit-rtl.c 2947>
 9201 									start_sequence: void (), <./cc/emit-rtl.c 2919>
 9202 								emit_note: 170
 9203 								expand_expr: <>
 9204 								RTL_EXPR_SEQUENCE: <>
 9205 								get_insns: rtx (), <./cc/emit-rtl.c 1696>
 9206 								end_sequence: 479
 9207 								RTL_EXPR_RTL: <>
 9208 								SAVE_EXPR_RTL: 5776
 9209 								DECL_RTL: <>
 9210 								cp_error: 259
 9211 								build_conditional_expr: <>
 9212 								build_c_cast: <>
 9213 								chainon: 1712
 9214 								c_sizeof_nowarn: 3464
 9215 							build_tree_list: <>
 9216 							build_indirect_ref: 329
 9217 							build_modify_expr: <>
 9218 							expand_expr: <>
 9219 							build1: 334
 9220 							expand_internal_throw: <>
 9221 							gen_rtx: <>
 9222 						unsave_expr_now: <>
 9223 				realloc: <>
 9224 				oballoc: 530
 9225 				get_identifier: <>
 9226 				IDENTIFIER_OPNAME_P: <>
 9227 				init_method: void (), <./cc/cp/method.c 70>
 9228 					gcc_obstack_init: 5537
 9229 					obstack_alloc: <>
 9230 				init_error: void (), <./cc/cp/error.c 95>
 9231 					gcc_obstack_init: 5537
 9232 					obstack_alloc: <>
 9233 				gcc_obstack_init: 5537
 9234 				obstack_alloc: <>
 9235 				xmalloc: 1643
 9236 				SET_IDENTIFIER_AS_LIST: <>
 9237 				build_tree_list: <>
 9238 				forget_protocol_qualifiers: void (), <./cc/c-lex.c 119>
 9239 					forget_saved_protocol_qualifiers: void (), <./cc/cp/spew.c 461>
 9240 						num_tokens: int (), <./cc/cp/spew.c 82>
 9241 							obstack_object_size: int () (), <./cc/obstack.c 408>
 9242 						nth_token: struct token (), <./cc/cp/spew.c 90>
 9243 						TREE_CODE: 162
 9244 						IDENTIFIER_POINTER: <>
 9245 						strcmp: 157
 9246 				build_int_2: <>
 9247 				TREE_TYPE: 160
 9248 				init_filename_times: void (), <./cc/cp/lex.c 507>
 9249 					get_time_identifier: 2877
 9250 					my_get_run_time: <>
 9251 					TREE_INT_CST_LOW: <>
 9252 					IDENTIFIER_LOCAL_VALUE: <>
 9253 				UNSET_RESERVED_WORD: <>
 9254 				init_parse: int * (), <./cc/cp/lex.c 1062>
 9255 					malloc: <>
 9256 				setlocale: <>
 9257 				NEW2: <>
 9258 			init_rtl: void (), <./cc/rtl.c 783>
 9259 			init_emit_once: void (), <./cc/emit-rtl.c 3287>
 9260 				GET_CLASS_NARROWEST_MODE: <>
 9261 				GET_MODE_WIDER_MODE: <>
 9262 				GET_MODE_BITSIZE: 447
 9263 				mode_for_size: <>
 9264 				GET_MODE_CLASS: 492
 9265 				gen_rtx: <>
 9266 				rtx_alloc: 172
 9267 				PUT_MODE: <>
 9268 				INTVAL: 129
 9269 				GEN_INT: <>
 9270 				REAL_VALUE_ATOF: <>
 9271 				CONST_DOUBLE_LOW: <>
 9272 				CONST_DOUBLE_MEM: <>
 9273 			init_regs: void (), <./cc/regclass.c 439>
 9274 				init_reg_sets_1: 1364
 9275 				init_reg_modes: void (), <./cc/regclass.c 416>
 9276 					choose_hard_reg_mode: enum machine_mode (), <./cc/regclass.c 453>
 9277 			init_decl_processing: void (), <./cc/cp/decl.c 4737>
 9278 				pushlevel: 1896
 9279 				make_signed_type: tree (), <./cc/stor-layout.c 1023>
 9280 				pushdecl: <>
 9281 				build_decl: 888
 9282 				make_unsigned_type: tree (), <./cc/stor-layout.c 1070>
 9283 				get_identifier: <>
 9284 				TREE_TYPE: 160
 9285 				IDENTIFIER_GLOBAL_VALUE: <>
 9286 				TREE_UNSIGNED: 678
 9287 				signed_type: 701
 9288 				TYPE_SIZE: if (), <./cc/dwarfout.c 3636>
 9289 				make_node: 307
 9290 				GET_MODE_BITSIZE: 447
 9291 				TYPE_PRECISION: 211
 9292 				layout_type: <>
 9293 				unsigned_type: 699
 9294 				build_int_2: <>
 9295 				TYPE_ALIGN: <>
 9296 				build_pointer_type: 390
 9297 				build_type_variant: 1000
 9298 				build_index_type: 1516
 9299 				build_array_type: 974
 9300 				build_function_type: 1210
 9301 				tree_cons: <>
 9302 				builtin_function: tree (), <./cc/c-decl.c 3391>
 9303 					build_decl: 888
 9304 					get_identifier: <>
 9305 					DECL_EXTERNAL: else if (), <./cc/dwarfout.c 3220>
 9306 					TREE_PUBLIC: 194
 9307 					DECL_BUILT_IN_NONANSI: <>
 9308 					DECL_ASSEMBLER_NAME: <>
 9309 					make_decl_rtl: 1326
 9310 					pushdecl: <>
 9311 					DECL_BUILT_IN: 2952
 9312 					DECL_FUNCTION_CODE: switch (), <./cc/expr.c 7380>
 9313 					C_DECL_ANTICIPATED: <>
 9314 				DECL_BUILT_IN_NONANSI: <>
 9315 				TREE_THIS_VOLATILE: <>
 9316 				TREE_SIDE_EFFECTS: if (), <./cc/cp/typeck.c 4958>
 9317 				declare_function_name: void (), <./cc/c-common.c 44>
 9318 					TREE_CODE: 162
 9319 					TREE_TYPE: 160
 9320 					DECL_NAME: 250
 9321 					IDENTIFIER_POINTER: <>
 9322 					declare_hidden_char_array: void (), <./cc/c-common.c 71>
 9323 						strlen: <>
 9324 						TREE_INT_CST_LOW: <>
 9325 						TYPE_MAX_VALUE: <>
 9326 						TREE_TYPE: 160
 9327 						build_array_type: 974
 9328 						build_index_type: 1516
 9329 						build_int_2: <>
 9330 						push_obstacks_nochange: 517
 9331 						build_decl: 888
 9332 						get_identifier: <>
 9333 						TREE_STATIC: if (), <./cc/stor-layout.c 332>
 9334 						TREE_READONLY: if (), <./cc/cp/decl2.c 1229>
 9335 						TREE_ASM_WRITTEN: else if (), <./cc/dwarfout.c 3566>
 9336 						DECL_SOURCE_LINE: 182
 9337 						DECL_ARTIFICIAL: 278
 9338 						DECL_IN_SYSTEM_HEADER: <>
 9339 						DECL_IGNORED_P: if (), <./cc/dwarfout.c 4741>
 9340 						build_string: 6605
 9341 						DECL_INITIAL: 168
 9342 						finish_decl: 2533
 9343 						pushdecl: <>
 9344 				start_identifier_warnings: void (), <./cc/tree.c 1273>
 9345 				init_function_format_info: void (), <./cc/c-common.c 800>
 9346 					record_function_format: 1796
 9347 					get_identifier: <>
 9348 				init_iterators: void (), <./cc/c-iterate.c 108>
 9349 					gcc_obstack_init: 5537
 9350 					obstack_alloc: <>
 9351 				finish_incomplete_decl: void (), <./cc/c-decl.c 842>
 9352 					TREE_CODE: 162
 9353 					TREE_TYPE: 160
 9354 					TYPE_DOMAIN: <>
 9355 					complete_array_type: 2929
 9356 					layout_decl: <>
 9357 				signal: Procedure (), <./cc/enquire.c 489>
 9358 				signal_catch: void (), <./cc/cp/decl.c 4583>
 9359 					signal: Procedure (), <./cc/enquire.c 489>
 9360 					my_friendly_abort: 357
 9361 				gcc_obstack_init: 5537
 9362 				xmalloc: 1643
 9363 				TREE_PERMANENT: if (), <./cc/cp/decl.c 10271>
 9364 				build_tree_list: <>
 9365 				record_builtin_type: void (), <./cc/cp/decl.c 4613>
 9366 					get_identifier: <>
 9367 					TYPE_BUILT_IN: <>
 9368 					pushdecl: <>
 9369 					make_type_decl: 911
 9370 					build_decl: 888
 9371 					set_identifier_type_value: 2449
 9372 					IDENTIFIER_GLOBAL_VALUE: <>
 9373 					xrealloc: 420
 9374 					TREE_CODE: 162
 9375 					build_pointer_type: 390
 9376 					build_type_variant: 1000
 9377 					build_reference_type: 1407
 9378 				TREE_SET_CODE: <>
 9379 				size_int: <>
 9380 				TREE_PARMLIST: <>
 9381 				make_lang_type: 843
 9382 				make_type_decl: 911
 9383 				DECL_IGNORED_P: if (), <./cc/dwarfout.c 4741>
 9384 				TYPE_DECL_SUPPRESS_DEBUG: <>
 9385 				TYPE_MODE: <>
 9386 				TYPE_POINTER_TO: <>
 9387 				TYPE_REFERENCE_TO: <>
 9388 				copy_node: 874
 9389 				TYPE_MAIN_VARIANT: 324
 9390 				lookup_name: 1474
 9391 				TYPE_ARG_TYPES: 791
 9392 				build_lang_field_decl: 887
 9393 				finish_builtin_type: 902
 9394 				DECL_NAME: 250
 9395 				DECL_MODE: <>
 9396 				DECL_SIZE: <>
 9397 				TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 9398 				cp_build_type_variant: 967
 9399 				build_t_desc: 8850
 9400 				TREE_ASM_WRITTEN: else if (), <./cc/dwarfout.c 3566>
 9401 				TREE_PUBLIC: 194
 9402 				TREE_OPERAND: <>
 9403 				auto_function: __inline tree (), <./cc/cp/decl.c 4721>
 9404 					define_function: tree (), <./cc/cp/decl.c 5671>
 9405 						build_lang_decl: 1284
 9406 						get_identifier: <>
 9407 						DECL_EXTERNAL: else if (), <./cc/dwarfout.c 3220>
 9408 						TREE_PUBLIC: 194
 9409 						DECL_ARTIFICIAL: 278
 9410 						DECL_ASSEMBLER_NAME: <>
 9411 						make_function_rtl: void (), <./cc/varasm.c 297>
 9412 							IDENTIFIER_POINTER: <>
 9413 							DECL_ASSEMBLER_NAME: <>
 9414 							DECL_RTL: <>
 9415 							bc_gen_rtx: rtx (), <./cc/bc-emit.c 832>
 9416 							decl_function_context: <>
 9417 							DECL_INITIAL: 168
 9418 							DECL_NAME: 250
 9419 							ASM_FORMAT_PRIVATE_NAME: <>
 9420 							obstack_copy0: <>
 9421 							strlen: <>
 9422 							gen_rtx: <>
 9423 							DECL_MODE: <>
 9424 							ENCODE_SECTION_INFO: <>
 9425 						DECL_BUILT_IN: 2952
 9426 						DECL_FUNCTION_CODE: switch (), <./cc/expr.c 7380>
 9427 					IDENTIFIER_POINTER: <>
 9428 					push_overloaded_decl_1: void (), <./cc/cp/decl.c 4709>
 9429 						push_overloaded_decl: <>
 9430 					build_decl_overload: 1264
 9431 					TYPE_ARG_TYPES: 791
 9432 				define_function: 9404
 9433 				init_class_processing: void (), <./cc/cp/class.c 4309>
 9434 					xmalloc: 1643
 9435 					build_vtable_entry: tree (), <./cc/cp/class.c 367>
 9436 						TREE_INT_CST_LOW: <>
 9437 						build1: 334
 9438 						make_thunk: tree (), <./cc/cp/method.c 1774>
 9439 							TREE_CODE: 162
 9440 							abort: <>
 9441 							TREE_OPERAND: <>
 9442 							IDENTIFIER_POINTER: <>
 9443 							DECL_ASSEMBLER_NAME: <>
 9444 							sprintf: <>
 9445 							get_identifier: <>
 9446 							IDENTIFIER_GLOBAL_VALUE: <>
 9447 							error_with_decl: <>
 9448 							build_decl: 888
 9449 							TREE_TYPE: 160
 9450 							DECL_RESULT: <>
 9451 							TYPE_MAIN_VARIANT: 324
 9452 							TREE_READONLY: if (), <./cc/cp/decl2.c 1229>
 9453 							TYPE_READONLY: 217
 9454 							TREE_THIS_VOLATILE: <>
 9455 							TYPE_VOLATILE: <>
 9456 							make_function_rtl: 9411
 9457 							DECL_INITIAL: 168
 9458 							THUNK_DELTA: <>
 9459 							pushdecl_top_level: <>
 9460 						TREE_READONLY: if (), <./cc/cp/decl2.c 1229>
 9461 						TREE_CONSTANT: if (), <./cc/fold-const.c 3102>
 9462 						tree_cons: <>
 9463 						build_tree_list: <>
 9464 						build: <>
 9465 						TYPE_MAX_VALUE: <>
 9466 						TYPE_MIN_VALUE: <>
 9467 						sorry: <>
 9468 						TREE_STATIC: if (), <./cc/stor-layout.c 332>
 9469 					build_lang_field_decl: 887
 9470 					TREE_TYPE: 160
 9471 					make_node: 307
 9472 					gcc_obstack_init: 5537
 9473 				init_init_processing: void (), <./cc/cp/init.c 76>
 9474 					default_conversion: 165
 9475 					get_first_fn: 2695
 9476 					IDENTIFIER_GLOBAL_VALUE: <>
 9477 					TREE_USED: <>
 9478 					TREE_OPERAND: <>
 9479 					build_int_2: <>
 9480 					make_lang_type: 843
 9481 					get_identifier: <>
 9482 					build_lang_field_decl: 887
 9483 					finish_builtin_type: 902
 9484 					size_in_bytes: <>
 9485 				init_search_processing: void (), <./cc/cp/search.c 3481>
 9486 					gcc_obstack_init: 5537
 9487 					push_type_level: <>
 9488 					get_identifier: <>
 9489 				init_exception_processing: void (), <./cc/cp/except.c 587>
 9490 					build_pointer_type: 390
 9491 					build_function_type: 1210
 9492 					tree_cons: <>
 9493 					auto_function: 9403
 9494 					get_identifier: <>
 9495 					push_lang_context: void (), <./cc/cp/class.c 4562>
 9496 						xrealloc: 420
 9497 						install_reserved_words: void (), <./cc/cp/lex.c 318>
 9498 						error: 52
 9499 						IDENTIFIER_POINTER: <>
 9500 						cadillac_push_lang: void (), <./cc/cp/edsel.c 907>
 9501 							my_friendly_abort: 357
 9502 							CWriteHeader: <>
 9503 							CWriteRequestBuffer: <>
 9504 							cadillac_process_requests: 2524
 9505 					define_function: 9404
 9506 					pushdecl: <>
 9507 					DECL_EXTERNAL: else if (), <./cc/dwarfout.c 3220>
 9508 					TREE_PUBLIC: 194
 9509 					default_conversion: 165
 9510 					build_function_call: 3506
 9511 					pop_lang_context: void (), <./cc/cp/class.c 4608>
 9512 						cadillac_pop_lang: void (), <./cc/cp/edsel.c 911>
 9513 							CWriteHeader: <>
 9514 							CWriteRequestBuffer: <>
 9515 							cadillac_process_requests: 2524
 9516 						install_reserved_words: 9497
 9517 					new_eh_queue: <>
 9518 					new_eh_stack: <>
 9519 					build_parse_node: <>
 9520 					start_decl: 1618
 9521 					cp_finish_decl: 3002
 9522 					lookup_name: 1474
 9523 				init_gc_processing: void (), <./cc/cp/gc.c 1523>
 9524 					hash_tree_chain: 1031
 9525 					define_function: 9404
 9526 					build_function_type: 1210
 9527 					TREE_TYPE: 160
 9528 					build_int_2: <>
 9529 				init_cadillac: void (), <./cc/cp/edsel.c 858>
 9530 			init_optabs: void (), <./cc/optabs.c 4005>
 9531 			init_stmt: void (), <./cc/stmt.c 474>
 9532 				gcc_obstack_init: 5537
 9533 				build_tree_list: <>
 9534 			init_expmed: void (), <./cc/expmed.c 77>
 9535 				gen_rtx: <>
 9536 				start_sequence: void (), <./cc/emit-rtl.c 2919>
 9537 				oballoc: 530
 9538 				rtx_cost: 3959
 9539 				emit_insn: <>
 9540 				init_recog: void (), <./cc/recog.c 81>
 9541 				XEXP: 105
 9542 				SET_SRC: 484
 9543 				PATTERN: <>
 9544 				GEN_INT: <>
 9545 				recog: <>
 9546 				GET_CLASS_NARROWEST_MODE: <>
 9547 				GET_MODE_WIDER_MODE: <>
 9548 				GET_MODE_BITSIZE: 447
 9549 				end_sequence: 479
 9550 				obfree: 5386
 9551 			init_expr_once: void (), <./cc/expr.c 263>
 9552 				gen_rtx: <>
 9553 				start_sequence: void (), <./cc/emit-rtl.c 2919>
 9554 				emit_insn: <>
 9555 				PATTERN: <>
 9556 				PUT_MODE: <>
 9557 				HARD_REGNO_MODE_OK: <>
 9558 				SET_SRC: 484
 9559 				SET_DEST: 87
 9560 				recog: <>
 9561 				end_sequence: 479
 9562 			init_loop: void (), <./cc/loop.c 302>
 9563 				oballoc: 530
 9564 				gen_rtx: <>
 9565 				rtx_cost: 3959
 9566 				copy_cost: , <./cc/loop.c 5522>
 9567 				obfree: 5386
 9568 				gcc_obstack_init: 5537
 9569 			init_reload: void (), <./cc/reload1.c 379>
 9570 				gen_rtx: <>
 9571 				GEN_INT: <>
 9572 				memory_address_p: <>
 9573 				plus_constant: <>
 9574 				gcc_obstack_init: 5537
 9575 				obstack_alloc: <>
 9576 			init_caller_save: void (), <./cc/caller-save.c 98>
 9577 				oballoc: 530
 9578 				choose_hard_reg_mode: enum machine_mode (), <./cc/regclass.c 453>
 9579 				SET_HARD_REG_BIT: <>
 9580 				TEST_HARD_REG_BIT: 8306
 9581 				abort: <>
 9582 				gen_rtx: <>
 9583 				GEN_INT: <>
 9584 				strict_memory_address_p: 625
 9585 				start_sequence: void (), <./cc/emit-rtl.c 2919>
 9586 				emit_insn: <>
 9587 				recog_memoized: 538
 9588 				insn_extract: <>
 9589 				constrain_operands: 618
 9590 				end_sequence: 479
 9591 				obfree: 5386
 9592 			open_dump_file: FILE * (), <./cc/toplev.c 2206>
 9593 				alloca: <>
 9594 				strlen: <>
 9595 				strcpy: <>
 9596 				strcat: <>
 9597 				fopen: <>
 9598 				pfatal_with_name: 7154
 9599 			strlen: <>
 9600 			strcpy: <>
 9601 			strip_off_ending: void (), <./cc/toplev.c 2132>
 9602 			strcat: <>
 9603 			lang_init: void (), <./cc/cp/lex.c 477>
 9604 				ungetc: <>
 9605 				check_newline: int (), <./cc/c-lex.c 382>
 9606 					getch: int (), <./cc/cp/input.c 186>
 9607 						sub_getch: inline int (), <./cc/cp/input.c 133>
 9608 							my_friendly_assert: 379
 9609 							extract_interface_info: 2875
 9610 							free_input: inline void (), <./cc/cp/input.c 86>
 9611 								obstack_free: 397
 9612 							getch: 9606
 9613 							getc: <>
 9614 						put_back: inline void (), <./cc/cp/input.c 173>
 9615 							my_friendly_assert: 379
 9616 					real_yylex: int (), <./cc/cp/lex.c 3302>
 9617 						getch: 9606
 9618 						skip_white_space: int (), <./bison/lex.c 95>
 9619 							getc: <>
 9620 							warn: 1547
 9621 							fatal: 49
 9622 						input_redirected: inline int (), <./cc/cp/input.c 199>
 9623 						do_pending_expansions: int (), <./cc/cp/pt.c 2362>
 9624 							TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 9625 							instantiate_member_templates: void (), <./cc/cp/pt.c 865>
 9626 								DECL_TEMPLATE_MEMBERS: <>
 9627 								TREE_PURPOSE: 215
 9628 								IDENTIFIER_TEMPLATE: <>
 9629 								TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 9630 								my_friendly_assert: 379
 9631 								TREE_VALUE: <>
 9632 								TREE_CODE: 162
 9633 								DECL_CONTEXT: 267
 9634 								DECL_TEMPLATE_RESULT: <>
 9635 								UPT_PARMS: <>
 9636 								TREE_VEC_LENGTH: <>
 9637 								make_tree_vec: 857
 9638 								TREE_VEC_ELT: <>
 9639 								unify: 2748
 9640 								DECL_TEMPLATE_PARMS: <>
 9641 								IDENTIFIER_TYPE_VALUE: <>
 9642 								instantiate_template: 2789
 9643 								cp_error_at: 1225
 9644 								cp_error: 259
 9645 								my_friendly_abort: 357
 9646 							TREE_PURPOSE: 215
 9647 							fprintf: <>
 9648 							my_friendly_assert: 379
 9649 							TREE_CODE: 162
 9650 							TREE_ASM_WRITTEN: else if (), <./cc/dwarfout.c 3566>
 9651 							DECIDE: <>
 9652 							DECL_EXPLICIT_INSTANTIATION: <>
 9653 							DECL_NOT_REALLY_EXTERN: <>
 9654 							DECL_WEAK: <>
 9655 							TREE_PUBLIC: 194
 9656 							DECL_CONTEXT: 267
 9657 							TREE_CODE_CLASS: switch (), <./cc/dwarfout.c 3160>
 9658 							DECL_CLASS_CONTEXT: <>
 9659 							CLASSTYPE_INTERFACE_KNOWN: <>
 9660 							CLASSTYPE_INTERFACE_ONLY: <>
 9661 							TREE_USED: <>
 9662 							print_node_brief: 2475
 9663 							DECL_ASSEMBLER_NAME: <>
 9664 							IDENTIFIER_POINTER: <>
 9665 							do_pending_inlines: void (), <./cc/cp/lex.c 1285>
 9666 								DECL_PENDING_INLINE_INFO: <>
 9667 								synthesize_method: void (), <./cc/cp/method.c 2239>
 9668 									decl_function_context: <>
 9669 									DECL_CLASS_CONTEXT: <>
 9670 									push_cp_function_context: void (), <./cc/cp/decl.c 12888>
 9671 										xmalloc: 1643
 9672 										push_function_context_to: <>
 9673 									DECL_SOURCE_FILE: <>
 9674 									CLASSTYPE_INTERFACE_UNKNOWN: <>
 9675 									CLASSTYPE_INTERFACE_ONLY: <>
 9676 									start_function: int (), <./cc/c-decl.c 6287>
 9677 										grokdeclarator: 1460
 9678 										decl_attributes: 1704
 9679 										announce_function: void (), <./cc/toplev.c 1198>
 9680 											fprintf: <>
 9681 											IDENTIFIER_POINTER: <>
 9682 											DECL_NAME: 250
 9683 											fflush: <>
 9684 										TYPE_SIZE: if (), <./cc/dwarfout.c 3636>
 9685 										TREE_TYPE: 160
 9686 										error: 52
 9687 										build_function_type: 1210
 9688 										TYPE_ARG_TYPES: 791
 9689 										warning: 281
 9690 										DECL_INITIAL: 168
 9691 										lookup_name_current_level: tree (), <./cc/cp/decl.c 4542>
 9692 											IDENTIFIER_GLOBAL_VALUE: <>
 9693 											IDENTIFIER_LOCAL_VALUE: <>
 9694 											TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 9695 											DECL_NAME: 250
 9696 											TREE_CODE: 162
 9697 											TREE_VALUE: <>
 9698 											DECL_ASSEMBLER_NAME: <>
 9699 										DECL_NAME: 250
 9700 										TREE_CODE: 162
 9701 										DECL_BUILT_IN: 2952
 9702 										TYPE_MAIN_VARIANT: 324
 9703 										DECL_SOURCE_FILE: <>
 9704 										DECL_SOURCE_LINE: 182
 9705 										IDENTIFIER_IMPLICIT_DECL: <>
 9706 										TREE_PUBLIC: 194
 9707 										strcmp: 157
 9708 										IDENTIFIER_POINTER: <>
 9709 										warning_with_decl: <>
 9710 										TREE_USED: <>
 9711 										DECL_EXTERNAL: else if (), <./cc/dwarfout.c 3220>
 9712 										TREE_STATIC: if (), <./cc/stor-layout.c 332>
 9713 										pushdecl: <>
 9714 										pushlevel: 1896
 9715 										declare_parm_level: void (), <./cc/cp/decl.c 884>
 9716 										make_function_rtl: 9411
 9717 										C_PROMOTING_INTEGER_TYPE_P: if (), <./cc/cp/decl.c 11606>
 9718 										TREE_UNSIGNED: 678
 9719 										TYPE_PRECISION: 211
 9720 										DECL_RESULT: <>
 9721 										build_decl: 888
 9722 										temporary_allocation: 1820
 9723 										TREE_ADDRESSABLE: <>
 9724 										DECL_ASSEMBLER_NAME: <>
 9725 									store_parm_decls: void (), <./cc/cp/decl.c 11678>
 9726 										getdecls: 2026
 9727 										TREE_CODE: 162
 9728 										error_with_decl: <>
 9729 										TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 9730 										DECL_NAME: 250
 9731 										IDENTIFIER_LOCAL_VALUE: <>
 9732 										TREE_PURPOSE: 215
 9733 										TREE_VALUE: <>
 9734 										nreverse: <>
 9735 										TYPE_MAIN_VARIANT: 324
 9736 										TREE_TYPE: 160
 9737 										pushdecl: <>
 9738 										chainon: 1712
 9739 										DECL_ARGUMENTS: <>
 9740 										tree_last: <>
 9741 										TYPE_ARG_TYPES: 791
 9742 										dummy: void (), <./bison/gram.c 56>
 9743 										build_decl: 888
 9744 										DECL_ARG_TYPE: <>
 9745 										storetags: void (), <./cc/c-decl.c 2698>
 9746 										gettags: tree (), <./cc/cp/decl.c 4125>
 9747 										DECL_RESULT: <>
 9748 										layout_decl: <>
 9749 										DECL_SOURCE_LINE: 182
 9750 										DECL_SOURCE_FILE: <>
 9751 										warning_with_decl: <>
 9752 										TYPE_SIZE: if (), <./cc/dwarfout.c 3636>
 9753 										tree_cons: <>
 9754 										error: 52
 9755 										error_with_file_and_line: <>
 9756 										comptypes: 1133
 9757 										TYPE_PRECISION: 211
 9758 										pedwarn: <>
 9759 										IDENTIFIER_POINTER: <>
 9760 										warning_with_file_and_line: <>
 9761 										TYPE_ACTUAL_ARG_TYPES: <>
 9762 										perm_tree_cons: <>
 9763 										build_type_copy: 1006
 9764 										storedecls: void (), <./cc/c-decl.c 2689>
 9765 										gen_aux_info_record: 1633
 9766 										init_function_start: void (), <./cc/function.c 4728>
 9767 											bc_build_calldesc: rtx (), <./cc/function.c 4682>
 9768 												DECL_ARGUMENTS: <>
 9769 												nreverse: <>
 9770 												TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 9771 												tree_cons: <>
 9772 												size_in_bytes: <>
 9773 												TREE_TYPE: 160
 9774 												bc_runtime_type_code: <>
 9775 												build_int_2: <>
 9776 												build_nt: <>
 9777 												build_array_type: 974
 9778 												build_index_type: 1516
 9779 												output_constant_def: rtx (), <./cc/varasm.c 2768>
 9780 													TREE_CODE: 162
 9781 													abort: <>
 9782 													TREE_CST_RTL: <>
 9783 													output_addressed_constants: int (), <./cc/varasm.c 3508>
 9784 														TREE_CODE: 162
 9785 														TREE_OPERAND: <>
 9786 														TREE_CODE_CLASS: switch (), <./cc/dwarfout.c 3160>
 9787 														output_constant_def: 9779
 9788 														output_addressed_constants: 9783
 9789 														CONSTRUCTOR_ELTS: <>
 9790 														TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 9791 														TREE_VALUE: <>
 9792 													const_hash: int (), <./cc/varasm.c 2261>
 9793 														TREE_CODE: 162
 9794 														TREE_INT_CST_LOW: <>
 9795 														TREE_REAL_CST: <>
 9796 														TREE_STRING_POINTER: <>
 9797 														TREE_STRING_LENGTH: <>
 9798 														const_hash: 9792
 9799 														TREE_REALPART: <>
 9800 														TREE_IMAGPART: <>
 9801 														TREE_TYPE: 160
 9802 														int_size_in_bytes: <>
 9803 														alloca: <>
 9804 														get_set_constructor_bytes: tree (), <./cc/tree.c 4460>
 9805 														CONSTRUCTOR_ELTS: <>
 9806 														TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 9807 														TREE_VALUE: <>
 9808 														decode_addr_const: void (), <./cc/varasm.c 2168>
 9809 															TREE_OPERAND: <>
 9810 															TREE_CODE: 162
 9811 															DECL_FIELD_BITPOS: <>
 9812 															TREE_INT_CST_LOW: <>
 9813 															TYPE_SIZE: if (), <./cc/dwarfout.c 3636>
 9814 															TREE_TYPE: 160
 9815 															abort: <>
 9816 															DECL_RTL: <>
 9817 															bc_gen_rtx: rtx (), <./cc/bc-emit.c 832>
 9818 															TREE_STRING_POINTER: <>
 9819 															gen_rtx: <>
 9820 															label_rtx: rtx (), <./cc/stmt.c 566>
 9821 																TREE_CODE: 162
 9822 																abort: <>
 9823 																DECL_RTL: <>
 9824 																gen_label_rtx: rtx (), <./cc/emit-rtl.c 1327>
 9825 															TREE_CST_RTL: <>
 9826 															GET_CODE: 81
 9827 															XEXP: 105
 9828 														GET_CODE: 81
 9829 														XSTR: <>
 9830 														CODE_LABEL_NUMBER: <>
 9831 														XEXP: 105
 9832 														TREE_OPERAND: <>
 9833 													compare_constant: int (), <./cc/varasm.c 2352>
 9834 														compare_constant_1: char * (), <./cc/varasm.c 2369>
 9835 															TREE_CODE: 162
 9836 															TYPE_PRECISION: 211
 9837 															TREE_TYPE: 160
 9838 															TREE_INT_CST_LOW: <>
 9839 															TREE_REAL_CST: <>
 9840 															TREE_STRING_POINTER: <>
 9841 															TREE_STRING_LENGTH: <>
 9842 															compare_constant_1: 9834
 9843 															TREE_REALPART: <>
 9844 															TREE_IMAGPART: <>
 9845 															int_size_in_bytes: <>
 9846 															alloca: <>
 9847 															get_set_constructor_bytes: tree (), <./cc/tree.c 4460>
 9848 															list_length: 1446
 9849 															CONSTRUCTOR_ELTS: <>
 9850 															TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 9851 															TREE_VALUE: <>
 9852 															decode_addr_const: 9808
 9853 															XSTR: <>
 9854 															strlen: <>
 9855 															TREE_OPERAND: <>
 9856 													ASM_GENERATE_INTERNAL_LABEL: <>
 9857 													record_constant: <>
 9858 													obstack_copy0: <>
 9859 													strlen: <>
 9860 													push_obstacks_nochange: 517
 9861 													TREE_PERMANENT: if (), <./cc/cp/decl.c 10271>
 9862 													end_temporary_allocation: 1463
 9863 													gen_rtx: <>
 9864 													TYPE_MODE: <>
 9865 													TREE_TYPE: 160
 9866 													RTX_UNCHANGING_P: It is correct to set, <./cc/stmt.c 3489>
 9867 													AGGREGATE_TYPE_P: 1383
 9868 													MEM_IN_STRUCT_P: <>
 9869 													pop_obstacks: 396
 9870 													ENCODE_SECTION_INFO: <>
 9871 													xmalloc: 1643
 9872 													suspend_momentary: 1832
 9873 													copy_constant: tree (), <./cc/varasm.c 2701>
 9874 														TREE_CODE: 162
 9875 														TREE_CODE_CLASS: switch (), <./cc/dwarfout.c 3160>
 9876 														TREE_OPERAND: <>
 9877 														build1: 334
 9878 														TREE_TYPE: 160
 9879 														copy_constant: 9873
 9880 														copy_node: 874
 9881 														build_complex: tree (), <./cc/tree.c 1442>
 9882 															make_node: 307
 9883 															TREE_REALPART: <>
 9884 															TREE_IMAGPART: <>
 9885 															TREE_TYPE: 160
 9886 															build_complex_type: 1482
 9887 															TREE_OVERFLOW: <>
 9888 															TREE_CONSTANT_OVERFLOW: <>
 9889 														TREE_REALPART: <>
 9890 														TREE_IMAGPART: <>
 9891 														build: <>
 9892 														copy_list: 2833
 9893 														CONSTRUCTOR_ELTS: <>
 9894 														TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 9895 														TREE_VALUE: <>
 9896 														TREE_PURPOSE: 215
 9897 														abort: <>
 9898 													output_constant_def_contents: void (), <./cc/varasm.c 2876>
 9899 														IN_NAMED_SECTION: <>
 9900 														named_section: void (), <./cc/varasm.c 249>
 9901 															TREE_CODE: 162
 9902 															abort: <>
 9903 															TREE_STRING_POINTER: <>
 9904 															DECL_SECTION_NAME: <>
 9905 															strcmp: 157
 9906 															ASM_OUTPUT_SECTION_NAME: <>
 9907 														SELECT_SECTION: <>
 9908 														TREE_CODE: 162
 9909 														data_section: void (), <./cc/varasm.c 196>
 9910 															bc_data: void (), <./cc/bc-emit.c 763>
 9911 															fprintf: <>
 9912 															try_section_alias: <>
 9913 														readonly_data_section: void (), <./cc/varasm.c 227>
 9914 															READONLY_DATA_SECTION: <>
 9915 															text_section: EXTRA_SECTION_FUNCTIONS void (), <./cc/varasm.c 177>
 9916 																bc_text: void (), <./cc/bc-emit.c 757>
 9917 																fprintf: <>
 9918 																try_section_alias: <>
 9919 														TYPE_ALIGN: <>
 9920 														TREE_TYPE: 160
 9921 														CONSTANT_ALIGNMENT: <>
 9922 														ASM_OUTPUT_ALIGN: <>
 9923 														floor_log2: <>
 9924 														BC_OUTPUT_ALIGN: <>
 9925 														ASM_OUTPUT_INTERNAL_LABEL: <>
 9926 														output_constant: <>
 9927 														TREE_STRING_LENGTH: <>
 9928 														int_size_in_bytes: <>
 9929 											init_stmt_for_function: void (), <./cc/stmt.c 483>
 9930 											init_emit: void (), <./cc/emit-rtl.c 3228>
 9931 												oballoc: 530
 9932 												REGNO_POINTER_FLAG: <>
 9933 											init_expr: 5891
 9934 											init_const_rtx_hash_table: void (), <./cc/varasm.c 2988>
 9935 												oballoc: 530
 9936 											decl_function_context: <>
 9937 											init_pending_stack_adjust: void (), <./cc/expr.c 8916>
 9938 											emit_line_note: 169
 9939 											emit_note: 170
 9940 											aggregate_value_p: 8402
 9941 											DECL_RESULT: <>
 9942 											AGGREGATE_TYPE_P: 1383
 9943 											TREE_TYPE: 160
 9944 											warning: 281
 9945 											POINTER_TYPE_P: if (), <./cc/cp/typeck.c 5083>
 9946 										mark_varargs: void (), <./cc/function.c 4884>
 9947 										declare_function_name: 9317
 9948 										expand_function_start: void (), <./cc/function.c 5006>
 9949 											bc_expand_function_start: void (), <./cc/function.c 4923>
 9950 												TREE_PUBLIC: 194
 9951 												bc_globalize_label: void (), <./cc/bc-emit.c 745>
 9952 												IDENTIFIER_POINTER: <>
 9953 												DECL_NAME: 250
 9954 												fprintf: <>
 9955 												DECL_ARGUMENTS: <>
 9956 												TREE_CHAIN: if (), <./cc/cp/search.c 1454>
 9957 												DECL_RTL: <>
 9958 												abort: <>
 9959 												TREE_CONSTANT: if (), <./cc/fold-const.c 3102>
 9960 												DECL_SIZE: <>
 9961 												bc_gen_rtx: rtx (), <./cc/bc-emit.c 832>
 9962 												TREE_INT_CST_LOW: <>
 9963 												bc_begin_function: int (), <./cc/bc-emit.c 479>
 9964 													seg_create: struct bc_seg * (), <./cc/bc-emit.c 166>
 9965 													seg_defsym: <>
 9966 												bc_xstrdup: char * (), <./cc/bc-emit.c 985>
 9967 													xmalloc: 416
 9968 													strlen: <>
 9969 													strcpy: <>
 9970 												ASM_GENERATE_INTERNAL_LABEL: <>
 9971 												obstack_copy0: <>
 9972 												strlen: <>
 9973 												bc_emit_trampoline: char * (), <./cc/bc-emit.c 968>
 9974 													sprintf: <>
 9975 													BC_EMIT_TRAMPOLINE: <>
 9976 													seg_defsym: <>
 9977 													sym_lookup: struct bc_sym (), <./cc/bc-emit.c 107>
 9978 												BYTECODE_LABEL: <>
 9979 											init_recog_no_volatile: void (), <./cc/recog.c 75>
 9980 											assign_stack_local: 5798
 9981 											GET_MODE_SIZE: 461
 9982 											GET_CODE: 81
 9983 											emit_move_insn: <>
 9984 											gen_label_rtx: rtx (), <./cc/emit-rtl.c 1327>
 9985 											aggregate_value_p: 8402
 9986 											DECL_RESULT: <>
 9987 											int_size_in_bytes: <>
 9988 											TREE_TYPE: 160
 9989 											assemble_static_space: rtx (), <./cc/varasm.c 1671>
 9990 											gen_reg_rtx: 523
 9991 											DECL_RTL: <>
 9992 											gen_rtx: <>
 9993 											DECL_MODE: <>
 9994 											MEM_IN_STRUCT_P: <>
 9995 											AGGREGATE_TYPE_P: 1383
 9996 											TREE_UNSIGNED: 678
 9997 											promote_mode: <>
 9998 											FUNCTION_OUTGOING_VALUE: <>
 9999 											FUNCTION_VALUE: <>
10000 											REG_FUNCTION_VALUE_P: <>
10001 											DECL_REGISTER: <>
10002 											assign_parms: void (), <./cc/function.c 3163>
10003 												TREE_TYPE: 160
10004 												DECL_ARGUMENTS: <>
10005 												list_length: 1446
10006 												tree_last: <>
10007 												DECL_NAME: 250
10008 												strcmp: 157
10009 												IDENTIFIER_POINTER: <>
10010 												TYPE_ARG_TYPES: 791
10011 												TREE_VALUE: <>
10012 												copy_to_reg: <>
10013 												aggregate_value_p: 8402
10014 												DECL_RESULT: <>
10015 												build_pointer_type: 390
10016 												build_decl: 888
10017 												DECL_ARG_TYPE: <>
10018 												TREE_CHAIN: if (), <./cc/cp/search.c 1454>
10019 												oballoc: 530
10020 												bzero: <>
10021 												INIT_CUMULATIVE_INCOMING_ARGS: <>
10022 												INIT_CUMULATIVE_ARGS: <>
10023 												AGGREGATE_TYPE_P: 1383
10024 												TREE_CODE: 162
10025 												DECL_INCOMING_RTL: <>
10026 													DECL_OFFSET: <>
10027 													TREE_TYPE: 160
10028 													DECL_ARG_TYPE: <>
10029 													GET_MODE_SIZE: 461
10030 													TYPE_MODE: <>
10031 													GET_MODE: 139
10032 													DECL_RTL: <>
10033 													INTVAL: 129
10034 													XEXP: 105
10035 													gen_fake_label: char * (), <./cc/sdbout.c 327>
10036 														SDB_GENERATE_FAKE: <>
10037 														permalloc: 2873
10038 														strlen: <>
10039 														strcpy: <>
10040 													PUT_SDB_DEF: <>
10041 													PUT_SDB_INT_VAL: <>
10042 													DEBUGGER_AUTO_OFFSET: <>
10043 													PUT_SDB_SCL: <>
10044 													PUT_SDB_TYPE: <>
10045 													plain_type: int (), <./cc/sdbout.c 370>
10046 														plain_type_1: int (), <./cc/sdbout.c 462>
10047 															TYPE_MAIN_VARIANT: 324
10048 															TREE_CODE: 162
10049 															int_size_in_bytes: <>
10050 															TYPE_NAME: 271
10051 															DECL_NAME: 250
10052 															IDENTIFIER_POINTER: <>
10053 															strcmp: 157
10054 															TREE_UNSIGNED: 678
10055 															plain_type_1: 10046
10056 															TREE_TYPE: 160
10057 															TYPE_DOMAIN: <>
10058 															TREE_INT_CST_LOW: <>
10059 															TYPE_MAX_VALUE: <>
10060 															PUSH_DERIVED_LEVEL: <>
10061 															sdbout_record_type_name: void (), <./cc/sdbout.c 412>
10062 																KNOWN_TYPE_TAG: <>
10063 																TYPE_NAME: 271
10064 																TREE_CODE: 162
10065 																DECL_NAME: 250
10066 																template_name_p: int (), <./cc/sdbout.c 401>
10067 																	IDENTIFIER_POINTER: <>
10068 																DECL_ASSEMBLER_NAME: <>
10069 																IDENTIFIER_POINTER: <>
10070 																gen_fake_label: 10035
10071 																SET_KNOWN_TYPE_TAG: <>
10072 																sdbout_queue_anonymous_type: void (), <./cc/sdbout.c 944>
10073 																	saveable_tree_cons: <>
10074 															TREE_ASM_WRITTEN: else if (), <./cc/dwarfout.c 3566>
10075 															KNOWN_TYPE_TAG: <>
10076 															TYPE_MODE: <>
10077 															PUT_SDB_TAG: <>
10078 														PUT_SDB_NEXT_DIM: <>
10079 														PUT_SDB_LAST_DIM: <>
10080 														int_size_in_bytes: <>
10081 														PUT_SDB_SIZE: <>
10082 												DECL_RTL: <>
10083 												gen_rtx: <>
10084 												TREE_USED: <>
10085 												TYPE_MODE: <>
10086 												DECL_TRANSPARENT_UNION: <>
10087 												TYPE_TRANSPARENT_UNION: <>
10088 												TYPE_FIELDS: <>
10089 												TYPE_SIZE: if (), <./cc/dwarfout.c 3636>
10090 												contains_placeholder_p: <>
10091 												TREE_ADDRESSABLE: <>
10092 												FUNCTION_ARG_PASS_BY_REFERENCE: <>
10093 												promote_mode: <>
10094 												FUNCTION_INCOMING_ARG: <>
10095 												FUNCTION_ARG: <>
10096 												SETUP_INCOMING_VARARGS: <>
10097 												locate_and_pad_parm: 8630
10098 												ARGS_SIZE_RTX: <>
10099 												MEM_IN_STRUCT_P: <>
10100 												MUST_PASS_IN_STACK: <>
10101 												FUNCTION_ARG_PARTIAL_NREGS: <>
10102 												move_block_from_reg: void (), <./cc/expr.c 1749>
10103 												REGNO: 93
10104 												validize_mem: <>
10105 												int_size_in_bytes: <>
10106 												REG_PARM_STACK_SPACE: <>
10107 												ADD_PARM_SIZE: <>
10108 												FUNCTION_ARG_ADVANCE: <>
10109 												FUNCTION_ARG_BOUNDARY: <>
10110 												GET_MODE_ALIGNMENT: <>
10111 												GET_MODE_SIZE: 461
10112 												GET_CODE: 81
10113 												emit_insn: <>
10114 												GET_MODE: 139
10115 												CEIL_ROUND: <>
10116 												assign_stack_local: 5798
10117 												abort: <>
10118 												TREE_READONLY: if (), <./cc/cp/decl2.c 1229>
10119 												RTX_UNCHANGING_P: It is correct to set, <./cc/stmt.c 3489>
10120 												DECL_REGISTER: <>
10121 												DECL_INLINE: if (), <./cc/dwarfout.c 2737>
10122 												TREE_SIDE_EFFECTS: if (), <./cc/cp/typeck.c 4958>
10123 												TREE_UNSIGNED: 678
10124 												gen_reg_rtx: 523
10125 												REG_USERVAR_P: <>
10126 												emit_move_insn: <>
10127 												push_to_sequence: 1978
10128 												convert_to_mode: <>
10129 												expand_assignment: <>
10130 												make_tree: <>
10131 												get_insns: rtx (), <./cc/emit-rtl.c 1696>
10132 												end_sequence: 479
10133 												FUNCTION_ARG_CALLEE_COPIES: <>
10134 												allocate_dynamic_stack_space: <>
10135 												expr_size: <>
10136 												TYPE_ALIGN: <>
10137 												assign_stack_temp: 8416
10138 												store_expr: <>
10139 												XEXP: 105
10140 												MAX: <>
10141 												bcopy: <>
10142 												gen_realpart: <>
10143 												gen_imagpart: <>
10144 												reg_mentioned_p: else if (), <./cc/loop.c 5796>
10145 												get_last_insn: 1981
10146 												REG_NOTES: <>
10147 												reg_referenced_p: if (), <./cc/reorg.c 2297>
10148 												PATTERN: <>
10149 												prev_nonnote_insn: 4509
10150 												mark_reg_pointer: void (), <./cc/emit-rtl.c 523>
10151 													REGNO_POINTER_FLAG: <>
10152 													REGNO: 93
10153 												DECL_MODE: <>
10154 												TREE_THIS_VOLATILE: <>
10155 												MEM_VOLATILE_P: <>
10156 												emit_insns: <>
10157 												max_reg_num: 4460
10158 												GEN_INT: <>
10159 												expand_expr: <>
10160 												size_binop: <>
10161 												size_int: <>
10162 												RETURN_POPS_ARGS: <>
10163 											DECL_STDCALL: <>
10164 											malloc: <>
10165 											strlen: <>
10166 											IDENTIFIER_POINTER: <>
10167 											DECL_NAME: 250
10168 											sprintf: <>
10169 											DECL_ASSEMBLER_NAME: <>
10170 											get_identifier: <>
10171 											XSTR: <>
10172 											XEXP: 105
10173 											free: <>
10174 											DECL_DLLIMPORT: <>
10175 											realloc: <>
10176 											emit_note: 170
10177 											get_last_insn: 1981
10178 											use_variable: 3898
10179 											decl_function_context: <>
10180 											copy_to_reg: <>
10181 											make_node: 307
10182 											RTL_EXPR_RTL: <>
10183 											tree_cons: <>
10184 											plus_constant: <>
10185 											memory_address: <>
10186 											nreverse: <>
10187 											get_pending_sizes: 2998
10188 											TREE_CHAIN: if (), <./cc/cp/search.c 1454>
10189 											expand_expr: <>
10190 											TREE_VALUE: <>
10191 											force_next_line_note: void (), <./cc/emit-rtl.c 2847>
10192 										strcmp: 157
10193 										DECL_CONTEXT: 267
10194 										expand_main_function: void (), <./cc/function.c 4897>
10195 											build_function_type: 1210
10196 											tree_cons: <>
10197 											emit_library_call: <>
10198 											gen_rtx: <>
10199 										toplevel_bindings_p: 1614
10200 										fatal: 49
10201 										expand_start_bindings: 1909
10202 										storedecls: void (), <./cc/cp/decl.c 4135>
10203 										cleanup: , <./cc/cp/tree.c 1996>
10204 										maybe_build_cleanup: 5018
10205 										cp_error_at: 1225
10206 										cp_error: 259
10207 										SET_DECL_REFERENCE_SLOT: <>
10208 										convert_from_reference: 3251
10209 										expand_decl: <>
10210 										cp_expand_decl_cleanup: <>
10211 										storetags: void (), <./cc/cp/decl.c 4144>
10212 										DECL_SAVED_INSNS: <>
10213 										pushlevel: 1896
10214 										build_tree_list: <>
10215 										IDENTIFIER_LENGTH: <>
10216 										expand_expr: <>
10217 										build_function_call: 3506
10218 										lookup_name: 1474
10219 										get_identifier: <>
10220 										output_builtin_tdesc_entries: void (), <./cc/cp/decl.c 4685>
10221 											push_obstacks: 392
10222 											build_t_desc: 8850
10223 											TREE_ASM_WRITTEN: else if (), <./cc/dwarfout.c 3566>
10224 											free: <>
10225 											pop_obstacks: 396
10226 										start_sequence: void (), <./cc/emit-rtl.c 2919>
10227 										start_eh_unwinder:  (), <./cc/cp/except.c 1692>
10228 											start_protect: 3911
10229 										TYPE_RAISES_EXCEPTIONS: <>
10230 										expand_start_eh_spec: void (), <./cc/cp/except.c 1354>
10231 											start_protect: 3911
10232 										get_insns: rtx (), <./cc/emit-rtl.c 1696>
10233 										end_sequence: 479
10234 										store_in_parms: void (), <./cc/cp/decl.c 11659>
10235 											get_first_nonparm_insn: rtx (), <./cc/function.c 3094>
10236 												NEXT_INSN: <>
10237 												get_insns: rtx (), <./cc/emit-rtl.c 1696>
10238 											emit_insns: <>
10239 											emit_insns_before: <>
10240 											previous_insn: rtx (), <./cc/emit-rtl.c 1764>
10241 												PREV_INSN: <>
10242 												GET_CODE: 81
10243 												PATTERN: <>
10244 												XVECEXP: <>
10245 												XVECLEN: <>
10246 									DECL_NAME: 250
10247 									do_build_assign_ref: void (), <./cc/cp/method.c 2161>
10248 										TREE_CHAIN: if (), <./cc/cp/search.c 1454>
10249 										DECL_ARGUMENTS: <>
10250 										clear_last_expr: 1908
10251 										push_momentary: void (), <./cc/tree.c 800>
10252 										convert_from_reference: 3251
10253 										TYPE_HAS_TRIVIAL_ASSIGN_REF: <>
10254 										build: <>
10255 										TREE_SIDE_EFFECTS: if (), <./cc/cp/typeck.c 4958>
10256 										cplus_expand_expr_stmt: void (), <./cc/cp/decl.c 12750>
10257 											TREE_TYPE: 160
10258 											TREE_CODE: 162
10259 											error: 52
10260 											warning: 281
10261 											cp_warning: 279
10262 											build1: 334
10263 											expand_expr_stmt: 3924
10264 											break_out_cleanups: 6530
10265 											expand_cleanups_to: 4242
10266 										TYPE_FIELDS: <>
10267 										CLASSTYPE_N_BASECLASSES: <>
10268 										TYPE_BINFO_BASETYPES: <>
10269 										BINFO_TYPE: <>
10270 										TREE_VEC_ELT: <>
10271 										TYPE_HAS_ASSIGN_REF: <>
10272 										convert_to_reference: 751
10273 										build_reference_type: 1407
10274 										build_member_call: tree (), <./cc/cp/init.c 1743>
10275 											TREE_CODE: 162
10276 											TREE_OPERAND: <>
10277 											resolve_scope_to_name: <>
10278 											get_aggr_from_typedef: tree (), <./cc/cp/init.c 1695>
10279 												IDENTIFIER_HAS_TYPE_VALUE: else if (), <./cc/cp/call.c 1742>
10280 												IDENTIFIER_TYPE_VALUE: <>
10281 												cp_error: 259
10282 												IS_AGGR_TYPE: else if (), <./cc/cp/typeck.c 6140>
10283 												TREE_CODE: 162
10284 											lookup_name: 1474
10285 											build_x_function_call: <>
10286 											build_offset_ref: tree (), <./cc/cp/init.c 1874>
10287 												TREE_CODE: 162
10288 												resolve_scope_to_name: <>
10289 												get_aggr_from_typedef: 10278
10290 												lookup_name: 1474
10291 												lookup_namespace_name: 1240
10292 												cp_error: 259
10293 												is_aggr_typedef: 5131
10294 												IDENTIFIER_TYPE_VALUE: <>
10295 												TREE_OPERAND: <>
10296 												TYPE_SIZE: if (), <./cc/dwarfout.c 3636>
10297 												IDENTIFIER_CLASS_VALUE: <>
10298 												TREE_USED: <>
10299 												sorry: <>
10300 												my_friendly_abort: 357
10301 												build_component_type_expr: tree (), <./cc/cp/method.c 1646>
10302 													my_friendly_assert: 379
10303 													IS_AGGR_TYPE: else if (), <./cc/cp/typeck.c 6140>
10304 													TREE_TYPE: 160
10305 													TREE_CODE: 162
10306 													TREE_OPERAND: <>
10307 													groktypename: 1458
10308 													build_tree_list: <>
10309 													build_typename_overload: 764
10310 													cp_error: 259
10311 													build_method_call: <>
10312 													convert_pointer_to: 381
10313 													build_indirect_ref: 329
10314 													my_friendly_abort: 357
10315 													DECL_NAME: 250
10316 													build_component_ref: 159
10317 													build_offset_ref: 10286
10318 												TYPE_NAME: 271
10319 												TREE_TYPE: 160
10320 												get_base_distance: <>
10321 												TYPE_BINFO: if (), <./cc/cp/search.c 454>
10322 												build1: 334
10323 												lookup_fnfields: <>
10324 												lookup_field: <>
10325 												TREE_PURPOSE: 215
10326 												TREE_VALUE: <>
10327 												DECL_FIELD_CONTEXT: <>
10328 												IDENTIFIER_POINTER: <>
10329 												UNIQUELY_DERIVED_FROM_P: <>
10330 												DECL_CHAIN: if (), <./cc/cp/decl2.c 1871>
10331 												compute_access: <>
10332 												cp_error_at: 1225
10333 												assemble_external: <>
10334 												build: <>
10335 												TYPE_HAS_DESTRUCTOR: if (), <./cc/cp/typeck.c 1728>
10336 												TREE_PERMANENT: if (), <./cc/cp/decl.c 10271>
10337 												global_bindings_p: 1509
10338 												allocation_temporary_p: 1462
10339 												copy_list: 2833
10340 												build_tree_list: <>
10341 												build_offset_type: 1414
10342 												DECL_BIT_FIELD: if (), <./cc/cp/typeck.c 3863>
10343 											TYPE_HAS_DESTRUCTOR: if (), <./cc/cp/typeck.c 1728>
10344 											cp_error: 259
10345 											get_base_distance: <>
10346 											TYPE_BINFO: if (), <./cc/cp/search.c 454>
10347 											build1: 334
10348 											build_pointer_type: 390
10349 											TREE_TYPE: 160
10350 											build_type_variant: 1000
10351 											TYPE_READONLY: 217
10352 											TYPE_VOLATILE: <>
10353 											convert_force: 3275
10354 											build_indirect_ref: 329
10355 											constructor_name: <>
10356 											constructor_name_full: <>
10357 											build_functional_cast: tree (), <./cc/cp/typeck2.c 1480>
10358 												TREE_CODE: 162
10359 												IDENTIFIER_HAS_TYPE_VALUE: else if (), <./cc/cp/call.c 1742>
10360 												IDENTIFIER_TYPE_VALUE: <>
10361 												lookup_name: 1474
10362 												cp_error: 259
10363 												TREE_TYPE: 160
10364 												IS_SIGNATURE: 1061
10365 												error: 52
10366 												TYPE_NAME: 271
10367 												DECL_NESTED_TYPENAME: <>
10368 												IS_AGGR_TYPE: else if (), <./cc/cp/typeck.c 6140>
10369 												TREE_CHAIN: if (), <./cc/cp/search.c 1454>
10370 												pedwarn: <>
10371 												build_compound_expr: <>
10372 												build_c_cast: <>
10373 												TYPE_SIZE: if (), <./cc/dwarfout.c 3636>
10374 												build_method_call: <>
10375 												build_cplus_new: 5748
10376 											lookup_fnfields: <>
10377 											build_method_call: <>
10378 											lookup_field: <>
10379 											build: <>
10380 											TYPE_LANG_SPECIFIC: 370
10381 											TYPE_OVERLOADS_CALL_EXPR: <>
10382 											build_opfncall: 3433
10383 											build_function_call: 3506
10384 										TYPE_NESTED_NAME: <>
10385 										build_tree_list: <>
10386 										expand_expr_stmt: 3924
10387 										TREE_CODE: 162
10388 										DECL_NAME: 250
10389 										VFIELD_NAME_P: <>
10390 										VBASE_NAME_P: <>
10391 										IDENTIFIER_CLASS_VALUE: <>
10392 										TREE_TYPE: 160
10393 										ANON_AGGRNAME_P: <>
10394 										TYPE_IDENTIFIER: <>
10395 										largest_union_member: tree (), <./cc/cp/method.c 2052>
10396 											TYPE_SIZE: if (), <./cc/dwarfout.c 3636>
10397 											TYPE_FIELDS: <>
10398 											TREE_CHAIN: if (), <./cc/cp/search.c 1454>
10399 											simple_cst_equal: 235
10400 											DECL_SIZE: <>
10401 											my_friendly_abort: 357
10402 										build_modify_expr: <>
10403 										c_expand_return: void (), <./cc/c-typeck.c 6532>
10404 											TREE_TYPE: 160
10405 											TREE_THIS_VOLATILE: <>
10406 											warning: 281
10407 											TREE_CODE: 162
10408 											expand_null_return: void (), <./cc/stmt.c 2481>
10409 												bc_emit_instruction: <>
10410 												expand_null_return_1: void (), <./cc/stmt.c 2552>
10411 													clear_pending_stack_adjust: 4058
10412 													do_pending_stack_adjust: 3642
10413 													gen_label_rtx: rtx (), <./cc/emit-rtl.c 1327>
10414 													expand_goto_internal: 4050
10415 													emit_jump_insn: <>
10416 													gen_return: <>
10417 													emit_barrier: rtx (), <./cc/emit-rtl.c 2761>
10418 											pedwarn: <>
10419 											expand_return: void (), <./cc/stmt.c 2590>
10420 												bc_expand_expr: <>
10421 												bc_emit_instruction: <>
10422 												TREE_CODE: 162
10423 												TREE_TYPE: 160
10424 												expand_expr: <>
10425 												emit_queue: void (), <./cc/expr.c 530>
10426 												expand_null_return: 10408
10427 												any_pending_cleanups: int (), <./cc/stmt.c 3865>
10428 												TREE_OPERAND: <>
10429 												get_last_insn: 1981
10430 												gen_label_rtx: rtx (), <./cc/emit-rtl.c 1327>
10431 												do_jump: 3637
10432 												build: <>
10433 												DECL_RESULT: <>
10434 												TREE_SIDE_EFFECTS: if (), <./cc/cp/typeck.c 4958>
10435 												expand_return: 10419
10436 												emit_label: <>
10437 												tail_recursion_args: int (), <./cc/stmt.c 2896>
10438 													TREE_CHAIN: if (), <./cc/cp/search.c 1454>
10439 													TREE_TYPE: 160
10440 													TREE_VALUE: <>
10441 													GET_CODE: 81
10442 													DECL_RTL: <>
10443 													DECL_MODE: <>
10444 													alloca: <>
10445 													expand_expr: <>
10446 													reg_mentioned_p: else if (), <./cc/loop.c 5796>
10447 													copy_to_reg: <>
10448 													GET_MODE: 139
10449 													emit_move_insn: <>
10450 													convert_move: <>
10451 													TREE_UNSIGNED: 678
10452 													free_temp_slots: void (), <./cc/function.c 1165>
10453 												DECL_ARGUMENTS: <>
10454 												emit_label_after: <>
10455 												expand_goto_internal: 4050
10456 												emit_barrier: rtx (), <./cc/emit-rtl.c 2761>
10457 												jumpifnot: void (), <./cc/expr.c 9011>
10458 													do_jump: 3637
10459 												expand_value_return: void (), <./cc/stmt.c 2505>
10460 													get_last_insn: 1981
10461 													DECL_RTL: <>
10462 													DECL_RESULT: <>
10463 													TREE_TYPE: 160
10464 													TREE_UNSIGNED: 678
10465 													promote_mode: <>
10466 													DECL_MODE: <>
10467 													GET_MODE: 139
10468 													convert_move: <>
10469 													emit_move_insn: <>
10470 													GET_CODE: 81
10471 													REGNO: 93
10472 													emit_insn: <>
10473 													gen_rtx: <>
10474 													expand_null_return_1: 10410
10475 												TYPE_MODE: <>
10476 												GET_CODE: 81
10477 												DECL_RTL: <>
10478 												int_size_in_bytes: <>
10479 												MIN: <>
10480 												TYPE_ALIGN: <>
10481 												alloca: <>
10482 												gen_reg_rtx: 523
10483 												emit_insn: <>
10484 												gen_rtx: <>
10485 												operand_subword_force: <>
10486 												store_bit_field: rtx (), <./cc/expmed.c 221>
10487 												extract_bit_field: <>
10488 												GET_CLASS_NARROWEST_MODE: <>
10489 												GET_MODE_WIDER_MODE: <>
10490 												GET_MODE_SIZE: 461
10491 												abort: <>
10492 												PUT_MODE: <>
10493 												free_temp_slots: void (), <./cc/function.c 1165>
10494 												emit_move_insn: <>
10495 												operand_subword: <>
10496 												gen_lowpart: <>
10497 											convert_for_assignment: <>
10498 											DECL_RESULT: <>
10499 											convert: 427
10500 											TREE_OPERAND: <>
10501 											POINTER_TYPE_P: if (), <./cc/cp/typeck.c 5083>
10502 											TREE_CODE_CLASS: switch (), <./cc/dwarfout.c 3160>
10503 											DECL_EXTERNAL: else if (), <./cc/dwarfout.c 3220>
10504 											TREE_STATIC: if (), <./cc/stor-layout.c 332>
10505 											DECL_CONTEXT: 267
10506 											build: <>
10507 											TREE_SIDE_EFFECTS: if (), <./cc/cp/typeck.c 4958>
10508 										pop_momentary: 2023
10509 									DESTRUCTOR_NAME_P: <>
10510 									DECL_ASSEMBLER_NAME: <>
10511 									FUNCTION_ARG_CHAIN: <>
10512 									DECL_CONSTRUCTOR_FOR_VBASE_P: if (), <./cc/cp/decl2.c 1033>
10513 									TREE_CHAIN: if (), <./cc/cp/search.c 1454>
10514 									do_build_copy_constructor: void (), <./cc/cp/method.c 2068>
10515 										TREE_CHAIN: if (), <./cc/cp/search.c 1454>
10516 										DECL_ARGUMENTS: <>
10517 										clear_last_expr: 1908
10518 										push_momentary: void (), <./cc/tree.c 800>
10519 										TYPE_USES_VIRTUAL_BASECLASSES: <>
10520 										convert_from_reference: 3251
10521 										TYPE_HAS_TRIVIAL_INIT_REF: 2596
10522 										build: <>
10523 										TREE_SIDE_EFFECTS: if (), <./cc/cp/typeck.c 4958>
10524 										cplus_expand_expr_stmt: 10256
10525 										TYPE_FIELDS: <>
10526 										CLASSTYPE_N_BASECLASSES: <>
10527 										TYPE_BINFO_BASETYPES: <>
10528 										CLASSTYPE_VBASECLASSES: <>
10529 										BINFO_TYPE: <>
10530 										convert_to_reference: 751
10531 										build_reference_type: 1407
10532 										tree_cons: <>
10533 										TYPE_NESTED_NAME: <>
10534 										TREE_VEC_ELT: <>
10535 										TREE_VIA_VIRTUAL: 1041
10536 										TREE_CODE: 162
10537 										DECL_NAME: 250
10538 										VFIELD_NAME_P: <>
10539 										VBASE_NAME_P: <>
10540 										IDENTIFIER_CLASS_VALUE: <>
10541 										TREE_TYPE: 160
10542 										ANON_AGGRNAME_P: <>
10543 										TYPE_IDENTIFIER: <>
10544 										largest_union_member: 10395
10545 										build_tree_list: <>
10546 										nreverse: <>
10547 										setup_vtbl_ptr: void (), <./cc/cp/decl2.c 2125>
10548 										pop_momentary: 2023
10549 									TYPE_NEEDS_CONSTRUCTING: <>
10550 									setup_vtbl_ptr: void (), <./cc/cp/decl2.c 2125>
10551 									finish_function: void (), <./cc/cp/decl.c 11924>
10552 										poplevel: 1949
10553 										BLOCK_SUPERCONTEXT: <>
10554 										DECL_INITIAL: 168
10555 										DECL_CONTEXT: 267
10556 										DECL_RESULT: <>
10557 										setjmp_protect: void (), <./cc/function.c 4268>
10558 											sub: 3159
10559 											BLOCK_VARS: <>
10560 											TREE_CHAIN: if (), <./cc/cp/search.c 1454>
10561 											TREE_CODE: 162
10562 											DECL_RTL: <>
10563 											GET_CODE: 81
10564 											DECL_FROM_INLINE: <>
10565 											DECL_REGISTER: <>
10566 											put_var_into_stack: 5773
10567 											BLOCK_SUBBLOCKS: <>
10568 											setjmp_protect: 10557
10569 										setjmp_protect_args: void (), <./cc/function.c 4299>
10570 											sub: 3159
10571 											DECL_ARGUMENTS: <>
10572 											TREE_CHAIN: if (), <./cc/cp/search.c 1454>
10573 											TREE_CODE: 162
10574 											DECL_RTL: <>
10575 											GET_CODE: 81
10576 											DECL_REGISTER: <>
10577 											put_var_into_stack: 5773
10578 										strcmp: 157
10579 										IDENTIFIER_POINTER: <>
10580 										DECL_NAME: 250
10581 										TYPE_MAIN_VARIANT: 324
10582 										TREE_TYPE: 160
10583 										warning_with_decl: <>
10584 										expand_function_end: void (), <./cc/function.c 5289>
10585 											bc_expand_function_end: void (), <./cc/function.c 4972>
10586 												expand_null_return: 10408
10587 												expand_fixups: void (), <./cc/stmt.c 1073>
10588 													fixup_gotos: void (), <./cc/stmt.c 1093>
10589 														bc_fixup_gotos: void (), <./cc/stmt.c 1277>
10590 															bc_emit_bytecode_labeldef: 4084
10591 															bc_adjust_stack: 4036
10592 															bc_emit_bytecode: <>
10593 															bc_emit_bytecode_labelref: 3631
10594 															fputc: <>
10595 														PREV_INSN: <>
10596 														GET_CODE: 81
10597 														NEXT_INSN: <>
10598 														INSN_UID: <>
10599 														DECL_REGISTER: <>
10600 														error_with_decl: <>
10601 														start_sequence: void (), <./cc/emit-rtl.c 2919>
10602 														pushlevel: 1896
10603 														set_block: <>
10604 														TREE_CHAIN: if (), <./cc/cp/search.c 1454>
10605 														TREE_ADDRESSABLE: <>
10606 														TREE_VALUE: <>
10607 														expand_cleanups: <>
10608 														do_pending_stack_adjust: 3642
10609 														emit_stack_restore: <>
10610 														get_insns: rtx (), <./cc/emit-rtl.c 1696>
10611 														poplevel: 1949
10612 														end_sequence: 479
10613 														emit_insns_after: <>
10614 												bc_end_function: char * (), <./cc/bc-emit.c 594>
10615 													bcopy: <>
10616 													free: <>
10617 													seg_concat: <>
10618 													seg_align: void (), <./cc/bc-emit.c 182>
10619 														xrealloc: 420
10620 														bzero: <>
10621 													sprintf: <>
10622 													seg_defsym: <>
10623 													sym_lookup: struct bc_sym (), <./cc/bc-emit.c 107>
10624 												bc_align_const: void (), <./cc/bc-emit.c 641>
10625 													seg_align: 10618
10626 												bc_emit_const_labeldef: int (), <./cc/bc-emit.c 666>
10627 												BYTECODE_LABEL: <>
10628 												bc_emit_const: void (), <./cc/bc-emit.c 649>
10629 												bc_emit_const_labelref: void (), <./cc/bc-emit.c 674>
10630 											DECL_INITIAL: 168
10631 											setjmp_protect: 10557
10632 											setjmp_protect_args: 10569
10633 											gen_move_insn: 4595
10634 											emit_insn_before: <>
10635 											TREE_CHAIN: if (), <./cc/cp/search.c 1454>
10636 											TREE_PURPOSE: 215
10637 											lookup_static_chain: 8472
10638 											RTL_EXPR_RTL: <>
10639 											TREE_VALUE: <>
10640 											end_temporary_allocation: 1463
10641 											gen_rtx: <>
10642 											assemble_trampoline_template: rtx (), <./cc/varasm.c 1721>
10643 											resume_temporary_allocation: 5046
10644 											start_sequence: void (), <./cc/emit-rtl.c 2919>
10645 											round_trampoline_addr: rtx (), <./cc/function.c 4520>
10646 												gen_reg_rtx: 523
10647 												expand_binop: 4815
10648 												GEN_INT: <>
10649 											XEXP: 105
10650 											change_address: <>
10651 											emit_block_move: <>
10652 											GEN_INT: <>
10653 											INITIALIZE_TRAMPOLINE: <>
10654 											DECL_RTL: <>
10655 											get_insns: rtx (), <./cc/emit-rtl.c 1696>
10656 											end_sequence: 479
10657 											emit_insns_before: <>
10658 											strcmp: 157
10659 											lang_identify: char * (), <./cc/objc-act.c 884>
10660 											DECL_ARGUMENTS: <>
10661 											TREE_USED: <>
10662 											TREE_CODE: 162
10663 											DECL_NAME: 250
10664 											DECL_ARTIFICIAL: 278
10665 											warning_with_decl: <>
10666 											delete_handlers: void (), <./cc/function.c 2992>
10667 												get_insns: rtx (), <./cc/emit-rtl.c 1696>
10668 												NEXT_INSN: <>
10669 												GET_CODE: 81
10670 												LABEL_PRESERVE_P: <>
10671 												TREE_CHAIN: if (), <./cc/cp/search.c 1454>
10672 												DECL_RTL: <>
10673 												TREE_VALUE: <>
10674 												reg_mentioned_p: else if (), <./cc/loop.c 5796>
10675 												PATTERN: <>
10676 												delete_insn: <>
10677 											in_sequence_p: int (), <./cc/emit-rtl.c 3030>
10678 											use_variable: 3898
10679 											use_variable_after: void (), <./cc/function.c 3070>
10680 												GET_CODE: 81
10681 												emit_insn_after: <>
10682 												gen_rtx: <>
10683 												XEXP: 105
10684 												REGNO: 93
10685 											clear_pending_stack_adjust: 4058
10686 											do_pending_stack_adjust: 3642
10687 											emit_note: 170
10688 											emit_line_note_force: rtx (), <./cc/emit-rtl.c 2835>
10689 												emit_line_note: 169
10690 											emit_label: <>
10691 											expand_end_bindings: <>
10692 											emit_stack_save: <>
10693 											emit_stack_restore: <>
10694 											DECL_RESULT: <>
10695 											GET_CODE: 81
10696 											REGNO: 93
10697 											FUNCTION_OUTGOING_VALUE: <>
10698 											TREE_TYPE: 160
10699 											FUNCTION_VALUE: <>
10700 											REG_FUNCTION_VALUE_P: <>
10701 											emit_move_insn: <>
10702 											emit_insn: <>
10703 											build_pointer_type: 390
10704 											emit_jump_insn: <>
10705 											gen_return: <>
10706 											emit_barrier: rtx (), <./cc/emit-rtl.c 2761>
10707 											expand_fixups: 10587
10708 										rest_of_compilation: void (), <./cc/toplev.c 2959>
10709 											get_run_time: int (), <./cc/toplev.c 898>
10710 												clock: , <./cc/sched.c 3709>
10711 												times: <>
10712 												getrusage: <>
10713 											DECL_SAVED_INSNS: <>
10714 											DECL_INLINE: if (), <./cc/dwarfout.c 2737>
10715 											TIMEVAR: <>
10716 											function_cannot_inline_p: <>
10717 											warning_with_decl: <>
10718 											DECL_ABSTRACT_ORIGIN: <>
10719 											DECL_EXTERNAL: else if (), <./cc/dwarfout.c 3220>
10720 											DECL_INITIAL: 168
10721 											get_insns: rtx (), <./cc/emit-rtl.c 1696>
10722 											fprintf: <>
10723 											IDENTIFIER_POINTER: <>
10724 											DECL_NAME: 250
10725 											print_rtl: void (), <./cc/print-rtl.c 299>
10726 												fprintf: <>
10727 												GET_CODE: 81
10728 												NEXT_INSN: <>
10729 												print_rtx: <>
10730 											fflush: <>
10731 											DECL_DEFER_OUTPUT: <>
10732 											TREE_PUBLIC: 194
10733 											TREE_ADDRESSABLE: <>
10734 											set_decl_abstract_flags: <>
10735 											dwarfout_file_scope_decl: <>
10736 											save_for_inline_nocopy: <>
10737 											DECL_ARGUMENTS: <>
10738 											save_for_inline_copying: <>
10739 											TREE_ASM_WRITTEN: else if (), <./cc/dwarfout.c 3566>
10740 											rtl_in_current_obstack: void (), <./cc/tree.c 634>
10741 											unshare_all_rtl: <>
10742 											check_mem_insns: <>
10743 											instantiate_virtual_regs: void (), <./cc/function.c 2454>
10744 												FIRST_PARM_OFFSET: <>
10745 												STACK_DYNAMIC_OFFSET: <>
10746 												instantiate_decls: void (), <./cc/function.c 2501>
10747 													DECL_INLINE: if (), <./cc/dwarfout.c 2737>
10748 													DECL_DEFER_OUTPUT: <>
10749 													resume_temporary_allocation: 5046
10750 													DECL_ARGUMENTS: <>
10751 													TREE_CHAIN: if (), <./cc/cp/search.c 1454>
10752 													instantiate_decl: void (), <./cc/function.c 2562>
10753 														GET_CODE: 81
10754 														XEXP: 105
10755 														CONSTANT_P: 118
10756 														REGNO: 93
10757 														copy_rtx: <>
10758 														instantiate_virtual_regs_1: int (), <./cc/function.c 2634>
10759 															GET_CODE: 81
10760 															SET_DEST: 87
10761 															SET_SRC: 484
10762 															abort: <>
10763 															start_sequence: void (), <./cc/emit-rtl.c 2919>
10764 															force_operand: <>
10765 															plus_constant: <>
10766 															get_insns: rtx (), <./cc/emit-rtl.c 1696>
10767 															end_sequence: 479
10768 															emit_insns_before: <>
10769 															validate_change: 142
10770 															instantiate_virtual_regs_1: 10758
10771 															CONSTANT_P: 118
10772 															XEXP: 105
10773 															gen_rtx: <>
10774 															gen_reg_rtx: 523
10775 															emit_insn_before: <>
10776 															gen_move_insn: 4595
10777 															validate_replace_rtx: int (), <./cc/recog.c 512>
10778 																validate_replace_rtx_1: void (), <./cc/recog.c 332>
10779 																	GET_CODE: 81
10780 																	GET_MODE: 139
10781 																	REGNO: 93
10782 																	rtx_equal_p: 143
10783 																	validate_change: 142
10784 																	GET_RTX_CLASS: 141
10785 																	validate_replace_rtx_1: 10778
10786 																	XEXP: 105
10787 																	CONSTANT_P: 118
10788 																	gen_rtx: <>
10789 																	swap_condition: <>
10790 																	plus_constant: <>
10791 																	INTVAL: 129
10792 																	simplify_unary_operation: <>
10793 																	SUBREG_REG: <>
10794 																	mode_dependent_address_p: 454
10795 																	MEM_VOLATILE_P: <>
10796 																	GET_MODE_SIZE: 461
10797 																	SUBREG_WORD: <>
10798 																	MIN: <>
10799 																	RTX_UNCHANGING_P: It is correct to set, <./cc/stmt.c 3489>
10800 																	MEM_IN_STRUCT_P: <>
10801 																	GET_MODE_BITSIZE: 447
10802 																	GEN_INT: <>
10803 																	GET_RTX_FORMAT: <>
10804 																	GET_RTX_LENGTH: <>
10805 																	XVECLEN: <>
10806 																	XVECEXP: <>
10807 																PATTERN: <>
10808 																apply_change_group: 533
10809 															CONSTANT_ADDRESS_P: if (), <./cc/config/i386/i386.c 2571>
10810 															copy_rtx: <>
10811 															GET_RTX_FORMAT: <>
10812 															GET_RTX_LENGTH: <>
10813 															XVECLEN: <>
10814 															XVECEXP: <>
10815 														GET_CLASS_NARROWEST_MODE: <>
10816 														GET_MODE_SIZE: 461
10817 														GET_MODE_WIDER_MODE: <>
10818 														memory_address_p: <>
10819 													DECL_RTL: <>
10820 													int_size_in_bytes: <>
10821 													TREE_TYPE: 160
10822 													DECL_INCOMING_RTL: 10025
10823 													instantiate_decls_1: void (), <./cc/function.c 2540>
10824 														BLOCK_VARS: <>
10825 														TREE_CHAIN: if (), <./cc/cp/search.c 1454>
10826 														instantiate_decl: 10752
10827 														DECL_RTL: <>
10828 														int_size_in_bytes: <>
10829 														TREE_TYPE: 160
10830 														BLOCK_SUBBLOCKS: <>
10831 														instantiate_decls_1: 10823
10832 													DECL_INITIAL: 168
10833 													preserve_data: void (), <./cc/tree.c 604>
10834 														obstack_alloc: <>
10835 													rtl_in_current_obstack: 10740
10836 												init_recog: 9540
10837 												NEXT_INSN: <>
10838 												GET_CODE: 81
10839 												instantiate_virtual_regs_1: 10758
10840 												PATTERN: <>
10841 												REG_NOTES: <>
10842 											TREE_THIS_VOLATILE: <>
10843 											reg_scan: 4436
10844 											max_reg_num: 4460
10845 											jump_optimize: 4461
10846 											thread_jumps: void (), <./cc/jump.c 4161>
10847 												alloca: <>
10848 												NEXT_INSN: <>
10849 												GET_CODE: 81
10850 												condjump_p: <>
10851 												simplejump_p: if (), <./cc/cse.c 8510>
10852 												JUMP_LABEL: 3730
10853 												bzero: <>
10854 												bcopy: <>
10855 												LABEL_NUSES: <>
10856 												note_stores: <>
10857 												PATTERN: <>
10858 												mark_modified_reg: void (), <./cc/jump.c 4135>
10859 													GET_CODE: 81
10860 													SUBREG_REG: <>
10861 													REGNO: 93
10862 													HARD_REGNO_NREGS: <>
10863 													GET_MODE: 139
10864 												XEXP: 105
10865 												SET_SRC: 484
10866 												reverse_condition: <>
10867 												rtx_equal_for_thread_p: int (), <./cc/jump.c 4350>
10868 													GET_CODE: 81
10869 													GET_MODE: 139
10870 													GET_RTX_CLASS: 141
10871 													rtx_equal_for_thread_p: 10867
10872 													XEXP: 105
10873 													REGNO: 93
10874 													REG_USERVAR_P: <>
10875 													INSN_UID: <>
10876 													MEM_VOLATILE_P: <>
10877 													SET_DEST: 87
10878 													SET_SRC: 484
10879 													XSTR: <>
10880 													GET_RTX_FORMAT: <>
10881 													GET_RTX_LENGTH: <>
10882 													XWINT: <>
10883 													XINT: <>
10884 													XVECLEN: <>
10885 													XVECEXP: <>
10886 													strcmp: 157
10887 													abort: <>
10888 												comparison_dominates_p: <>
10889 												prev_nonnote_insn: 4509
10890 												get_label_after: 4555
10891 												PREV_INSN: <>
10892 												NOTE_LINE_NUMBER: 177
10893 												gen_label_rtx: rtx (), <./cc/emit-rtl.c 1327>
10894 												emit_label_after: <>
10895 												redirect_jump: <>
10896 												recog_memoized: 538
10897 											cse_main: int (), <./cc/cse.c 8236>
10898 												init_recog: 9540
10899 												alloca: <>
10900 												gen_rtx: <>
10901 												bzero: <>
10902 												get_max_uid: int (), <./cc/emit-rtl.c 1737>
10903 												NEXT_INSN: <>
10904 												GET_CODE: 81
10905 												NOTE_LINE_NUMBER: 177
10906 												INSN_CUID: <>
10907 												CLEAR_HARD_REG_SET: <>
10908 												SET_HARD_REG_BIT: <>
10909 												cse_end_of_basic_block: 6962
10910 												GET_MODE: 139
10911 												PUT_MODE: <>
10912 												fprintf: <>
10913 												INSN_UID: <>
10914 												cse_basic_block: <>
10915 											delete_dead_from_cse: <>
10916 											loop_optimize: void (), <./cc/loop.c 328>
10917 												init_recog_no_volatile: 9979
10918 												init_alias_analysis: void (), <./cc/sched.c 399>
10919 													max_reg_num: 4460
10920 													oballoc: 530
10921 													bzero: <>
10922 													get_insns: rtx (), <./cc/emit-rtl.c 1696>
10923 													NEXT_INSN: <>
10924 													single_set: 560
10925 													GET_CODE: 81
10926 													SET_DEST: 87
10927 													REGNO: 93
10928 													find_reg_note: <>
10929 													XEXP: 105
10930 													REG_NOTE_KIND: switch (), <./cc/sched.c 4292>
10931 												max_reg_num: 4460
10932 												alloca: <>
10933 												bzero: <>
10934 												NEXT_INSN: <>
10935 												GET_CODE: 81
10936 												NOTE_LINE_NUMBER: 177
10937 												get_max_uid: 10902
10938 												find_and_verify_loops: void (), <./cc/loop.c 2222>
10939 													NEXT_INSN: <>
10940 													GET_CODE: 81
10941 													NOTE_LINE_NUMBER: 177
10942 													fprintf: <>
10943 													INSN_UID: <>
10944 													abort: <>
10945 													XEXP: 105
10946 													GET_RTX_CLASS: 141
10947 													find_reg_note: <>
10948 													mark_loop_jump: void (), <./cc/loop.c 2504>
10949 														GET_CODE: 81
10950 														mark_loop_jump: 10948
10951 														XEXP: 105
10952 														INSN_UID: <>
10953 														LABEL_OUTSIDE_LOOP_P: <>
10954 														LABEL_NEXTREF: <>
10955 														fprintf: <>
10956 														SET_DEST: 87
10957 														SET_SRC: 484
10958 														XVECLEN: <>
10959 														XVECEXP: <>
10960 													PATTERN: <>
10961 													simplejump_p: if (), <./cc/cse.c 8510>
10962 													JUMP_LABEL: 3730
10963 													get_max_uid: 10902
10964 													next_real_insn: 553
10965 													PREV_INSN: <>
10966 													condjump_p: <>
10967 													get_last_insn: 1981
10968 													get_label_after: 4555
10969 													LABEL_NUSES: <>
10970 													invert_jump: <>
10971 													squeeze_notes: 4894
10972 													reorder_insns: <>
10973 													LABEL_NEXTREF: <>
10974 													LABEL_OUTSIDE_LOOP_P: <>
10975 													delete_insn: <>
10976 												reg_scan: 4436
10977 												abort: <>
10978 												INSN_UID: <>
10979 												find_loop_tree_blocks: void (), <./cc/stmt.c 5865>
10980 													DECL_INITIAL: 168
10981 													BLOCK_SUBBLOCKS: <>
10982 													identify_blocks: tree * (), <./cc/function.c 4548>
10983 														all_blocks: int (), <./cc/function.c 4659>
10984 															TREE_ASM_WRITTEN: else if (), <./cc/dwarfout.c 3566>
10985 															BLOCK_SUBBLOCKS: <>
10986 															BLOCK_CHAIN: <>
10987 															all_blocks: 10983
10988 														xmalloc: 1643
10989 														alloca: <>
10990 														NEXT_INSN: <>
10991 														GET_CODE: 81
10992 														NOTE_LINE_NUMBER: 177
10993 														NOTE_BLOCK_NUMBER: <>
10994 													get_insns: rtx (), <./cc/emit-rtl.c 1696>
10995 												scan_loop: void (), <./cc/loop.c 458>
10996 													alloca: <>
10997 													NEXT_INSN: <>
10998 													GET_CODE: 81
10999 													GET_RTX_CLASS: 141
11000 													NOTE_LINE_NUMBER: 177
11001 													prescan_loop: void (), <./cc/loop.c 2158>
11002 														NEXT_INSN: <>
11003 														GET_CODE: 81
11004 														NOTE_LINE_NUMBER: 177
11005 														volatile_refs_p: <>
11006 														PATTERN: <>
11007 														note_stores: <>
11008 														note_addr_stored: void (), <./cc/loop.c 2661>
11009 															GET_CODE: 81
11010 															GET_MODE: 139
11011 															rtx_equal_p: 143
11012 															XEXP: 105
11013 															MEM_IN_STRUCT_P: <>
11014 															GET_MODE_SIZE: 461
11015 													simplejump_p: if (), <./cc/cse.c 8510>
11016 													JUMP_LABEL: 3730
11017 													INSN_UID: <>
11018 													INSN_LUID: <>
11019 													next_label: 4891
11020 													fprintf: <>
11021 													bzero: <>
11022 													count_loop_regs_set: <>
11023 													bcopy: <>
11024 													find_reg_note: <>
11025 													single_set: 560
11026 													SET_DEST: 87
11027 													REGNO: 93
11028 													SET_SRC: 484
11029 													XEXP: 105
11030 													CONSTANT_P: 118
11031 													libcall_other_reg: rtx (), <./cc/loop.c 1037>
11032 														find_reg_note: <>
11033 														XEXP: 105
11034 														output: void (), <./bison/output.c 246>
11035 															rewind: <>
11036 															getc: <>
11037 															putc: <>
11038 															reader_output_yylsp: void (), <./bison/reader.c 227>
11039 																fprintf: <>
11040 															fprintf: <>
11041 															free_itemsets: void (), <./bison/output.c 1446>
11042 																FREE: <>
11043 															output_defines: void (), <./bison/output.c 603>
11044 																fprintf: <>
11045 															output_token_translations: void (), <./bison/output.c 289>
11046 																fprintf: <>
11047 																putc: <>
11048 															output_gram: void (), <./bison/output.c 333>
11049 																fprintf: <>
11050 																putc: <>
11051 															FREE: <>
11052 															output_stos: void (), <./bison/output.c 398>
11053 																fprintf: <>
11054 																putc: <>
11055 															output_rule_data: void (), <./bison/output.c 428>
11056 																fprintf: <>
11057 																putc: <>
11058 																strlen: <>
11059 																FREE: <>
11060 															output_actions: void (), <./bison/output.c 615>
11061 																NEW2: <>
11062 																token_actions: void (), <./bison/output.c 652>
11063 																	NEW2: <>
11064 																	action_row: int (), <./bison/output.c 702>
11065 																		ISVAR: if (), <./bison/closure.c 235>
11066 																	fprintf: <>
11067 																	save_row: void (), <./bison/output.c 866>
11068 																		NEW2: <>
11069 																	putc: <>
11070 																	FREE: <>
11071 																free_shifts: void (), <./bison/output.c 1460>
11072 																	FREE: <>
11073 																free_reductions: void (), <./bison/output.c 1474>
11074 																	FREE: <>
11075 																FREE: <>
11076 																goto_actions: void (), <./bison/output.c 911>
11077 																	NEW2: <>
11078 																	default_goto: int (), <./bison/output.c 950>
11079 																	fprintf: <>
11080 																	save_column: void (), <./bison/output.c 988>
11081 																		NEW2: <>
11082 																	putc: <>
11083 																	FREE: <>
11084 																sort_actions: void (), <./bison/output.c 1038>
11085 																	NEW2: <>
11086 																pack_table: void (), <./bison/output.c 1074>
11087 																	NEW2: <>
11088 																	matching_state: int (), <./bison/output.c 1123>
11089 																	pack_vector: int (), <./bison/output.c 1164>
11090 																		berror: void (), <./bison/main.c 233>
11091 																			fprintf: <>
11092 																			abort: <>
11093 																		fatals: void (), <./bison/main.c 144>
11094 																			sprintf: <>
11095 																			fatal: 49
11096 																		int_to_string: char * (), <./bison/main.c 116>
11097 																			sprintf: <>
11098 																	FREE: <>
11099 																output_base: void (), <./bison/output.c 1234>
11100 																	fprintf: <>
11101 																	putc: <>
11102 																	FREE: <>
11103 																output_table: void (), <./bison/output.c 1285>
11104 																	fprintf: <>
11105 																	putc: <>
11106 																	FREE: <>
11107 																output_check: void (), <./bison/output.c 1317>
11108 																	fprintf: <>
11109 																	putc: <>
11110 																	FREE: <>
11111 															output_parser: void (), <./bison/output.c 1351>
11112 																fprintf: <>
11113 																open: 8200
11114 																getc: <>
11115 																rewind: <>
11116 																putc: <>
11117 															output_program: void (), <./bison/output.c 1428>
11118 																fprintf: <>
11119 																getc: <>
11120 																putc: <>
11121 														GET_CODE: 81
11122 														record_excess_regs: void (), <./cc/loop.c 984>
11123 															GET_CODE: 81
11124 															REGNO: 93
11125 															reg_mentioned_p: else if (), <./cc/loop.c 5796>
11126 															gen_rtx: <>
11127 															GET_RTX_FORMAT: <>
11128 															GET_RTX_LENGTH: <>
11129 															XVECLEN: <>
11130 															record_excess_regs: 11122
11131 															XVECEXP: <>
11132 															XEXP: 105
11133 														PATTERN: <>
11134 														NEXT_INSN: <>
11135 													loop_reg_used_before_p: <>
11136 													REG_USERVAR_P: <>
11137 													REG_LOOP_TEST_P: <>
11138 													reg_in_basic_block_p: int (), <./cc/loop.c 1062>
11139 														REGNO: 93
11140 														INSN_UID: <>
11141 														NEXT_INSN: <>
11142 														GET_CODE: 81
11143 														abort: <>
11144 													invariant_p: <>
11145 													consec_sets_invariant_p: int (), <./cc/loop.c 2833>
11146 													may_trap_p: <>
11147 													side_effects_p: <>
11148 													modified_between_p: 4797
11149 													no_labels_between_p: <>
11150 													validate_replace_rtx: 10777
11151 													REG_NOTES: <>
11152 													replace_rtx: <>
11153 													copy_rtx: <>
11154 													PUT_CODE: <>
11155 													NOTE_SOURCE_FILE: <>
11156 													libcall_benefit: int (), <./cc/loop.c 1109>
11157 														XEXP: 105
11158 														find_reg_note: <>
11159 														NEXT_INSN: <>
11160 														GET_CODE: 81
11161 														PATTERN: <>
11162 													next_nonnote_insn: 4490
11163 													skip_consec_insns: rtx (), <./cc/loop.c 1133>
11164 														GET_CODE: 81
11165 														find_reg_note: <>
11166 														XEXP: 105
11167 														NEXT_INSN: <>
11168 													prev_nonnote_insn: 4509
11169 													SUBREG_REG: <>
11170 													reg_mentioned_p: else if (), <./cc/loop.c 5796>
11171 													labels_in_range_p: int (), <./cc/loop.c 2644>
11172 														INSN_LUID: <>
11173 														GET_CODE: 81
11174 														NEXT_INSN: <>
11175 													GET_MODE: 139
11176 													ignore_some_movables: void (), <./cc/loop.c 1161>
11177 														find_reg_note: <>
11178 														XEXP: 105
11179 														NEXT_INSN: <>
11180 													force_movables: void (), <./cc/loop.c 1193>
11181 														INSN_UID: <>
11182 													combine_movables: void (), <./cc/loop.c 1232>
11183 														alloca: <>
11184 														bzero: <>
11185 														GET_MODE: 139
11186 														GET_MODE_CLASS: 492
11187 														GET_MODE_BITSIZE: 447
11188 														GET_CODE: 81
11189 														REGNO: 93
11190 														rtx_equal_for_loop_p: int (), <./cc/loop.c 1372>
11191 															GET_CODE: 81
11192 															REGNO: 93
11193 															CONSTANT_P: 118
11194 															rtx_equal_p: 143
11195 															GET_MODE: 139
11196 															regs_match_p: int (), <./cc/loop.c 1343>
11197 																REGNO: 93
11198 															XEXP: 105
11199 															XSTR: <>
11200 															GET_RTX_FORMAT: <>
11201 															GET_RTX_LENGTH: <>
11202 															XWINT: <>
11203 															XINT: <>
11204 															XVECLEN: <>
11205 															rtx_equal_for_loop_p: 11190
11206 															XVECEXP: <>
11207 															strcmp: 157
11208 															abort: <>
11209 														rtx_equal_p: 143
11210 														GET_CLASS_NARROWEST_MODE: <>
11211 														GET_MODE_WIDER_MODE: <>
11212 														SET_SRC: 484
11213 														PATTERN: <>
11214 														NEXT_INSN: <>
11215 													move_movables: void (), <./cc/loop.c 1529>
11216 														alloca: <>
11217 														bzero: <>
11218 														fprintf: <>
11219 														INSN_UID: <>
11220 														invariant_p: <>
11221 														consec_sets_invariant_p: int (), <./cc/loop.c 2833>
11222 														done: 61
11223 														gen_move_insn: 4595
11224 														SET_DEST: 87
11225 														PATTERN: <>
11226 														emit_insn_before: <>
11227 														REG_NOTES: <>
11228 														gen_rtx: <>
11229 														delete_insn: <>
11230 														GET_CODE: 81
11231 														find_reg_note: <>
11232 														XEXP: 105
11233 														NEXT_INSN: <>
11234 														start_sequence: void (), <./cc/emit-rtl.c 2919>
11235 														emit_move_insn: <>
11236 														get_insns: rtx (), <./cc/emit-rtl.c 1696>
11237 														end_sequence: 479
11238 														add_label_notes: void (), <./cc/loop.c 1484>
11239 															GET_CODE: 81
11240 															LABEL_REF_NONLOCAL_P: <>
11241 															next_real_insn: 553
11242 															XEXP: 105
11243 															PATTERN: <>
11244 															NEXT_INSN: <>
11245 															reg_mentioned_p: else if (), <./cc/loop.c 5796>
11246 															REG_NOTES: <>
11247 															gen_rtx: <>
11248 															GET_RTX_FORMAT: <>
11249 															GET_RTX_LENGTH: <>
11250 															add_label_notes: 11238
11251 															XVECLEN: <>
11252 															XVECEXP: <>
11253 														emit_insns_before: <>
11254 														SET_SRC: 484
11255 														reg_referenced_p: if (), <./cc/reorg.c 2297>
11256 														emit_insn_after: <>
11257 														emit_call_insn_before: <>
11258 														CALL_INSN_FUNCTION_USAGE: <>
11259 														copy_rtx: <>
11260 														expand_binop: 4815
11261 														GET_MODE: 139
11262 														GEN_INT: <>
11263 														GET_MODE_BITSIZE: 447
11264 														abort: <>
11265 														gen_sequence: 4618
11266 														remove_note: <>
11267 														CONSTANT_P: 118
11268 														INSN_LUID: <>
11269 														gen_lowpart_common: rtx (), <./cc/emit-rtl.c 567>
11270 														replace_regs: <>
11271 														INSN_CODE: <>
11272 													strength_reduce: void (), <./cc/loop.c 3214>
11273 														alloca: <>
11274 														bzero: <>
11275 														gen_reg_rtx: 523
11276 														NEXT_INSN: <>
11277 														emit_note_after: rtx (), <./cc/emit-rtl.c 2561>
11278 														GET_CODE: 81
11279 														single_set: 560
11280 														SET_DEST: 87
11281 														REGNO: 93
11282 														basic_induction_var: <>
11283 														SET_SRC: 484
11284 														GET_MODE: 139
11285 														record_biv: void (), <./cc/loop.c 4246>
11286 															GET_MODE: 139
11287 															REGNO: 93
11288 															oballoc: 530
11289 															fprintf: <>
11290 															INSN_UID: <>
11291 															GET_CODE: 81
11292 															INTVAL: 129
11293 															print_rtl: 10725
11294 														PATTERN: <>
11295 														condjump_p: <>
11296 														JUMP_LABEL: 3730
11297 														INSN_UID: <>
11298 														INSN_LUID: <>
11299 														simplejump_p: if (), <./cc/cse.c 8510>
11300 														NOTE_LINE_NUMBER: 177
11301 														no_labels_between_p: <>
11302 														fprintf: <>
11303 														unroll_loop: void (), <./cc/unroll.c 225>
11304 															fprintf: <>
11305 															NEXT_INSN: <>
11306 															GET_CODE: 81
11307 															NOTE_LINE_NUMBER: 177
11308 															prev_nonnote_insn: 4509
11309 															delete_insn: <>
11310 															PREV_INSN: <>
11311 															abort: <>
11312 															gen_label_rtx: rtx (), <./cc/emit-rtl.c 1327>
11313 															LABEL_NAME: <>
11314 															JUMP_LABEL: 3730
11315 															max_label_num: int (), <./cc/emit-rtl.c 540>
11316 															get_max_uid: 10902
11317 															alloca: <>
11318 															bzero: <>
11319 															CODE_LABEL_NUMBER: <>
11320 															PATTERN: <>
11321 															XVECLEN: <>
11322 															XEXP: 105
11323 															XVECEXP: <>
11324 															max_reg_num: 4460
11325 															INSN_UID: <>
11326 															INSN_LUID: <>
11327 															precondition_loop_p: int (), <./cc/unroll.c 1218>
11328 																GEN_INT: <>
11329 																fprintf: <>
11330 																GET_CODE: 81
11331 																exact_log2:  () >= 0 (nzb (true_code == EQ && true_val == const0_rtx && () (reg_mentioned_p () (known_cond (), pc_rtx, pc_rtx, 0, 0 (reg_mentioned_p () (known_cond (), pc_rtx, pc_rtx, 0, 0 (XEXP (), swapped false true (XEXP (), swapped true false (x, 1 (x, 2 (cond (comparison_p && reversible_comparison_p () && () (true_code (XEXP (), gen_binary () (XEXP (), false (XEXP (), true (x, 0 (rtx_equal_p () && ! side_effects_p () (GET_MODE_CLASS () == MODE_INT && GET_CODE () == NEG && rtx_equal_p () && comparison_p && rtx_equal_p () && ! side_effects_p () (true_code (ABS, mode, mode, true (NEG, mode, mode, gen_unary () (() && comparison_p && rtx_equal_p () && rtx_equal_p () && ! side_effects_p () (true_code (SMAX, mode, true, false (SMIN, mode, true, false (UMAX, mode, true, false (UMIN, mode, true, false (comparison_p && mode != VOIDmode && ! side_effects_p () (true, SET (false, SET (cond, 0 (cond, 1 (() && rtx_equal_p () (t, 1 (t (() && rtx_equal_p () (t, 0 (t (GET_CODE () == SIGN_EXTEND && () && GET_CODE () == SUBREG && subreg_lowpart_p () && rtx_equal_p () && () (XEXP (), 1 (XEXP () (XEXP () (GET_CODE () == SIGN_EXTEND && () && GET_CODE () == SUBREG && subreg_lowpart_p () && rtx_equal_p () && () (XEXP (), 0 (XEXP () (XEXP () (GET_CODE () == ZERO_EXTEND && () && GET_CODE () == SUBREG && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT && subreg_lowpart_p () && rtx_equal_p () && () (XEXP (), 1 (XEXP () (XEXP () (GET_CODE () == ZERO_EXTEND && () && GET_CODE () == SUBREG && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT && subreg_lowpart_p () && rtx_equal_p () && () (XEXP (), 0 (XEXP () (XEXP () (z (gen_binary (), pc_rtx, pc_rtx, 0, 0 (MULT, m, temp, gen_binary () (temp, pc_rtx, pc_rtx, 0, 0 (op, m, gen_lowpart_for_combine (), temp (extend_op != NIL (extend_op, mode, m, temp (true_code == NE && XEXP () == const0_rtx && false == const0_rtx && GET_CODE () == CONST_INT && () (NULL_RTX, ASHIFT, mode, gen_lowpart_for_combine (), i (x (x (x (src (src (dest (GET_CODE () == PC && GET_CODE () == RETURN (GET_MODE_CLASS () == MODE_INT (src, mode, GET_MODE_MASK (), NULL_RTX, 0 (() && () != 0 && () && GET_RTX_CLASS () == && rtx_equal_p () (*cc_use (dest (GET_CODE () == COMPARE (src, 0 (src, 1 (old_code, & op0, & op1 (new_code, op0, op1 (compare_mode != GET_MODE () (dest (REG, compare_mode, regno (regno < FIRST_PSEUDO_REGISTER || () (regno >= FIRST_PSEUDO_REGISTER (regno_reg_rtx[regno], new_dest (SET_DEST (), new_dest (XEXP (), new_dest (new_code != old_code (*cc_use, gen_rtx_combine () (() && ! other_changed && op1 == const0_rtx && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT && exact_log2 () >= 0 (other_insn (() (*cc_use, old_code (XOR, GET_MODE (), op0, GEN_INT () (other_changed (op1 == const0_rtx && dest == cc0_rtx (SET_SRC (), op0 (GET_CODE () != COMPARE || GET_MODE () != compare_mode (SET_SRC (), gen_rtx_combine () (x (XEXP (), op0 (XEXP (), op1 (src, SET (SET_SRC (), src (GET_CODE () == SUBREG && subreg_lowpart_p () && GET_RTX_CLASS () != && () && () && ! () && () (SET_DEST (), gen_lowpart_for_combine () (SET_SRC (), SUBREG_REG () (x (x (GET_CODE () == SUBREG && subreg_lowpart_p () && LOAD_EXTEND_OP () != NIL && SUBREG_WORD () == 0 && () && GET_CODE () == MEM (SET_SRC (), gen_rtx_combine () (x (GET_CODE () != PC && GET_CODE () == IF_THEN_ELSE && GET_MODE_CLASS () == MODE_INT && () && XEXP () == const0_rtx && GET_MODE () == GET_MODE () && ! can_conditionally_move_p () && () && ! side_effects_p () (GET_CODE () == NE XEXP () XEXP () (GET_CODE () == NE XEXP () XEXP () (GET_CODE () == IOR && rtx_equal_p () (true, 1 (GET_CODE () == IOR && rtx_equal_p () (true, 0 (GET_CODE () == IOR && rtx_equal_p () (false, 1 (GET_CODE () == IOR && rtx_equal_p () (false, 0 (AND, GET_MODE (), XEXP (), true (AND, GET_MODE (), gen_unary (), false (SET_SRC (), gen_binary () (x (GET_CODE () == CLOBBER && XEXP () == const0_rtx (GET_CODE () == CLOBBER && XEXP () == const0_rtx (x (x, last (x (x, 0 (x, 1 (GET_CODE () (GET_CODE () == XOR && rtx_equal_p () && ! side_effects_p () (AND, mode, gen_unary (), op1 (GET_CODE () == XOR && rtx_equal_p () && ! side_effects_p () (AND, mode, gen_unary (), op1 (GET_CODE () == NOT && GET_CODE () == XOR && rtx_equal_p () && ! side_effects_p () (AND, mode, XEXP (), op1 (GET_CODE () == NOT && GET_CODE () == XOR && rtx_equal_p () && ! side_effects_p () (AND, mode, XEXP (), op1 (GET_CODE () == CONST_INT (x, mode, op0, INTVAL () (last && GET_CODE () == IOR && GET_CODE () == AND && GET_CODE () == CONST_INT && GET_CODE () == CONST_INT (IOR, mode, gen_binary (), op1 (GET_CODE () != AND (GET_RTX_CLASS () == || GET_RTX_CLASS () == (x, 0 (x, 1 (GET_CODE () == IOR && () && ! side_effects_p () && ! side_effects_p () (GET_CODE () == IOR || GET_CODE () == XOR (gen_binary () (GET_CODE () != AND (GET_CODE () == IOR || GET_CODE () == XOR (gen_binary () (GET_CODE () == NOT && GET_CODE () == XOR (gen_binary () (GET_CODE () == NOT && GET_CODE () == XOR (gen_binary () (GET_CODE () == CONST_INT && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT && () == 0 (GET_CODE () == AND && () && ! side_effects_p () && ! side_effects_p () (GET_CODE () == AND (gen_binary () (GET_CODE () != IOR (GET_CODE () == AND (gen_binary () (GET_CODE () != IOR (() && rtx_equal_p () && GET_CODE () == CONST_INT && GET_CODE () == CONST_INT && () (ROTATE, mode, XEXP (), () (GET_CODE () == CONST_INT && GET_CODE () == ASHIFTRT && GET_CODE () == PLUS && GET_CODE () == CONST_INT && GET_CODE () == CONST_INT && INTVAL () < HOST_BITS_PER_WIDE_INT (XEXP () (op1 (mask >> count == INTVAL () && () == 0 (XEXP (), GEN_INT () (GET_CODE () == NOT (op0, 0 (GET_CODE () == NOT (op1, 0 (num_negated == 2 (XEXP (), op0 (XEXP (), op1 (num_negated == 1 (NOT, mode, mode, gen_binary () (GET_CODE () == AND && rtx_equal_p () && ! side_effects_p () (AND, mode, gen_unary (), op1 (GET_CODE () == AND && rtx_equal_p () && ! side_effects_p () (AND, mode, gen_unary (), op1 (op1 == const1_rtx && GET_RTX_CLASS () == && reversible_comparison_p () (reverse_condition (), mode, XEXP (), XEXP () (op1 == const1_rtx && GET_CODE () == LSHIFTRT && GET_CODE () == CONST_INT && INTVAL () == GET_MODE_BITSIZE () - 1 (GE, mode, XEXP (), const0_rtx (GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT && () && op1 == const_true_rtx && GET_RTX_CLASS () == && reversible_comparison_p () (reverse_condition (), mode, XEXP (), XEXP () (x (GET_CODE () (GET_CODE () == CONST_INT (GET_MODE_SIZE () > UNITS_PER_WORD (GET_MODE () (len == 0 (GET_CODE () == CLOBBER (x, 0 (GET_CODE () != CONST_INT || GET_CODE () != CONST_INT || GET_MODE () == VOIDmode (XEXP () (XEXP () (len + pos > GET_MODE_BITSIZE () (XEXP (), gen_rtx () (BITS_BIG_ENDIAN (GET_MODE () (GET_MODE () (modewidth >= pos - len (NULL_RTX, unsignedp LSHIFTRT ASHIFTRT, GET_MODE (), simplify_shift_const (), modewidth - len (unsignedp && len < HOST_BITS_PER_WIDE_INT (NULL_RTX, GET_MODE (), simplify_shift_const (), () - 1 (GET_CODE () == CLOBBER (x (1 (GET_CODE () == STRICT_LOW_PART && GET_CODE () == SUBREG (XEXP () (GET_MODE () (GET_CODE () == ZERO_EXTRACT && GET_CODE () == CONST_INT (SET_DEST (), 0 (XEXP () (SET_DEST (), 2 (GET_CODE () == CONST_INT && INTVAL () + len > GET_MODE_BITSIZE () (USE, GET_MODE (), inner (BITS_BIG_ENDIAN (GET_CODE () == CONST_INT (GET_MODE_BITSIZE () - len - INTVAL () (GET_CODE () == MINUS && GET_CODE () == CONST_INT && () (pos, 0 (MINUS, GET_MODE (), GEN_INT (), pos (GET_CODE () == SUBREG && () (SET, VOIDmode, SUBREG_REG (), gen_lowpart_for_combine () (GET_CODE () == SUBREG && subreg_lowpart_p () (inner (inner (len < HOST_BITS_PER_WIDE_INT (() - 1 (SET, VOIDmode, copy_rtx (), gen_binary () (mode, inner, pos, pos_rtx, len, unsignedp, in_dest, in_compare (inner (len, MODE_INT, 1 (GET_CODE () == USE (inner, 0 (GET_CODE () == SUBREG && subreg_lowpart_p () (GET_CODE () == MEM (SUBREG_REG () (inner (inner (pos_rtx && GET_CODE () == CONST_INT (pos_rtx (tmode != BLKmode && ! () && () (GET_CODE () == MEM (BYTES_BIG_ENDIAN (GET_MODE_BITSIZE () - len - pos (MEM, tmode, plus_constant () (new (inner (new (inner (new (inner (GET_CODE () == REG (tmode != inner_mode (SUBREG, tmode, inner, () (inner, tmode, len >= HOST_BITS_PER_WIDE_INT GET_MODE_MASK () () - 1, NULL_RTX, 0 (in_dest (GET_CODE () == MEM new () (mode == tmode new gen_rtx_combine () (pos_rtx == 0 && pos == 0 && ! in_dest && ! in_compare && ! spans_byte && unsignedp ( ! spans_byte && () (in_dest (int (int (int ( ! in_dest && unsignedp (int (int (int ( ! in_dest && ! unsignedp (int (int (int (mode != VOIDmode && GET_MODE_SIZE () < GET_MODE_SIZE () (pos_rtx && GET_MODE () != VOIDmode && GET_MODE_SIZE () < GET_MODE_SIZE () (pos_rtx (GET_CODE () != MEM || () (BITS_BIG_ENDIAN (pos_rtx == 0 (MAX () - len - pos (MINUS, GET_MODE (), GEN_INT (), pos_rtx (wanted_mem_mode != VOIDmode && GET_MODE_SIZE () < GET_MODE_SIZE () && () (BYTES_BIG_ENDIAN && ! spans_byte && GET_MODE_SIZE () < GET_MODE_SIZE () (is_mode (inner_mode (pos_rtx == 0 (wanted_mem_mode (BYTES_BIG_ENDIAN != BITS_BIG_ENDIAN && ! spans_byte && is_mode != wanted_mem_mode (GET_MODE_SIZE () - GET_MODE_SIZE () - offset (offset != 0 || inner_mode != wanted_mem_mode (MEM, wanted_mem_mode, plus_constant () (newmem (inner (newmem (inner (newmem (inner (GET_CODE () != MEM (inner, extraction_mode, pos_rtx || len + orig_pos >= HOST_BITS_PER_WIDE_INT GET_MODE_MASK () () << orig_pos, NULL_RTX, 0 (pos_rtx != 0 && GET_MODE_SIZE () > GET_MODE_SIZE () (ZERO_EXTEND, pos_mode, pos_rtx (pos_rtx != 0 && GET_MODE_SIZE () < GET_MODE_SIZE () (pos_mode, pos_rtx (pos_rtx == 0 && orig_pos_rtx != 0 && INTVAL () == pos (pos_rtx == 0 (pos (unsignedp ZERO_EXTRACT SIGN_EXTRACT, extraction_mode, inner, GEN_INT (), pos_rtx ( ! in_dest (mode, new (x, count (x (x (code (GET_CODE () == CONST_INT && INTVAL () >= count (NULL_RTX, ASHIFT, mode, XEXP (), INTVAL () - count (() != 0 (code, mode, mode, tem (GET_CODE () == CONST_INT && () == 0 && () != 0 (code, mode, tem, GEN_INT () (x, in_code (x (x (mode (code == MEM || code == PLUS || code == MINUS MEM () COMPARE in_code == COMPARE SET in_code (code (in_code == MEM && GET_CODE () == CONST_INT && INTVAL () < HOST_BITS_PER_WIDE_INT && INTVAL () >= 0 (XEXP (), next_code (MULT, mode, new, GEN_INT () (GET_CODE () != CONST_INT (GET_CODE () == LSHIFTRT && () >= 0 (XEXP (), next_code (mode, new, 0, XEXP (), i, 1, 0, in_code == COMPARE (GET_CODE () == SUBREG && subreg_lowpart_p () && GET_CODE () == LSHIFTRT && () >= 0 (XEXP (), next_code (GET_MODE (), new, 0, XEXP (), i, 1, 0, in_code == COMPARE (() && GET_CODE () == LSHIFTRT && GET_CODE () == LSHIFTRT && () >= 0 (GET_CODE (), mode, gen_rtx (), gen_rtx () (new, in_code (GET_CODE () == ROTATE && GET_CODE () == CONST_INT && () >= 0 && i <= INTVAL () (XEXP (), next_code (mode, new, (), NULL_RTX, i, 1, 0, in_code == COMPARE (ashr_optab handlers[() mode]insn_code != CODE_FOR_nothing && () && GET_CODE () == LSHIFTRT && GET_CODE () == CONST_INT && INTVAL () >= 0 && INTVAL () < HOST_BITS_PER_WIDE_INT && mode_width <= HOST_BITS_PER_WIDE_INT (mode (XEXP () (() == 0 (XEXP (), gen_rtx_combine () (() >= 0 (mode, make_compound_operation (), 0, NULL_RTX, i, 1, 0, in_code == COMPARE (in_code == COMPARE && () >= 0 (mode, make_compound_operation (), i, NULL_RTX, 1, 1, 0, 1 (ashr_optab handlers[() mode]insn_code == CODE_FOR_nothing && lshr_optab handlers[() mode]insn_code != CODE_FOR_nothing && mode_width <= HOST_BITS_PER_WIDE_INT && () == 0 (ASHIFTRT, mode, make_compound_operation (), XEXP () (x, 0 (x, 1 (GET_CODE () == CONST_INT && GET_CODE () == ASHIFT && GET_CODE () == CONST_INT && INTVAL () >= INTVAL () (XEXP (), next_code (mode, new, INTVAL () - INTVAL (), NULL_RTX, mode_width - INTVAL (), code == LSHIFTRT, 0, in_code == COMPARE (GET_RTX_CLASS () != && ! () && GET_CODE () == CONST_INT && INTVAL () < HOST_BITS_PER_WIDE_INT && () != 0 (mode, make_compound_operation (), 0, NULL_RTX, mode_width - INTVAL (), code == LSHIFTRT, 0, in_code == COMPARE (SUBREG_REG (), in_code (GET_CODE () != GET_CODE () && GET_MODE_SIZE () < GET_MODE_SIZE () && subreg_lowpart_p () (tem, mode, GET_MODE_MASK (), NULL_RTX, 0 (GET_CODE () != SUBREG (newer, in_code (new (mode, new (x (code (i 0 i < GET_RTX_LENGTH () i ++ (fmt[i] == (XEXP (), next_code (XEXP (), new (m, plen (m & - m (pos < 0 (() + 1 (*plen <= 0 (x, mode, mask, reg, just_select (x (code == CALL (() mode GET_MODE () (() && GET_MODE_BITSIZE () < GET_MODE_BITSIZE () (x (op_mode (op_mode (op_mode (GET_MODE_BITSIZE () >= HOST_BITS_PER_WIDE_INT GET_MODE_MASK () () - 1 (HOST_WIDE_INT (x, mode ( ! just_select && () == 0 (GET_CODE () == CONST_INT (x (mode (width > 0 && width < HOST_BITS_PER_WIDE_INT && () != 0 (HOST_WIDE_INT (cval (GET_MODE_SIZE () < GET_MODE_SIZE () && () == 0 (mode, x (GET_MODE () == mode && code != SUBREG && () == 0 (code ( ! BITS_BIG_ENDIAN && () == 0 (XEXP (), mode, mask, reg, next_select (x (GET_CODE () != code (x, mode, mask, reg, next_select (reg != 0 && () (subreg_lowpart_p () && () (SUBREG_REG (), mode, mask, reg, next_select (GET_CODE () == CONST_INT (x, op_mode, XEXP (), mask & INTVAL () (GET_CODE () == AND && GET_CODE () == CONST_INT && INTVAL () == mask (x, 0 (GET_CODE () == AND && GET_CODE () == CONST_INT && GET_MODE_MASK () != mask && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT (INTVAL () | () (GET_MODE () (width > 0 && width < HOST_BITS_PER_WIDE_INT && () != 0 (HOST_WIDE_INT (AND, GET_MODE (), XEXP (), GEN_INT () (rtx_cost () < rtx_cost () (mode (width < HOST_BITS_PER_WIDE_INT && () != 0 (HOST_WIDE_INT (GET_CODE () == CONST_INT && exact_log2 () >= 0 && () == 0 && () != 0 (plus_constant (), mode, mask, reg, next_select (GET_CODE () == LSHIFTRT && GET_CODE () == CONST_INT && INTVAL () >= 0 && INTVAL () < HOST_BITS_PER_WIDE_INT && GET_CODE () == CONST_INT && () && () (() << INTVAL () (GET_CODE (), GET_MODE (), XEXP (), temp (LSHIFTRT, GET_MODE (), temp, XEXP () (x, mode, mask, reg, next_select (op_mode, force_to_mode () (op_mode, force_to_mode () (GET_CODE () == CONST_INT && () && () != 0 (INTVAL () & mask (op_mode != GET_MODE () || op0 != XEXP () || op1 != XEXP () (code, op_mode, op0, op1 ( ! () && ! () (GET_CODE () == CONST_INT && INTVAL () >= 0 && INTVAL () < GET_MODE_BITSIZE () && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT (XEXP () (op_mode, force_to_mode () (op_mode != GET_MODE () || op0 != XEXP () (code, op_mode, op0, XEXP () (GET_CODE () == CONST_INT && INTVAL () < HOST_BITS_PER_WIDE_INT && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT (x, 0 (XEXP () (GET_MODE_BITSIZE () > HOST_BITS_PER_WIDE_INT || () != 0 (x (inner, op_mode, mask, reg, next_select (GET_MODE () != op_mode || inner != XEXP () (LSHIFTRT, op_mode, inner, XEXP () (GET_CODE () == LSHIFTRT && GET_CODE () == CONST_INT && () && exact_log2 () >= 0 && () (LSHIFTRT, GET_MODE (), XEXP (), GEN_INT () (GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT && () (XEXP (), mode, mask, reg, next_select (GET_CODE () == CONST_INT && INTVAL () >= 0 && INTVAL () < HOST_BITS_PER_WIDE_INT (GET_MODE_BITSIZE () > HOST_BITS_PER_WIDE_INT (HOST_WIDE_INT (GET_MODE_BITSIZE () - INTVAL () < HOST_BITS_PER_WIDE_INT (XEXP () (GET_MODE () (GET_MODE () (XEXP () (() == 0 || () >= 0 (x, LSHIFTRT, GET_MODE (), XEXP (), i < 0 INTVAL () GET_MODE_BITSIZE () - 1 - i (GET_CODE () != ASHIFTRT (x, mode, mask, reg, next_select (mask == 1 (LSHIFTRT, GET_MODE (), XEXP (), XEXP () (() && GET_CODE () == CONST_INT && INTVAL () >= 0 && () && GET_CODE () == ASHIFT && GET_CODE () == CONST_INT && INTVAL () == INTVAL () (XEXP (), mode, mask, reg, next_select (GET_CODE () == CONST_INT && INTVAL () >= 0 (code == ROTATE ROTATERT ROTATE, GET_MODE (), GEN_INT (), XEXP () (temp && GET_CODE () == CONST_INT (XEXP (), force_to_mode () (mask == 1 (XEXP (), mode, mask, reg, just_select (GET_CODE () == LSHIFTRT && GET_CODE () == CONST_INT && INTVAL () >= 0 && () && INTVAL () < HOST_BITS_PER_WIDE_INT (mask << INTVAL () (XOR, GET_MODE (), XEXP (), temp (LSHIFTRT, GET_MODE (), temp, XEXP () (x, mode, mask, reg, next_select (op_mode, force_to_mode () (op_mode != GET_MODE () || op0 != XEXP () (code, op_mode, op_mode, op0 (() == 0 && XEXP () == const0_rtx && () == 0 (XEXP (), mode, mask, reg, next_select (XEXP (), gen_lowpart_for_combine () (XEXP (), gen_lowpart_for_combine () (mode, x (x, ptrue, pfalse (x (x (mode (GET_RTX_CLASS () == && () != 0 (code, mode, GET_MODE (), true0 (code, mode, GET_MODE (), false0 (code == COMPARE (GET_RTX_CLASS () == || GET_RTX_CLASS () == || GET_RTX_CLASS () == (XEXP (), & true0, & false0 (XEXP (), & true1, & false1 (() && ! () (code, mode, true0, true1 (code, mode, false0, false1 (() && GET_CODE () == MULT && GET_CODE () == MULT (XEXP (), 1 (XEXP (), 1 (XEXP (), 0 (XEXP (), 0 (GET_RTX_CLASS () == && GET_RTX_CLASS () == && reversible_comparison_p () && () && ! side_effects_p () (MULT, mode, op0, const_true_rtx (MULT, mode, (), const_true_rtx (() && GET_CODE () == MULT && GET_CODE () == MULT (XEXP (), 0 (XEXP (), 0 (GET_RTX_CLASS () == && GET_RTX_CLASS () == && reversible_comparison_p () && () && ! side_effects_p () (code == IF_THEN_ELSE (x, 0 (x, 1 (x, 2 (GET_CODE () == NE && XEXP () == const0_rtx (cond0, 0 (GET_CODE () == EQ && XEXP () == const0_rtx (x, 2 (x, 1 (cond0, 0 (code == SUBREG && GET_MODE_CLASS () == MODE_INT && GET_MODE_CLASS () == MODE_INT && GET_MODE_SIZE () <= GET_MODE_SIZE () && 0 != () (true0, mode, GET_MODE_MASK (), NULL_RTX, 0 (false0, mode, GET_MODE_MASK (), NULL_RTX, 0 (CONSTANT_P () || () (num_sign_bit_copies () == size (exact_log2 () >= 0 (nz (x, cond, reg, val (x (side_effects_p () (cond == EQ && rtx_equal_p () (code == ABS && rtx_equal_p () && val == const0_rtx (cond (x, 0 (NEG, GET_MODE (), GET_MODE (), XEXP () (GET_RTX_CLASS () == || GET_RTX_CLASS () == (rtx_equal_p () (cond (rtx_equal_p () && rtx_equal_p () (GET_RTX_CLASS () == (comparison_dominates_p () const_true_rtx () (code == SMAX || code == SMIN || code == UMIN || code == UMAX (code == UMIN || code == UMAX (code == SMAX || code == UMAX (cond (cond (x, 1 (x, 0 (x, 1 (x, 0 (code (i GET_RTX_LENGTH () - 1 i >= 0 i -- (fmt[i] == (XEXP (), known_cond () (fmt[i] == (j XVECLEN () - 1 j >= 0 j -- (XVECEXP (), known_cond () (x (x (x (GET_CODE () == AND && GET_CODE () == ROTATE && GET_CODE () == CONST_INT && INTVAL () == -2 && () (VOIDmode, dest, 0, XEXP (), 1, 1, 1, 0 (SET, VOIDmode, assign, const0_rtx (GET_CODE () == AND && GET_CODE () == SUBREG && subreg_lowpart_p () && () && GET_CODE () == ROTATE && INTVAL () == -2 && () (VOIDmode, dest, 0, XEXP (), 1, 1, 1, 0 (SET, VOIDmode, assign, const0_rtx (GET_CODE () == IOR && GET_CODE () == ASHIFT && XEXP () == const1_rtx && () (VOIDmode, dest, 0, XEXP (), 1, 1, 1, 0 (SET, VOIDmode, assign, const1_rtx (GET_CODE () == IOR && GET_CODE () == AND && GET_CODE () == CONST_INT && () (XEXP () (src, 1 (GET_CODE () == IOR && GET_CODE () == AND && GET_CODE () == CONST_INT && () (XEXP () (src, 0 (c1 ^ GET_MODE_MASK (), & len (pos < 0 || pos + len > GET_MODE_BITSIZE () || () (VOIDmode, dest, pos, NULL_RTX, len, 1, 1, 0 (GET_CODE () == STRICT_LOW_PART GET_MODE () GET_MODE () (simplify_shift_const (), mode, GET_MODE_BITSIZE () >= HOST_BITS_PER_WIDE_INT GET_MODE_MASK () () - 1, dest, 0 (SET, VOIDmode, assign, src (x (x (FLOAT_MODE_P () (code != IOR && code != AND && code != XOR && code != PLUS && code != MINUS (x, 0 (x, 1 (GET_RTX_CLASS () == || GET_RTX_CLASS () == (lhs (rhs (lhs (inner_code != GET_CODE () (inner_code (code == PLUS || code == MINUS (code != PLUS && code != MINUS (GET_MODE () != GET_MODE () || SUBREG_WORD () != SUBREG_WORD () || ! subreg_lowpart_p () || () || () || GET_MODE_SIZE () > UNITS_PER_WORD (code, GET_MODE (), SUBREG_REG (), SUBREG_REG () (GET_MODE (), tem (GET_RTX_CLASS () == && rtx_equal_p () (lhs, 0 (lhs, 1 (rhs, 1 (GET_RTX_CLASS () == && rtx_equal_p () (lhs, 0 (lhs, 1 (rhs, 0 (GET_RTX_CLASS () == && rtx_equal_p () (lhs, 1 (lhs, 0 (rhs, 1 (rtx_equal_p () (lhs, 1 (lhs, 0 (rhs, 0 (code, GET_MODE (), lhs, rhs (code == XOR && inner_code == IOR (NOT, GET_MODE (), GET_MODE (), other (inner_code, GET_MODE (), apply_distributive_law (), other (x, mode, varop, constop (mode (varop, mode, constop, NULL_RTX, 0 (GET_CODE () == CLOBBER || GET_CODE () == CONST_INT (varop, mode (mode (BITS_PER_WORD < HOST_BITS_PER_WIDE_INT && BITS_PER_WORD == width && () (() () << width (constop == 0 (GET_CODE () == NEG && nonzero_bits () == 1 && () >= 0 (NULL_RTX, ASHIFT, mode, XEXP (), i (GET_CODE () == IOR || GET_CODE () == XOR (mode, apply_distributive_law () (x && GET_CODE () == SUBREG && GET_MODE () == mode && SUBREG_REG () == varop (x, 0 (mode, varop (GET_CODE () == CLOBBER (constop == nonzero (x == 0 || GET_CODE () != AND || GET_MODE () != mode (AND, mode, varop, GEN_INT () (GET_CODE () != CONST_INT || INTVAL () != constop (XEXP (), GEN_INT () (XEXP (), varop (x, mode (mode (mode (FLOAT_MODE_P () || FLOAT_MODE_P () (GET_MODE_BITSIZE () > mode_width (x (mode (mode (mode_width > HOST_BITS_PER_WIDE_INT (GET_MODE () != VOIDmode && GET_MODE () != mode && GET_MODE_BITSIZE () <= BITS_PER_WORD && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT && GET_MODE_BITSIZE () > GET_MODE_BITSIZE () (x, GET_MODE () (mode (GET_MODE () (x (code (POINTERS_EXTEND_UNSIGNED && GET_MODE () == Pmode && REGNO_POINTER_FLAG () (ptr_mode (x == stack_pointer_rtx (PUSH_ROUNDING (), sp_alignment (sp_alignment - 1 (reg_last_set_value[REGNO ()] != 0 && reg_last_set_mode[REGNO ()] == mode && () && INSN_CUID () < subst_low_cuid (x (x (tem (GET_MODE_BITSIZE () < mode_width && GET_CODE () == CONST_INT && INTVAL () > 0 && 0 != () (INTVAL () | () (tem, mode (nonzero_sign_valid && reg_nonzero_bits[REGNO ()](x (INTVAL () > 0 && mode_width < BITS_PER_WORD && 0 != () (INTVAL () | () (x (LOAD_EXTEND_OP () == ZERO_EXTEND (GET_MODE () (GET_MODE_CLASS () == MODE_INT && mode_width <= HOST_BITS_PER_WIDE_INT (num_sign_bit_copies () == GET_MODE_BITSIZE () (GET_MODE_SIZE () < mode_width (GET_MODE_MASK () & GET_MODE_MASK () (num_sign_bit_copies () == GET_MODE_BITSIZE () (nonzero_bits () & GET_MODE_MASK () (XEXP (), mode (GET_MODE () != VOIDmode (GET_MODE () (XEXP (), mode (GET_MODE () != VOIDmode (GET_MODE () (inner_nz & () (GET_MODE_MASK () & GET_MODE_MASK () (nonzero_bits () & nonzero_bits () (nonzero_bits () | nonzero_bits () (XEXP (), mode (XEXP (), mode (nz0 (nz1 (nz0 & - nz0 (nz1 & - nz1 (nz0 & () (nz1 & () (code (width0, width1 (low0, low1 (low0, low1 ( ! op0_maybe_minusp && ! op1_maybe_minusp ( ! op0_maybe_minusp && ! op1_maybe_minusp (width0, width1 (low0, low1 (width0, width1 (low0, low1 (result_width < mode_width (() 1 << result_width (result_low > 0 (() - 1 (GET_CODE () == CONST_INT && INTVAL () < HOST_BITS_PER_WIDE_INT (() 1 << INTVAL () (SUBREG_PROMOTED_VAR_P () && SUBREG_PROMOTED_UNSIGNED_P () (GET_MODE_MASK () & nonzero_bits () (GET_MODE_BITSIZE () <= BITS_PER_WORD && () (SUBREG_REG (), mode (GET_MODE_SIZE () > GET_MODE_SIZE () (GET_MODE_MASK () & GET_MODE_MASK () (GET_CODE () == CONST_INT && INTVAL () >= 0 && INTVAL () < HOST_BITS_PER_WIDE_INT (x (inner_mode (XEXP () (inner_mode (XEXP (), mode (mode_width > width (op_nonzero & nonzero & mode_mask (code == LSHIFTRT (code == ASHIFTRT (inner & () (() - 1 (width - count (code == ASHIFT (() & mode_mask (outer | inner (() 1 << () (nonzero_bits () | nonzero_bits () (x, mode (x (mode == VOIDmode (x (mode == VOIDmode || FLOAT_MODE_P () || FLOAT_MODE_P () (mode (bitwidth < GET_MODE_BITSIZE () (1, () (GET_MODE () != VOIDmode && bitwidth > GET_MODE_BITSIZE () (code ( ! POINTERS_EXTEND_UNSIGNED && GET_MODE () == Pmode && mode == Pmode && REGNO_POINTER_FLAG () (Pmode (ptr_mode (reg_last_set_value[REGNO ()] != 0 && reg_last_set_mode[REGNO ()] == mode && () && INSN_CUID () < subst_low_cuid (x (x (tem != 0 (tem, mode (nonzero_sign_valid && reg_sign_bit_copies[REGNO ()] != 0 (x (LOAD_EXTEND_OP () == SIGN_EXTEND (1, bitwidth - GET_MODE_BITSIZE () + 1 (x (mode (bitwidth <= HOST_BITS_PER_WIDE_INT && () != 0 (nonzero (mode (nonzero == 0 bitwidth bitwidth - floor_log2 () - 1 (SUBREG_PROMOTED_VAR_P () && ! SUBREG_PROMOTED_UNSIGNED_P () (bitwidth - GET_MODE_BITSIZE () + 1, num_sign_bit_copies () (bitwidth <= GET_MODE_BITSIZE () (SUBREG_REG (), VOIDmode (1, () (() && LOAD_EXTEND_OP () == SIGN_EXTEND (SUBREG_REG (), mode (GET_CODE () == CONST_INT (1, bitwidth - INTVAL () (bitwidth - GET_MODE_BITSIZE () + num_sign_bit_copies () (XEXP (), VOIDmode (1, () (XEXP (), mode (GET_CODE () == CONST_INT && INTVAL () >= 0 && INTVAL () < bitwidth (XEXP (), mode (1, num0 - () (XEXP (), mode (nonzero == 1 (XEXP (), mode (num0 > 1 && bitwidth <= HOST_BITS_PER_WIDE_INT && () (XEXP (), mode (XEXP (), mode (num0, num1 (code == PLUS && XEXP () == constm1_rtx && bitwidth <= HOST_BITS_PER_WIDE_INT (XEXP (), mode (() == 0 (nonzero == 1 || nonzero == 0 bitwidth bitwidth - floor_log2 () - 1 (XEXP (), mode (XEXP (), mode (1, MIN () - 1 (XEXP (), mode (XEXP (), mode (bitwidth - num0 (bitwidth - num1 (result > 0 && bitwidth <= HOST_BITS_PER_WIDE_INT && () && () (1, result (XEXP (), mode (XEXP (), mode (XEXP (), mode (result > 1 && bitwidth <= HOST_BITS_PER_WIDE_INT && () != 0 (XEXP (), mode (result > 1 && bitwidth <= HOST_BITS_PER_WIDE_INT && () != 0 (XEXP (), mode (GET_CODE () == CONST_INT && INTVAL () > 0 (bitwidth, num0 + INTVAL () (GET_CODE () != CONST_INT || INTVAL () < 0 || INTVAL () >= bitwidth (XEXP (), mode (1, num0 - INTVAL () (XEXP (), mode (XEXP (), mode (num0, num1 (bitwidth > HOST_BITS_PER_WIDE_INT (x, mode (nonzero & () 1 bitwidth - floor_log2 () - 1 (x, mode, unsignedp (nonzero_sign_valid == 0 (unsignedp () num_sign_bit_copies () - 1 (pop0, pconst0, op1, const1, mode, pcomp_p (mode (mode (mode (op0 == AND (op1 == NIL || op0 == SET (op0 == NIL (op0 == op1 (op0 (op0 == PLUS || op1 == PLUS || op0 == NEG || op1 == NEG (const0 != const1 (op0 (op1 == AND (op1 == AND (op1 == IOR (mode (const0 == 0 && () (const0 == 0 && op0 == AND (const0 == GET_MODE_MASK () && op0 == AND (BITS_PER_WORD < HOST_BITS_PER_WIDE_INT && BITS_PER_WORD == width && () (() () << width (x, code, result_mode, varop, count (GET_MODE_SIZE () + () (count < 0 || count > GET_MODE_BITSIZE () (x (code, mode, varop, GEN_INT () (count != 0 (GET_CODE () == CLOBBER (complement_p (code == ROTATERT (result_mode (code == ASHIFTRT || code == LSHIFTRT || code == ROTATE result_mode mode (count > GET_MODE_BITSIZE () - 1 (code == ASHIFTRT (shift_mode (code == ROTATE || code == ROTATERT (shift_mode (count < 0 ((code == ASHIFTRT && () (code == ASHIFTRT && () (shift_mode (GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT && code == ASHIFTRT && () (GET_CODE () (varop (new != varop (() && ! mode_dependent_address_p () && ! MEM_VOLATILE_P () && () != BLKmode (BYTES_BIG_ENDIAN (MEM, tmode, XEXP () (MEM, tmode, plus_constant () (new (varop (new (varop (new (varop (code == ASHIFTRT SIGN_EXTEND ZERO_EXTEND, mode, new (() && () != BLKmode && tmode == GET_MODE () (BITS_BIG_ENDIAN (varop, 0 (XEXP () (XEXP (), plus_constant () (code == ASHIFTRT SIGN_EXTEND ZERO_EXTEND, mode, new (subreg_lowpart_p () && () && () (varop (GET_MODE_SIZE () > GET_MODE_SIZE () (varop (GET_CODE () == CONST_INT && exact_log2 () >= 0 (ASHIFT, GET_MODE (), XEXP (), GEN_INT () (GET_CODE () == CONST_INT && exact_log2 () >= 0 (LSHIFTRT, GET_MODE (), XEXP (), GEN_INT () (code == LSHIFTRT && count == GET_MODE_BITSIZE () - 1 (varop, 0 (GET_CODE () == CONST_INT && INTVAL () >= 0 && INTVAL () < GET_MODE_BITSIZE () && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT (varop (XEXP () (code == ASHIFT && first_code == ASHIFTRT && () == count (GET_MODE_MASK () & () (NULL_RTX, result_mode, XEXP (), mask (NULL_RTX, ASHIFT, result_mode, varop, count (code == ASHIFTRT && first_code == ASHIFT && GET_MODE () == shift_mode && () (count < 0 (varop, 0 (code == first_code (GET_MODE () != result_mode && () (varop, 0 (code == ASHIFTRT || () || GET_MODE_BITSIZE () > HOST_BITS_PER_WIDE_INT || () (nonzero_bits () (code, result_mode, mask_rtx, GEN_INT () (mask_rtx == 0 || GET_CODE () != CONST_INT || ! merge_outer_ops () (() == () (count > 0 && () (count < 0 (varop, 0 (GET_CODE () == code && GET_CODE () != CONST_INT && 0 != () (code, mode, new, XEXP () (XOR, mode, XEXP (), GEN_INT () (GET_CODE () == IOR && GET_CODE () == PLUS && XEXP () == constm1_rtx && () && () && count == GET_MODE_BITSIZE () - 1 && rtx_equal_p () (LE, GET_MODE (), XEXP (), const0_rtx (STORE_FLAG_VALUE == 1 code == ASHIFTRT code == LSHIFTRT (NEG, GET_MODE (), varop (GET_CODE () == CONST_INT && () != 0 && GET_CODE () == CONST_INT && merge_outer_ops () (varop, 0 (NULL_RTX, code, shift_mode, XEXP (), count (NULL_RTX, code, shift_mode, XEXP (), count (GET_CODE (), shift_mode, lhs, rhs (varop (code == LSHIFTRT && XEXP () == const0_rtx && GET_MODE () == result_mode && count == GET_MODE_BITSIZE () - 1 && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT && () && nonzero_bits () == 1 && merge_outer_ops () (varop, 0 (code == LSHIFTRT && count == GET_MODE_BITSIZE () - 1 && nonzero_bits () == 1 (varop, 0 (code == ASHIFT && merge_outer_ops () (varop, 0 (code == LSHIFTRT && count == GET_MODE_BITSIZE () - 1 && XEXP () == constm1_rtx && nonzero_bits () == 1 && merge_outer_ops () (varop, 0 (() && count < HOST_BITS_PER_WIDE_INT && nonzero_bits () >> count == 0 && () == 0 (varop, 0 (() && count < HOST_BITS_PER_WIDE_INT && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT && 0 == () && 0 == () (varop, 1 (code == ASHIFT && GET_CODE () == CONST_INT && () != 0 && GET_CODE () == CONST_INT && merge_outer_ops () (varop, 0 (GET_CODE () == ASHIFTRT && count == GET_MODE_BITSIZE () - 1 && () && () && GET_CODE () == CONST_INT && INTVAL () == count && rtx_equal_p () (GT, GET_MODE (), XEXP (), const0_rtx (STORE_FLAG_VALUE == 1 code == ASHIFTRT code == LSHIFTRT (NEG, GET_MODE (), varop (code == ASHIFTRT || code == LSHIFTRT || code == ROTATE result_mode mode (x && GET_RTX_CLASS () == && GET_CODE () == CONST_INT && INTVAL () == count (x, 1 (count (x && GET_CODE () == SUBREG && GET_MODE () == shift_mode && SUBREG_REG () == varop (x, 0 (GET_MODE () != shift_mode (shift_mode, varop (GET_CODE () == CLOBBER (code, shift_mode, varop, const_rtx (new != 0 (x == 0 || GET_CODE () != code || GET_MODE () != shift_mode (code, shift_mode, varop, const_rtx (XEXP (), varop (XEXP (), const_rtx (outer_op != NIL && GET_CODE () == code && GET_CODE () == CONST_INT (x, code, shift_mode, XEXP (), INTVAL () (orig_code == LSHIFTRT && result_mode != shift_mode (NULL_RTX, shift_mode, x, GET_MODE_MASK () >> orig_count (result_mode, x (complement_p (NOT, result_mode, result_mode, x (outer_op != NIL (GET_MODE_BITSIZE () < HOST_BITS_PER_WIDE_INT (result_mode (result_mode (BITS_PER_WORD < HOST_BITS_PER_WIDE_INT && BITS_PER_WORD == width && () (() () << width (outer_op == AND (NULL_RTX, result_mode, x, outer_const (outer_op == SET (outer_const (GET_RTX_CLASS () == (outer_op, result_mode, result_mode, x (outer_op, result_mode, x, GEN_INT () (pnewpat, insn, pnotes, padded_scratches (GET_CODE () == PARALLEL (i XVECLEN () - 1 i >= 0 i -- (GET_CODE () == CLOBBER && XEXP () == const0_rtx (pat, insn, & num_clobbers_to_add (insn_code_number < 0 && ! check_asm_operands () && GET_CODE () == PARALLEL (pos 0, i 0 i < XVECLEN () i ++ (GET_CODE () != CLOBBER (i != pos (XVECEXP (), XVECEXP () (XVECLEN (), pos (pos == 1 (pat, 0, 0 (pat, insn, & num_clobbers_to_add (num_clobbers_to_add (PARALLEL, VOIDmode, gen_rtvec () (GET_CODE () == PARALLEL (i 0 i < XVECLEN () i ++ (newpat, 0, i (pat, 0, i (newpat, 0, 0 (newpat, insn_code_number (i XVECLEN () - num_clobbers_to_add i < XVECLEN () i ++ (GET_CODE () == REG && ! reg_dead_at_p () (GET_CODE () == SCRATCH (*padded_scratches (EXPR_LIST, REG_UNUSED, XEXP (), notes (mode, x (GET_MODE () == mode (GET_MODE_SIZE () > UNITS_PER_WORD && ! () (CLOBBER, GET_MODE (), const0_rtx (GET_CODE () == SUBREG && GET_CODE () == MEM (x (GET_MODE () == mode (mode, x (result != 0 && GET_CODE () == SUBREG && GET_CODE () == REG && REGNO () >= FIRST_PSEUDO_REGISTER && () (SUBREG_REG () (result (GET_CODE () == MEM (MEM_VOLATILE_P () || mode_dependent_address_p () (CLOBBER, GET_MODE (), const0_rtx (GET_MODE_SIZE () < GET_MODE_SIZE () (SUBREG, mode, x, 0 (WORDS_BIG_ENDIAN (MAX () - MAX () (BYTES_BIG_ENDIAN (MIN () - MIN () (MEM, mode, plus_constant () (new (x (new (x (new (x (GET_RTX_CLASS () == (GET_CODE (), mode, XEXP (), XEXP () (WORDS_BIG_ENDIAN && GET_MODE_SIZE () > UNITS_PER_WORD (() / UNITS_PER_WORD (SUBREG, mode, x, word (() (p, mode (p, enum rtx_code (p, enum machine_mode (code (code (n_args == 0 || n_args > 3 ((j 0 j < n_args j ++ (*fmt ++ != ((p, rtx (i previous_num_undos i < undobuf num_undo i ++ ( ! undobuf undo[i]is_int && GET_CODE () == code && GET_MODE () == mode (j 0 j < n_args j ++ (XEXP () != args[j](j == n_args (code (rt, mode (rt, 0 (n_args > 1 (rt, 1 (n_args > 2 (rt, 2 (code, mode, op0, op1 (GET_RTX_CLASS () == && () (GET_RTX_CLASS () == (op0 (GET_CODE () == COMPARE && op1 == const0_rtx (op0, 1 (op0, 0 (op0 (op_mode == VOIDmode (op1 (code, op_mode, op0, op1 (code, mode, op0, op1 (result (GET_RTX_CLASS () == && () (code, mode, op1, op0 (code, mode, op0, op1 (code, mode, op0_mode, op0 (code, mode, op0, op0_mode (result (code, mode, op0 (code, pop0, pop1 (1 (code != GTU && code != GEU && code != LTU && code != LEU && GET_CODE () == ASHIFTRT && GET_CODE () == ASHIFTRT && GET_CODE () == ASHIFT && GET_CODE () == ASHIFT && GET_CODE () == SUBREG && GET_CODE () == SUBREG && () && GET_CODE () == CONST_INT && GET_CODE () == CONST_INT && GET_CODE () == CONST_INT && GET_CODE () == CONST_INT && INTVAL () == INTVAL () && INTVAL () == INTVAL () && INTVAL () == INTVAL () && () (XEXP () (XEXP () (GET_CODE () == GET_CODE () && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT && () && GET_CODE () == CONST_INT && INTVAL () >= 0 && INTVAL () < HOST_BITS_PER_WIDE_INT && XEXP () == XEXP () (op0 (mode (XEXP () (GET_CODE () == LSHIFTRT || GET_CODE () == ASHIFTRT (mask >> shift_count (GET_CODE () == ASHIFT (mask & () (() == 0 && () == 0 (op0, 0 (op1, 0 (GET_CODE () == AND && GET_CODE () == AND && GET_CODE () == CONST_INT && GET_CODE () == CONST_INT (op0, 0 (op1, 0 (XEXP () (XEXP () (GET_CODE () == SUBREG && GET_CODE () == SUBREG && () && () && () && () && () (inner_op0 (inner_op1 (code (c0 == c1 (tmode GET_CLASS_NARROWEST_MODE () tmode != GET_MODE () tmode GET_MODE_WIDER_MODE () (c0 == GET_MODE_MASK () (tmode, inner_op0 (tmode, inner_op1 (code ( ! changed (() || () (op0, 0 (op1, 0 (code (CONSTANT_P () (code (GET_CODE () == CONST_INT (op0 (mode (mode (GET_MODE_CLASS () != MODE_INT && ! () (op1 (mode_width <= HOST_BITS_PER_WIDE_INT (const_op && () && mode_width <= HOST_BITS_PER_WIDE_INT && exact_log2 () >= 0 && nonzero_bits () == const_op (code == EQ || code == GE || code == GEU NE EQ (const_op == -1 && () && num_sign_bit_copies () == mode_width (code == EQ || code == LE || code == GEU NE EQ (code (const_op > 0 (const_op (const_op < 0 (const_op (const_op == 0 && mode_width <= HOST_BITS_PER_WIDE_INT && () == 0 (const_op > 0 (const_op (const_op < 0 (const_op (const_op == 0 && mode_width <= HOST_BITS_PER_WIDE_INT && () == 0 (const_op > 0 (const_op (const_op == () 1 << () (const_op == 0 (const_op == () - 1 (const_op > 1 (const_op (const_op == () 1 << () (const_op == 0 (const_op == () - 1 (code == EQ || code == NE (() && const_op == 0 (code == LTU || code == LEU || code == GTU || code == LEU (sign_bit_comparison_p && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT (op0, mode, (), NULL_RTX, 0 (GET_CODE () (GET_CODE () == CONST_INT && XEXP () == const1_rtx && equality_comparison_p && const_op == 0 && () >= 0 && () (BITS_BIG_ENDIAN (GET_MODE_BITSIZE () - 1 - i (op0, 2 (i (code (op0 (tem != op0 (equality_comparison_p && () != 0 (op0, 0 (sign_bit_comparison_p (op0, 0 (code == GE LT GE (equality_comparison_p && () != 0 (op0, 0 (const_op != 0 (sign_bit_comparison_p && () (op0, 0 (code == LT NE EQ (num_sign_bit_copies () >= 2 (op0, 0 (code (equality_comparison_p && GET_CODE () == CONST_INT && () != 0 (op0, 0 (const_op == 0 && sign_bit_comparison_p && GET_CODE () == CONST_INT && mode_width <= HOST_BITS_PER_WIDE_INT (NULL_RTX, mode, XEXP (), () (code == LT NE EQ (const_op == 0 && equality_comparison_p (op0, 0 ( ! unsigned_comparison_p && () && () (op0, 0 (mode_width <= HOST_BITS_PER_WIDE_INT && subreg_lowpart_p () && GET_CODE () == PLUS && GET_CODE () == CONST_INT && INTVAL () < 0 && () && () const_op < GET_MODE_MASK () / 2 && () (op0 (subreg_lowpart_p () && GET_MODE_BITSIZE () < mode_width (() && () && () (op0, 0 (equality_comparison_p && 0 != () (op0, 0 (const_op == 0 && XEXP () == constm1_rtx && GET_CODE () == ABS && sign_bit_comparison_p (XEXP (), 0 (code == LT EQ NE (equality_comparison_p && 0 != () (op0, 0 (equality_comparison_p && 0 != () (op0, 1 (sign_bit_comparison_p && GET_CODE () == ASHIFTRT && GET_CODE () == CONST_INT && INTVAL () == mode_width - 1 && rtx_equal_p () (op0, 1 (code == GE LE GT (equality_comparison_p && 0 != () (op0, 0 (const_op != 0 || XEXP () == cc0_rtx || GET_MODE_CLASS () == MODE_CC (GET_CODE () == COMPARE (XEXP (), 0 (XEXP (), 1 (op0, 0 (op0, 1 (code == NE || () || () (code == LT || code == NE GET_CODE () reverse_condition () (sign_bit_comparison_p && GET_CODE () == PLUS && XEXP () == constm1_rtx && rtx_equal_p () (op0, 1 (code == GE GT LE (const_op == 0 && equality_comparison_p && GET_CODE () == ASHIFT && XEXP () == const1_rtx (op0, mode, gen_rtx_combine (), () 1 (const_op == 0 && equality_comparison_p && mode_width <= HOST_BITS_PER_WIDE_INT && GET_CODE () == CONST_INT && GET_CODE () == LSHIFTRT && GET_CODE () == CONST_INT && INTVAL () >= 0 && INTVAL () < HOST_BITS_PER_WIDE_INT (() << INTVAL () (() == 0 && () (XEXP (), 0 (equality_comparison_p && const_op == 0 && GET_CODE () == CONST_INT && mode_width <= HOST_BITS_PER_WIDE_INT && () (op0, 0 (code == EQ GE LT (() && GET_CODE () == CONST_INT && () >= 0 && const_op >> i == 0 && () != BLKmode (tmode, XEXP () (GET_CODE () == CONST_INT && INTVAL () >= 0 && () && () && mode_width <= HOST_BITS_PER_WIDE_INT && () == 0 (XEXP () (const_op (op0, 0 (sign_bit_comparison_p && GET_CODE () == CONST_INT && mode_width <= HOST_BITS_PER_WIDE_INT (NULL_RTX, mode, XEXP (), () (code == LT NE EQ (const_op == 0 && equality_comparison_p && GET_CODE () == CONST_INT && INTVAL () == mode_width - 1 (NULL_RTX, mode, XEXP (), () 1 (equality_comparison_p && const_op == 0 && GET_CODE () == CONST_INT (NULL_RTX, LSHIFTRT, mode, XEXP (), INTVAL () ( ! unsigned_comparison_p && GET_CODE () == CONST_INT && GET_CODE () == ASHIFT && XEXP () == XEXP () && () != BLKmode && () (tmode, XEXP () (GET_CODE () == CONST_INT && INTVAL () >= 0 && INTVAL () < HOST_BITS_PER_WIDE_INT && mode_width <= HOST_BITS_PER_WIDE_INT && () == 0 && () (XEXP () (const_op (op0, 0 (const_op == 0 && () && GET_CODE () == CONST_INT && INTVAL () == mode_width - 1 (op0, 0 (code == NE || code == GT LT GE (op0, op1 == const0_rtx COMPARE SET (op1, SET (GET_CODE () == SUBREG && subreg_lowpart_p () && GET_MODE_CLASS () == MODE_INT && () && () (op0 (GET_MODE (), op1 (GET_CODE () == SUBREG && subreg_lowpart_p () && GET_MODE_CLASS () == MODE_INT && () && () && () == 0 && () (op0 (op0 (mode != VOIDmode && GET_MODE_CLASS () == MODE_INT && GET_MODE_SIZE () < UNITS_PER_WORD && cmp_optab handlers[() mode]insn_code == CODE_FOR_nothing (tmode GET_MODE_WIDER_MODE () () tmode GET_MODE_WIDER_MODE () (cmp_optab handlers[() tmode]insn_code != CODE_FOR_nothing (() || () (tmode, op0 (tmode, op1 (op1 == const0_rtx && () && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT (AND, tmode, gen_lowpart_for_combine (), GEN_INT () (code == LT (code, op0, op1 (x (TARGET_FLOAT_FORMAT != IEEE_FLOAT_FORMAT || flag_fast_math || GET_CODE () == NE || GET_CODE () == EQ (GET_MODE_CLASS () (REVERSIBLE_CC_MODE () (XEXP () (x && GET_CODE () == COMPARE && ! FLOAT_MODE_P () (x (x (code (code == REG (x (regno < FIRST_PSEUDO_REGISTER HARD_REGNO_NREGS () 1 (i regno i < endregno i ++ (i GET_RTX_LENGTH () - 1 i >= 0 i -- (fmt[i] == (XEXP () (reg, insn, value (reg (regno < FIRST_PSEUDO_REGISTER HARD_REGNO_NREGS () 1 (value && insn && reg_overlap_mentioned_p () (insn (reg (tem (copy_rtx (), reg, tem (i regno i < endregno i ++ (insn (value (value (i regno i < endregno i ++ (value && reg_last_set_table_tick[i] == label_tick (value && ! get_last_value_validate () (value ( ! get_last_value_validate () (value (insn (reg (value, GET_MODE () (value, GET_MODE () (dest, setter (GET_CODE () == SUBREG (dest (GET_CODE () == REG (GET_CODE () == SET && dest == SET_DEST () (dest, record_dead_insn, SET_SRC () (GET_CODE () == SET && GET_CODE () == SUBREG && SUBREG_REG () == dest && GET_MODE_BITSIZE () <= BITS_PER_WORD && subreg_lowpart_p () (dest, record_dead_insn, gen_lowpart_for_combine () (dest, record_dead_insn, NULL_RTX (GET_CODE () == MEM && ! push_operand () (record_dead_insn (insn (link REG_NOTES () link link XEXP () (REG_NOTE_KIND () == REG_DEAD && GET_CODE () == REG (XEXP () (regno < FIRST_PSEUDO_REGISTER HARD_REGNO_NREGS () 1 (i regno i < endregno i ++ (REG_NOTE_KIND () == REG_INC (XEXP (), insn, NULL_RTX (GET_CODE () == CALL_INSN (i 0 i < FIRST_PSEUDO_REGISTER i ++ (call_used_regs[i](insn (PATTERN (), record_dead_and_set_regs_1 (loc, tick, replace (GET_CODE () (GET_CODE () (GET_CODE () == REG (x (regno < FIRST_PSEUDO_REGISTER HARD_REGNO_NREGS () 1 (j regno j < endregno j ++ (reg_last_set_invalid[j] || () (replace (CLOBBER, GET_MODE (), const0_rtx (i 0 i < len i ++ (() || fmt[i] == (x (GET_CODE () == SUBREG && subreg_lowpart_p () && () && () != 0 (GET_MODE (), value (GET_CODE () != REG (x (value == 0 || () (INSN_CUID () >= subst_low_cuid (subst_prev_insn (insn prev_nonnote_insn () insn && () insn prev_nonnote_insn () (insn && () != 0 && rtx_equal_p () (set (reg_mentioned_p () (copy_rtx (), x, gen_rtx () (reg_overlap_mentioned_p () (get_last_value_validate () (value (get_last_value_validate () (x, from_cuid (x (code == REG (x (regno < FIRST_PSEUDO_REGISTER HARD_REGNO_NREGS () 1 (regno == STACK_POINTER_REGNUM (regno < endreg regno ++ (reg_last_set[regno] && INSN_CUID () > from_cuid (code == MEM && mem_last_set > from_cuid (code (i GET_RTX_LENGTH () - 1 i >= 0 i -- (fmt[i] == (j XVECLEN () - 1 j >= 0 j -- (use_crosses_set_p () (fmt[i] == && use_crosses_set_p () (dest, x (GET_CODE () != REG (dest (regno < FIRST_PSEUDO_REGISTER HARD_REGNO_NREGS () 1 (reg_dead_endregno > regno && reg_dead_regno < endregno (GET_CODE () == CLOBBER (reg, insn (reg (reg_dead_regno < FIRST_PSEUDO_REGISTER HARD_REGNO_NREGS () 1 (reg_dead_regno < FIRST_PSEUDO_REGISTER (i reg_dead_regno i < reg_dead_endregno i ++ (TEST_HARD_REG_BIT () (insn && GET_CODE () != CODE_LABEL && GET_CODE () != BARRIER insn prev_nonnote_insn () (PATTERN (), reg_dead_at_p_1 (reg_dead_flag (find_regno_note () (insn == 0 (block 0 block < n_basic_blocks block ++ (insn == basic_block_head[block](block == n_basic_blocks (i reg_dead_regno i < reg_dead_endregno i ++ (basic_block_live_at_start[block][i / REGSET_ELT_BITS] & () (x (x (code (GET_CODE () == MEM (XEXP () (x (regno < FIRST_PSEUDO_REGISTER (regno == STACK_POINTER_REGNUM || regno == HARD_FRAME_POINTER_REGNUM || () || regno == FRAME_POINTER_REGNUM (regno, GET_MODE () (i -- > 0 (newpat_used_regs, regno + i (x (GET_CODE () == SUBREG || GET_CODE () == ZERO_EXTRACT || GET_CODE () == SIGN_EXTRACT || GET_CODE () == STRICT_LOW_PART (testreg, 0 (GET_CODE () == MEM (XEXP () (SET_SRC () (code (i GET_RTX_LENGTH () - 1 i >= 0 i -- (fmt[i] == (XEXP () (fmt[i] == (j 0 j < XVECLEN () j ++ (XVECEXP () (regno, insn (insn, REG_DEAD, regno (note (insn, note (x, from_cuid, to_insn, pnotes (x (code == REG (x (before_dead && INSN_UID () > max_uid_cuid (before_dead (after_dead && INSN_UID () > max_uid_cuid (after_dead (before_dead && after_dead && INSN_CUID () >= from_cuid && () (regno, where_dead (note != 0 && regno < FIRST_PSEUDO_REGISTER && () (XEXP () (deadregno + HARD_REGNO_NREGS () (regno, GET_MODE () (i deadregno i < deadend i ++ (i < regno || i >= ourend (where_dead (EXPR_LIST, REG_DEAD, gen_rtx (), REG_NOTES () (note == 0 && regno < FIRST_PSEUDO_REGISTER && HARD_REGNO_NREGS () > 1 (regno, GET_MODE () (i regno + 1 i < ourend i ++ (gen_rtx (), from_cuid, to_insn, & oldnotes (note != 0 && GET_MODE () == GET_MODE () (note, 1 (EXPR_LIST, REG_DEAD, x, *pnotes (GET_CODE () == SET (x (SET_SRC (), from_cuid, to_insn, pnotes (GET_CODE () == ZERO_EXTRACT || GET_CODE () == STRICT_LOW_PART || () (dest, from_cuid, to_insn, pnotes (GET_CODE () == SUBREG (dest (GET_CODE () == MEM (XEXP (), from_cuid, to_insn, pnotes (GET_CODE () == CLOBBER (code (code (i 0 i < len i ++ (fmt[i] == (j XVECLEN () - 1 j >= 0 j -- (XVECEXP (), from_cuid, to_insn, pnotes (fmt[i] == (XEXP (), from_cuid, to_insn, pnotes (x, body (GET_CODE () == SET (body (GET_CODE () == ZERO_EXTRACT (dest, 0 (GET_CODE () == STRICT_LOW_PART (XEXP () (GET_CODE () == SUBREG (target (GET_CODE () != REG (target (x (tregno >= FIRST_PSEUDO_REGISTER || regno >= FIRST_PSEUDO_REGISTER (tregno, GET_MODE () (regno, GET_MODE () (GET_CODE () == PARALLEL (i XVECLEN () - 1 i >= 0 i -- (reg_bitfield_target_p () (notes, from_insn, i3, i2, elim_i2, elim_i1 (note notes note note next_note (XEXP () && GET_CODE () == REG && REGNO () >= FIRST_PSEUDO_REGISTER (note, 0 (XEXP () (note, 1 (REG_NOTE_KIND () (reg_set_p () (from_insn != i3 ( ! () (reg_referenced_p () && ! () (note, REG_DEAD (from_insn == i3 && () (reg_mentioned_p () (i2 && reg_mentioned_p () (place (GET_CODE () != NOTE (XEXP (), REG_LIBCALL, NULL_RTX (from_insn (tem && place (tem, 0 (GET_CODE () != NOTE (XEXP (), REG_RETVAL, NULL_RTX (from_insn (tem && place (tem, 0 (from_insn && GET_CODE () == CALL_INSN && find_reg_fusage () (reg_referenced_p () (i2 != 0 && next_nonnote_insn () == i3 && reg_referenced_p () (XEXP () == elim_i2 || XEXP () == elim_i1 (place == i3 && i2 != 0 && GET_CODE () == REG && reg_n_refs[REGNO ()] == 2 && reg_referenced_p () (XEXP () (place == 0 (tem prev_nonnote_insn () place == 0 && tem && () tem prev_nonnote_insn () (reg_set_p () (tem (set != 0 && ! side_effects_p () && () (tem (REG_NOTES (), tem, tem, NULL_RTX, NULL_RTX, NULL_RTX (LOG_LINKS () (tem, NOTE (tem (tem (note, REG_UNUSED ( ! find_regno_note () (reg_referenced_p () || () (i2 && INSN_UID () <= max_uid_cuid && INSN_CUID () > INSN_CUID () && from_insn && INSN_CUID () > INSN_CUID () && reg_referenced_p () (place (place (links (REG_NOTE_KIND () == REG_DEAD && place == 0 && tem != 0 (gen_rtx (), tem (basic_block_end[this_basic_block - 1] == tem (place && REG_NOTE_KIND () == REG_DEAD (XEXP () (dead_or_set_p () || reg_bitfield_target_p () (reg_last_death[regno] != place (place && regno < FIRST_PSEUDO_REGISTER && HARD_REGNO_NREGS () > 1 (regno, GET_MODE () (i regno i < endregno i ++ ( ! refers_to_regno_p () && ! find_regno_fusage () (REG, reg_raw_mode[i], i (p place GET_CODE () == INSN && GET_CODE () == USE p PREV_INSN () (rtx_equal_p () (p (gen_rtx (), p (use_insn (EXPR_LIST, REG_DEAD, piece, REG_NOTES () (all_used (i regno i < endregno i ++ (dead_or_set_regno_p () ( ! all_used (i regno i < endregno i ++ (REG, reg_raw_mode[i], i (() && ! dead_or_set_p () && ! reg_bitfield_target_p () (place (EXPR_LIST, REG_DEAD, piece, REG_NOTES () ((place (note, 1 (place (place (() && GET_CODE () == REG (XEXP () (place2 (() && GET_CODE () == REG (XEXP () (place2 (GET_CODE (), REG_NOTE_KIND (), XEXP (), REG_NOTES () (links (link links link link next_link (link, 1 (GET_CODE () == NOTE || () == 0 (set (GET_CODE () == SUBREG || GET_CODE () == ZERO_EXTRACT || GET_CODE () == SIGN_EXTRACT || GET_CODE () == STRICT_LOW_PART (reg, 0 (insn NEXT_INSN () () insn NEXT_INSN () (GET_RTX_CLASS () == && reg_overlap_mentioned_p () (reg_referenced_p () (GET_CODE () == CALL_INSN && find_reg_fusage () (place (link2 LOG_LINKS () link2 link2 XEXP () (XEXP () == XEXP () (link2 == 0 (link, 1 (place (place (added_links_insn == 0 || INSN_CUID () > INSN_CUID () (file (file,, combine_attempts, combine_merges, combine_extras, combine_successes (file (file,, total_attempts, total_merges, total_extras, total_successes, <./cc/combine.c 3968>
11332 																INTVAL: 129
11333 																REGNO: 93
11334 																XEXP: 105
11335 																invariant_p: <>
11336 																GET_MODE_CLASS: 492
11337 																GET_MODE: 139
11338 																INSN_LUID: <>
11339 															init_reg_map: void (), <./cc/unroll.c 1350>
11340 															INTVAL: 129
11341 															start_sequence: void (), <./cc/emit-rtl.c 2919>
11342 															GET_MODE: 139
11343 															GET_MODE_SIZE: 461
11344 															expand_binop: 4815
11345 															copy_rtx: <>
11346 															GEN_INT: <>
11347 															emit_cmp_insn: 3952
11348 															emit_jump_insn: <>
11349 															gen_ble: <>
11350 															gen_bge: <>
11351 															get_last_insn: 1981
11352 															LABEL_NUSES: <>
11353 															gen_beq: <>
11354 															gen_sequence: 4618
11355 															end_sequence: 479
11356 															emit_insn_before: <>
11357 															emit_label_after: <>
11358 															gen_reg_rtx: 523
11359 															copy_loop_body: void (), <./cc/unroll.c 1526>
11360 																gen_label_rtx: rtx (), <./cc/emit-rtl.c 1327>
11361 																CODE_LABEL_NUMBER: <>
11362 																start_sequence: void (), <./cc/emit-rtl.c 2919>
11363 																NEXT_INSN: <>
11364 																GET_CODE: 81
11365 																PATTERN: <>
11366 																SET_DEST: 87
11367 																REGNO: 93
11368 																calculate_giv_inc: rtx (), <./cc/unroll.c 1376>
11369 																	GET_CODE: 81
11370 																	SET_SRC: 484
11371 																	PREV_INSN: <>
11372 																	PATTERN: <>
11373 																	abort: <>
11374 																	delete_insn: <>
11375 																	get_last_insn: 1981
11376 																	XEXP: 105
11377 																	GEN_INT: <>
11378 																	INTVAL: 129
11379 																	REGNO: 93
11380 																INTVAL: 129
11381 																plus_constant: <>
11382 																XEXP: 105
11383 																emit_unrolled_add: void (), <./cc/unroll.c 2050>
11384 																	expand_binop: 4815
11385 																	GET_MODE: 139
11386 																	emit_move_insn: <>
11387 																GEN_INT: <>
11388 																gen_reg_rtx: 523
11389 																GET_MODE: 139
11390 																get_last_insn: 1981
11391 																copy_rtx_and_substitute: <>
11392 																emit_insn: <>
11393 																REG_NOTES: <>
11394 																initial_reg_note_copy: rtx (), <./cc/unroll.c 1483>
11395 																	rtx_alloc: 172
11396 																	GET_CODE: 81
11397 																	PUT_MODE: <>
11398 																	GET_MODE: 139
11399 																	XEXP: 105
11400 																	copy_rtx_and_substitute: <>
11401 																	abort: <>
11402 																	initial_reg_note_copy: 11394
11403 																sets_cc0_p: <>
11404 																try_constants: <>
11405 																emit_jump_insn: <>
11406 																JUMP_LABEL: 3730
11407 																invert_exp: <>
11408 																redirect_exp: <>
11409 																abort: <>
11410 																emit_jump_insn_after: <>
11411 																gen_jump: <>
11412 																emit_barrier_after: <>
11413 																emit_label_after: <>
11414 																LABEL_NUSES: <>
11415 																SET_SRC: 484
11416 																XVECLEN: <>
11417 																XVECEXP: <>
11418 																condjump_p: <>
11419 																simplejump_p: if (), <./cc/cse.c 8510>
11420 																delete_insn: <>
11421 																PREV_INSN: <>
11422 																emit_barrier: rtx (), <./cc/emit-rtl.c 2761>
11423 																emit_call_insn: <>
11424 																CALL_INSN_FUNCTION_USAGE: <>
11425 																emit_label: <>
11426 																NOTE_LINE_NUMBER: 177
11427 																emit_note: 170
11428 																NOTE_SOURCE_FILE: <>
11429 																INSN_UID: <>
11430 																final_reg_note_copy: void (), <./cc/unroll.c 1511>
11431 																	XEXP: 105
11432 																	GET_CODE: 81
11433 																	INSN_UID: <>
11434 																gen_sequence: 4618
11435 																end_sequence: 479
11436 																emit_insn_before: <>
11437 															find_splittable_regs: int (), <./cc/unroll.c 2367>
11438 																biv_total_increment: rtx (), <./cc/unroll.c 2163>
11439 																	back_branch_in_range_p: int (), <./cc/unroll.c 2071>
11440 																		prev_nonnote_insn: 4509
11441 																		GET_CODE: 81
11442 																		PREV_INSN: <>
11443 																		INSN_DELETED_P: <>
11444 																		NEXT_INSN: <>
11445 																		JUMP_LABEL: 3730
11446 																	fold_rtx_mult_add: rtx (), <./cc/unroll.c 2114>
11447 																		GET_MODE: 139
11448 																		abort: <>
11449 																		GET_CODE: 81
11450 																		simplify_binary_operation: <>
11451 																		gen_rtx: <>
11452 																GET_CODE: 81
11453 																INSN_UID: <>
11454 																INSN_LUID: <>
11455 																reg_mentioned_p: else if (), <./cc/loop.c 5796>
11456 																SET_SRC: 484
11457 																final_biv_value: rtx (), <./cc/unroll.c 3020>
11458 																	GET_MODE_CLASS: 492
11459 																	fprintf: <>
11460 																	INSN_UID: <>
11461 																	invariant_p: <>
11462 																	biv_total_increment: 11438
11463 																	gen_reg_rtx: 523
11464 																	NEXT_INSN: <>
11465 																	emit_note_after: rtx (), <./cc/emit-rtl.c 2561>
11466 																	emit_iv_add_mult: <>
11467 																	GEN_INT: <>
11468 																	reg_dead_after_loop: int (), <./cc/unroll.c 2947>
11469 																		INSN_UID: <>
11470 																		LABEL_NEXTREF: <>
11471 																		gen_rtx: <>
11472 																		NEXT_INSN: <>
11473 																		XEXP: 105
11474 																		GET_CODE: 81
11475 																		GET_RTX_CLASS: 141
11476 																		reg_referenced_p: if (), <./cc/reorg.c 2297>
11477 																		PATTERN: <>
11478 																		single_set: 560
11479 																		rtx_equal_p: 143
11480 																		SET_DEST: 87
11481 																		simplejump_p: if (), <./cc/cse.c 8510>
11482 																		JUMP_LABEL: 3730
11483 																single_set: 560
11484 																SET_DEST: 87
11485 																REGNO: 93
11486 																invariant_p: <>
11487 																gen_reg_rtx: 523
11488 																emit_insn_before: <>
11489 																gen_move_insn: 4595
11490 																fprintf: <>
11491 																find_splittable_givs: int (), <./cc/unroll.c 2554>
11492 																	rtx_equal_p: 143
11493 																	back_branch_in_range_p: 11439
11494 																	fold_rtx_mult_add: 11446
11495 																	GET_CODE: 81
11496 																	INSN_UID: <>
11497 																	REGNO: 93
11498 																	find_reg_note: <>
11499 																	XEXP: 105
11500 																	INSN_LUID: <>
11501 																	gen_reg_rtx: 523
11502 																	emit_insn_before: <>
11503 																	gen_move_insn: 4595
11504 																	fprintf: <>
11505 																	emit_iv_add_mult: <>
11506 																	plus_constant: <>
11507 																	INTVAL: 129
11508 																	verify_addresses: int (), <./cc/unroll.c 2526>
11509 																		plus_constant: <>
11510 																		INTVAL: 129
11511 																		validate_change: 142
11512 																	gen_rtx: <>
11513 																	copy_rtx: <>
11514 																	recog_memoized: 538
11515 																	PREV_INSN: <>
11516 																	delete_insn: <>
11517 																	start_sequence: void (), <./cc/emit-rtl.c 2919>
11518 																	force_operand: <>
11519 																	emit_move_insn: <>
11520 																	gen_sequence: 4618
11521 																	end_sequence: 479
11522 															REGNO: 93
11523 															remap_split_bivs: rtx (), <./cc/unroll.c 3457>
11524 																GET_CODE: 81
11525 																REGNO: 93
11526 																GET_RTX_FORMAT: <>
11527 																GET_RTX_LENGTH: <>
11528 																XEXP: 105
11529 																remap_split_bivs: 11523
11530 																XVECLEN: <>
11531 																XVECEXP: <>
11532 															SET_SRC: 484
11533 															gen_rtx: <>
11534 															INSN_DELETED_P: <>
11535 														PREV_INSN: <>
11536 														note_stores: <>
11537 														next_real_insn: 553
11538 														get_condition_for_loop: <>
11539 														XEXP: 105
11540 														valid_initial_value_p: int (), <./cc/loop.c 4120>
11541 															CONSTANT_P: 118
11542 															GET_CODE: 81
11543 															REGNO: 93
11544 															reg_set_between_p: <>
11545 														gen_rtx: <>
11546 														INTVAL: 129
11547 														print_rtl: 10725
11548 														general_induction_var: <>
11549 														find_reg_note: <>
11550 														consec_sets_giv: int (), <./cc/loop.c 5322>
11551 														libcall_benefit: 11156
11552 														record_giv: void (), <./cc/loop.c 4341>
11553 															single_set: 560
11554 															GET_MODE: 139
11555 															SET_DEST: 87
11556 															REGNO: 93
11557 															abort: <>
11558 															INSN_UID: <>
11559 															INSN_LUID: <>
11560 															last_use_this_basic_block: <>
11561 															back_branch_in_range_p: 11439
11562 															fprintf: <>
11563 															GET_CODE: 81
11564 															INTVAL: 129
11565 															print_rtl: 10725
11566 														find_mem_givs: void (), <./cc/loop.c 4158>
11567 															GET_CODE: 81
11568 															general_induction_var: <>
11569 															XEXP: 105
11570 															oballoc: 530
11571 															record_giv: 11552
11572 															GET_MODE: 139
11573 															GET_RTX_FORMAT: <>
11574 															GET_RTX_LENGTH: <>
11575 															find_mem_givs: 11566
11576 															XVECLEN: <>
11577 															XVECEXP: <>
11578 														update_giv_derive: void (), <./cc/loop.c 4693>
11579 															GET_CODE: 81
11580 															simplify_giv_expr: <>
11581 															gen_rtx: <>
11582 														loop_iterations: unsigned HOST_WIDE_INT (), <./cc/unroll.c 3214>
11583 															PREV_INSN: <>
11584 															get_condition_for_loop: <>
11585 															fprintf: <>
11586 															GET_CODE: 81
11587 															XEXP: 105
11588 															REGNO: 93
11589 															abort: <>
11590 															iteration_info: void (), <./cc/unroll.c 2198>
11591 																REGNO: 93
11592 																fprintf: <>
11593 																GET_MODE_BITSIZE: 447
11594 																GET_MODE: 139
11595 																GET_MODE_CLASS: 492
11596 																biv_total_increment: 11438
11597 																fold_rtx_mult_add: 11446
11598 															invariant_p: <>
11599 															GET_RTX_CLASS: 141
11600 															reg_set_p: 4708
11601 															single_set: 560
11602 															SET_DEST: 87
11603 															find_reg_note: <>
11604 															CONSTANT_P: 118
11605 															approx_final_value: rtx (), <./cc/unroll.c 2294>
11606 																plus_constant: <>
11607 																abort: <>
11608 															INTVAL: 129
11609 														check_final_value: void (), <./cc/loop.c 4551>
11610 															REGNO: 93
11611 															final_giv_value: rtx (), <./cc/unroll.c 3095>
11612 																REGNO: 93
11613 																fprintf: <>
11614 																INSN_UID: <>
11615 																biv_total_increment: 11438
11616 																invariant_p: <>
11617 																NEXT_INSN: <>
11618 																gen_reg_rtx: 523
11619 																emit_iv_add_mult: <>
11620 																GEN_INT: <>
11621 																start_sequence: void (), <./cc/emit-rtl.c 2919>
11622 																expand_binop: 4815
11623 																GET_MODE: 139
11624 																gen_sequence: 4618
11625 																end_sequence: 479
11626 																emit_insn_before: <>
11627 																abort: <>
11628 																reg_dead_after_loop: 11468
11629 															last_use_this_basic_block: <>
11630 															NEXT_INSN: <>
11631 															GET_CODE: 81
11632 															reg_mentioned_p: else if (), <./cc/loop.c 5796>
11633 															PATTERN: <>
11634 															SET_DEST: 87
11635 															JUMP_LABEL: 3730
11636 															LABEL_NAME: <>
11637 															INSN_LUID: <>
11638 															fprintf: <>
11639 															INSN_UID: <>
11640 														check_dbra_loop: <>
11641 														reg_mentioned_p: else if (), <./cc/loop.c 5796>
11642 														final_biv_value: 11457
11643 														maybe_eliminate_biv: <>
11644 														combine_givs: <>
11645 														REG_USERVAR_P: <>
11646 														copy_cost: , <./cc/loop.c 5522>
11647 														product_cheap_p: <>
11648 														emit_iv_add_mult: <>
11649 														replace_rtx: <>
11650 														validate_change: 142
11651 														emit_insn_after: <>
11652 														gen_move_insn: 4595
11653 														emit_insn_before: <>
11654 														delete_insn: <>
11655 														replace_regs: <>
11656 														REG_NOTES: <>
11657 														INSN_CODE: <>
11658 												unroll_block_trees: void (), <./cc/stmt.c 5877>
11659 													DECL_INITIAL: 168
11660 													reorder_blocks: tree (), <./cc/function.c 4595>
11661 														BLOCK_SUBBLOCKS: <>
11662 														NEXT_INSN: <>
11663 														GET_CODE: 81
11664 														NOTE_LINE_NUMBER: 177
11665 														NOTE_BLOCK_NUMBER: <>
11666 														TREE_ASM_WRITTEN: else if (), <./cc/dwarfout.c 3566>
11667 														copy_node: 874
11668 														BLOCK_SUPERCONTEXT: <>
11669 														BLOCK_CHAIN: <>
11670 														NOTE_SOURCE_FILE: <>
11671 														blocks_nreverse: tree (), <./cc/function.c 4642>
11672 															BLOCK_CHAIN: <>
11673 													get_insns: rtx (), <./cc/emit-rtl.c 1696>
11674 											regclass_init: void (), <./cc/regclass.c 637>
11675 											regclass: void (), <./cc/regclass.c 648>
11676 												init_recog: 9540
11677 												alloca: <>
11678 												gen_rtx: <>
11679 												TEST_HARD_REG_BIT: 8306
11680 												REGNO: 93
11681 												HARD_REGNO_MODE_OK: <>
11682 												PUT_MODE: <>
11683 												SECONDARY_INPUT_RELOAD_CLASS: <>
11684 												SECONDARY_OUTPUT_RELOAD_CLASS: <>
11685 												auto_inc_dec_reg_p:  (), <./cc/regclass.c 1664>
11686 													memory_address_p: <>
11687 													gen_rtx: <>
11688 												bzero: <>
11689 												NEXT_INSN: <>
11690 												GET_CODE: 81
11691 												NOTE_LINE_NUMBER: 177
11692 												MIN: <>
11693 												PATTERN: <>
11694 												asm_noperands: 542
11695 												decode_asm_operands: <>
11696 												n_occurrences: int (), <./cc/reload.c 1971>
11697 												recog_memoized: 538
11698 												single_set: 560
11699 												insn_extract: <>
11700 												SET_DEST: 87
11701 												SET_SRC: 484
11702 												find_reg_note: <>
11703 												XEXP: 105
11704 												MEMORY_MOVE_COST: <>
11705 												GET_MODE: 139
11706 												record_address_regs: void (), <./cc/regclass.c 1510>
11707 													GET_CODE: 81
11708 													XEXP: 105
11709 													SUBREG_REG: <>
11710 													record_address_regs: 11706
11711 													CONSTANT_P: 118
11712 													REGNO_POINTER_FLAG: <>
11713 													REGNO: 93
11714 													MEMORY_MOVE_COST: <>
11715 													GET_RTX_FORMAT: <>
11716 													GET_RTX_LENGTH: <>
11717 												CONSTANT_P: 118
11718 												rtx_equal_p: 143
11719 												MODES_TIEABLE_P: <>
11720 												prev_real_insn: 4565
11721 												gen_lowpart: <>
11722 												emit_insn_before: <>
11723 												gen_move_insn: 4595
11724 												PREV_INSN: <>
11725 												SUBREG_REG: <>
11726 												record_reg_classes: void (), <./cc/regclass.c 1051>
11727 													GET_CODE: 81
11728 													REGNO: 93
11729 													bzero: <>
11730 													rtx_equal_p: 143
11731 													copy_cost: , <./cc/loop.c 5522>
11732 													find_reg_note: <>
11733 													XEXP: 105
11734 													GET_MODE: 139
11735 													CONST_DOUBLE_OK_FOR_LETTER_P: <>
11736 													CONSTANT_P: 118
11737 													LEGITIMATE_PIC_OPERAND_P: <>
11738 													CONST_OK_FOR_LETTER_P: <>
11739 													INTVAL: 129
11740 													EXTRA_CONSTRAINT: <>
11741 													REG_CLASS_FROM_LETTER: <>
11742 													MEMORY_MOVE_COST: <>
11743 													reg_fits_class_p: int (), <./cc/recog.c 1972>
11744 													MIN: <>
11745 													single_set: 560
11746 													SET_DEST: 87
11747 													SET_SRC: 484
11748 													CLASS_MAX_NREGS: <>
11749 													TEST_HARD_REG_BIT: 8306
11750 													HARD_REGNO_NREGS: <>
11751 												oballoc: 530
11752 												CLASS_MAX_NREGS: <>
11753 												PSEUDO_REGNO_MODE: <>
11754 													retry_global_alloc: void (), <./cc/global.c 1203>
11755 														find_reg: void (), <./cc/global.c 904>
11756 															reg_alternate_class: enum reg_class (), <./cc/regclass.c 625>
11757 															reg_preferred_class: enum reg_class (), <./cc/regclass.c 616>
11758 															PSEUDO_REGNO_MODE: 11753
11759 															COPY_HARD_REG_SET: <>
11760 															IOR_HARD_REG_SET: <>
11761 															IOR_COMPL_HARD_REG_SET: <>
11762 															TEST_HARD_REG_BIT: 8306
11763 															HARD_REGNO_MODE_OK: <>
11764 															HARD_REGNO_NREGS: <>
11765 															AND_COMPL_HARD_REG_SET: <>
11766 															GO_IF_HARD_REG_SUBSET: <>
11767 															REGNO_REG_CLASS: <>
11768 															reg_class_subset_p: if (), <./cc/reload.c 3130>
11769 															CALLER_SAVE_PROFITABLE: <>
11770 															find_reg: 11755
11771 															CLEAR_HARD_REG_SET: <>
11772 															SET_HARD_REG_BIT: <>
11773 															CONFLICTP: <>
11774 														reg_alternate_class: enum reg_class (), <./cc/regclass.c 625>
11775 														REGNO: 93
11776 														mark_home_live: void (), <./cc/reload1.c 2432>
11777 													alter_reg: <>
11778 													fprintf: <>
11779 											stupid_life_analysis: void (), <./cc/stupid.c 114>
11780 												bzero: <>
11781 												alloca: <>
11782 												NEXT_INSN: <>
11783 												INSN_UID: <>
11784 												GET_RTX_CLASS: 141
11785 												GET_CODE: 81
11786 												INSN_SUID: <>
11787 												oballoc: 530
11788 												allocate_for_life_analysis: void (), <./cc/flow.c 1273>
11789 													oballoc: 530
11790 													bzero: <>
11791 													init_regset_vector: void (), <./cc/flow.c 1320>
11792 												PREV_INSN: <>
11793 												SET_HARD_REG_BIT: <>
11794 												stupid_mark_refs: void (), <./cc/stupid.c 412>
11795 													GET_CODE: 81
11796 													SET_DEST: 87
11797 													SUBREG_REG: <>
11798 													REGNO: 93
11799 													HARD_REGNO_NREGS: <>
11800 													GET_MODE: 139
11801 													MARK_LIVE_AFTER: <>
11802 													INSN_SUID: <>
11803 													SET_HARD_REG_BIT: <>
11804 													stupid_mark_refs: 11794
11805 													SET_SRC: 484
11806 													GET_MODE_SIZE: 461
11807 													INTEGRAL_MODE_P: <>
11808 													GET_RTX_FORMAT: <>
11809 													GET_RTX_LENGTH: <>
11810 													XEXP: 105
11811 													XVECLEN: <>
11812 													XVECEXP: <>
11813 												PATTERN: <>
11814 												IOR_HARD_REG_SET: <>
11815 												CALL_INSN_FUNCTION_USAGE: <>
11816 												qsort: <>
11817 												stupid_reg_compare: int (), <./cc/stupid.c 287>
11818 												stupid_find_reg: int (), <./cc/stupid.c 323>
11819 													COPY_HARD_REG_SET: <>
11820 													SET_HARD_REG_BIT: <>
11821 													IOR_HARD_REG_SET: <>
11822 													IOR_COMPL_HARD_REG_SET: <>
11823 													OVERLAPPING_REGNO_P: <>
11824 													TEST_HARD_REG_BIT: 8306
11825 													HARD_REGNO_MODE_OK: <>
11826 													HARD_REGNO_NREGS: <>
11827 													CLEAR_HARD_REG_SET: <>
11828 												reg_preferred_class: enum reg_class (), <./cc/regclass.c 616>
11829 												PSEUDO_REGNO_MODE: 11753
11830 												reg_alternate_class: enum reg_class (), <./cc/regclass.c 625>
11831 												dump_flow_info: <>
11832 											flow_analysis: void (), <./cc/flow.c 316>
11833 												nonlocal_label_rtx_list: rtx (), <./cc/function.c 3035>
11834 													TREE_CHAIN: if (), <./cc/cp/search.c 1454>
11835 													gen_rtx: <>
11836 													label_rtx: 9820
11837 													TREE_VALUE: <>
11838 												CLEAR_HARD_REG_SET: <>
11839 												SET_HARD_REG_BIT: <>
11840 												NEXT_INSN: <>
11841 												GET_CODE: 81
11842 												INSN_UID: <>
11843 												GET_RTX_CLASS: 141
11844 												oballoc: 530
11845 												alloca: <>
11846 												bzero: <>
11847 												find_basic_blocks: void (), <./cc/flow.c 403>
11848 													alloca: <>
11849 													bzero: <>
11850 													NEXT_INSN: <>
11851 													GET_CODE: 81
11852 													NOTE_LINE_NUMBER: 177
11853 													GET_RTX_CLASS: 141
11854 													LABEL_REFS: <>
11855 													LABEL_PRESERVE_P: <>
11856 													REG_NOTES: <>
11857 													XEXP: 105
11858 													REG_NOTE_KIND: switch (), <./cc/sched.c 4292>
11859 													gen_rtx: <>
11860 													BLOCK_NUM: <>
11861 													abort: <>
11862 													LABEL_REF_NONLOCAL_P: <>
11863 													PREV_INSN: <>
11864 													PATTERN: <>
11865 													XVECLEN: <>
11866 													XVECEXP: <>
11867 													SET_DEST: 87
11868 													uses_reg_or_mem: int (), <./cc/flow.c 765>
11869 														GET_CODE: 81
11870 														XEXP: 105
11871 														CONSTANT_POOL_ADDRESS_P: 627
11872 														GET_RTX_FORMAT: <>
11873 														GET_RTX_LENGTH: <>
11874 														uses_reg_or_mem: 11868
11875 														XVECLEN: <>
11876 														XVECEXP: <>
11877 													SET_SRC: 484
11878 													mark_label_ref: void (), <./cc/flow.c 803>
11879 														GET_CODE: 81
11880 														XEXP: 105
11881 														abort: <>
11882 														INSN_UID: <>
11883 														CONTAINING_INSN: <>
11884 														LABEL_REFS: <>
11885 														LABEL_NEXTREF: <>
11886 														BLOCK_NUM: <>
11887 														GET_RTX_FORMAT: <>
11888 														GET_RTX_LENGTH: <>
11889 														mark_label_ref: 11878
11890 														XVECLEN: <>
11891 														XVECEXP: <>
11892 													flow_delete_insn: rtx (), <./cc/flow.c 859>
11893 														NEXT_INSN: <>
11894 														PREV_INSN: <>
11895 													PUT_CODE: <>
11896 													NOTE_SOURCE_FILE: <>
11897 													delete_insn: <>
11898 													simplejump_p: if (), <./cc/cse.c 8510>
11899 													INSN_UID: <>
11900 												life_analysis: void (), <./cc/flow.c 877>
11901 													gcc_obstack_init: 5537
11902 													bzero: <>
11903 													allocate_for_life_analysis: 11788
11904 													alloca: <>
11905 													obstack_alloc: <>
11906 													init_regset_vector: 11791
11907 													NEXT_INSN: <>
11908 													GET_CODE: 81
11909 													INSN_VOLATILE: <>
11910 													PATTERN: <>
11911 													SET_DEST: 87
11912 													SET_SRC: 484
11913 													REGNO: 93
11914 													find_reg_note: <>
11915 													PUT_CODE: <>
11916 													NOTE_LINE_NUMBER: 177
11917 													NOTE_SOURCE_FILE: <>
11918 													XVECLEN: <>
11919 													XVECEXP: <>
11920 													volatile_refs_p: <>
11921 													XEXP: 105
11922 													bcopy: <>
11923 													propagate_block: <>
11924 													LABEL_REFS: <>
11925 													LABEL_NEXTREF: <>
11926 													BLOCK_NUM: <>
11927 													CONTAINING_INSN: <>
11928 													REG_USERVAR_P: <>
11929 													obstack_free: 397
11930 												dump_flow_info: <>
11931 											uninitialized_vars_warning: void (), <./cc/function.c 4221>
11932 												sub: 3159
11933 												BLOCK_VARS: <>
11934 												TREE_CHAIN: if (), <./cc/cp/search.c 1454>
11935 												TREE_CODE: 162
11936 												AGGREGATE_TYPE_P: 1383
11937 												TREE_TYPE: 160
11938 												DECL_RTL: <>
11939 												GET_CODE: 81
11940 												regno_uninitialized: int (), <./cc/flow.c 1868>
11941 												REGNO: 93
11942 												warning_with_decl: <>
11943 												regno_clobbered_at_setjmp: int (), <./cc/flow.c 1884>
11944 												BLOCK_SUBBLOCKS: <>
11945 												uninitialized_vars_warning: 11931
11946 											setjmp_args_warning: void (), <./cc/function.c 4253>
11947 												DECL_ARGUMENTS: <>
11948 												TREE_CHAIN: if (), <./cc/cp/search.c 1454>
11949 												DECL_RTL: <>
11950 												GET_CODE: 81
11951 												regno_clobbered_at_setjmp: int (), <./cc/flow.c 1884>
11952 												REGNO: 93
11953 												warning_with_decl: <>
11954 											combine_instructions: void (), <./cc/combine.c 453>
11955 												alloca: <>
11956 												bzero: <>
11957 												init_reg_last_arrays: void (), <./cc/combine.c 667>
11958 													bzero: <>
11959 												init_recog_no_volatile: 9979
11960 												NEXT_INSN: <>
11961 												INSN_UID: <>
11962 												mode_for_size: <>
11963 												setup_incoming_promotions: void (), <./cc/combine.c 685>
11964 													get_insns: rtx (), <./cc/emit-rtl.c 1696>
11965 													FUNCTION_ARG_REGNO_P: <>
11966 													promoted_input_arg: rtx (), <./cc/function.c 3979>
11967 														DECL_ARGUMENTS: <>
11968 														TREE_CHAIN: if (), <./cc/cp/search.c 1454>
11969 														GET_CODE: 81
11970 														DECL_INCOMING_RTL: 10025
11971 														REGNO: 93
11972 														TYPE_MODE: <>
11973 														DECL_ARG_TYPE: <>
11974 														TREE_TYPE: 160
11975 														TREE_UNSIGNED: 678
11976 														promote_mode: <>
11977 														GET_MODE: 139
11978 														DECL_MODE: <>
11979 													record_value_for_reg: <>
11980 													gen_rtx: <>
11981 													GET_MODE: 139
11982 												GET_RTX_CLASS: 141
11983 												GET_CODE: 81
11984 												note_stores: <>
11985 												PATTERN: <>
11986 												set_nonzero_bits_and_sign_copies: void (), <./cc/combine.c 718>
11987 													GET_CODE: 81
11988 													REGNO: 93
11989 													GET_MODE_BITSIZE: 447
11990 													GET_MODE: 139
11991 													GET_MODE_MASK: <>
11992 													expand_field_assignment: <>
11993 													SET_DEST: 87
11994 													GET_MODE_SIZE: 461
11995 													SUBREG_REG: <>
11996 													SET_SRC: 484
11997 													INTVAL: 129
11998 													GEN_INT: <>
11999 													nonzero_bits: <>
12000 													num_sign_bit_copies: <>
12001 												record_dead_and_set_regs: <>
12002 												LOG_LINKS: <>
12003 												XEXP: 105
12004 												try_combine: <>
12005 												prev_nonnote_insn: 4509
12006 												sets_cc0_p: <>
12007 												reg_mentioned_p: else if (), <./cc/loop.c 5796>
12008 												SET_SRC: 484
12009 											dump_combine_stats: <>
12010 											schedule_insns: void (), <./cc/sched.c 987>
12011 											fppc_insns: <>
12012 											local_alloc: void (), <./cc/local-alloc.c 394>
12013 												update_equiv_regs: void (), <./cc/local-alloc.c 947>
12014 													alloca: <>
12015 													bzero: <>
12016 													init_alias_analysis: 10918
12017 													get_insns: rtx (), <./cc/emit-rtl.c 1696>
12018 													NEXT_INSN: <>
12019 													single_set: 560
12020 													GET_CODE: 81
12021 													NOTE_LINE_NUMBER: 177
12022 													SET_DEST: 87
12023 													SET_SRC: 484
12024 													REGNO: 93
12025 													validate_equiv_mem: int (), <./cc/local-alloc.c 559>
12026 														side_effects_p: <>
12027 														NEXT_INSN: <>
12028 														GET_RTX_CLASS: 141
12029 														GET_CODE: 81
12030 														find_reg_note: <>
12031 														RTX_UNCHANGING_P: It is correct to set, <./cc/stmt.c 3489>
12032 														CONST_CALL_P: <>
12033 														note_stores: <>
12034 														PATTERN: <>
12035 														validate_equiv_mem_from_store: void (), <./cc/local-alloc.c 540>
12036 															GET_CODE: 81
12037 															reg_overlap_mentioned_p: 91
12038 															true_dependence: int (), <./cc/sched.c 817>
12039 																RTX_UNCHANGING_P: It is correct to set, <./cc/stmt.c 3489>
12040 																MEM_VOLATILE_P: <>
12041 																memrefs_conflict_p: int (), <./cc/sched.c 614>
12042 																	GET_CODE: 81
12043 																	XEXP: 105
12044 																	canon_rtx: rtx (), <./cc/sched.c 371>
12045 																		GET_CODE: 81
12046 																		REGNO: 93
12047 																		canon_rtx: 12044
12048 																		XEXP: 105
12049 																		plus_constant_for_output: <>
12050 																		INTVAL: 129
12051 																		gen_rtx: <>
12052 																		GET_MODE: 139
12053 																	rtx_equal_for_memref_p: int (), <./cc/sched.c 447>
12054 																		canon_rtx: 12044
12055 																		GET_CODE: 81
12056 																		GET_MODE: 139
12057 																		REGNO: 93
12058 																		XEXP: 105
12059 																		XSTR: <>
12060 																		GET_RTX_CLASS: 141
12061 																		rtx_equal_for_memref_p: 12053
12062 																		GET_RTX_FORMAT: <>
12063 																		GET_RTX_LENGTH: <>
12064 																		XWINT: <>
12065 																		XINT: <>
12066 																		XVECLEN: <>
12067 																		XVECEXP: <>
12068 																		strcmp: 157
12069 																		abort: <>
12070 																	CONSTANT_P: 118
12071 																	INTVAL: 129
12072 																	memrefs_conflict_p: 12041
12073 																	find_symbolic_term: rtx (), <./cc/sched.c 561>
12074 																		GET_CODE: 81
12075 																		GET_RTX_CLASS: 141
12076 																		GET_RTX_FORMAT: <>
12077 																		GET_RTX_LENGTH: <>
12078 																		find_symbolic_term: 12073
12079 																		XEXP: 105
12080 																SIZE_FOR_MODE: <>
12081 																XEXP: 105
12082 																MEM_IN_STRUCT_P: <>
12083 																rtx_addr_varies_p: <>
12084 																GET_MODE: 139
12085 														REG_NOTES: <>
12086 														XEXP: 105
12087 														REG_NOTE_KIND: switch (), <./cc/sched.c 4292>
12088 														reg_overlap_mentioned_p: 91
12089 													memref_used_between_p: int (), <./cc/local-alloc.c 672>
12090 														NEXT_INSN: <>
12091 														GET_RTX_CLASS: 141
12092 														GET_CODE: 81
12093 														memref_referenced_p: int (), <./cc/local-alloc.c 609>
12094 															GET_CODE: 81
12095 															true_dependence: 12038
12096 															SET_DEST: 87
12097 															memref_referenced_p: 12093
12098 															XEXP: 105
12099 															SET_SRC: 484
12100 															GET_RTX_FORMAT: <>
12101 															GET_RTX_LENGTH: <>
12102 															XVECLEN: <>
12103 															XVECEXP: <>
12104 														PATTERN: <>
12105 													REG_NOTES: <>
12106 													gen_rtx: <>
12107 													find_reg_note: <>
12108 													optimize_reg_copy_1: void (), <./cc/local-alloc.c 700>
12109 														REGNO: 93
12110 														NEXT_INSN: <>
12111 														GET_CODE: 81
12112 														NOTE_LINE_NUMBER: 177
12113 														GET_RTX_CLASS: 141
12114 														reg_set_p: 4708
12115 														PATTERN: <>
12116 														reg_overlap_mentioned_p: 91
12117 														XEXP: 105
12118 														find_regno_note: <>
12119 														GET_MODE: 139
12120 														next_real_insn: 553
12121 														reg_mentioned_p: else if (), <./cc/loop.c 5796>
12122 														validate_replace_rtx: 10777
12123 														remove_note: <>
12124 														REG_NOTES: <>
12125 														dead_or_set_p: <>
12126 													optimize_reg_copy_2: void (), <./cc/local-alloc.c 874>
12127 														REGNO: 93
12128 														NEXT_INSN: <>
12129 														GET_CODE: 81
12130 														NOTE_LINE_NUMBER: 177
12131 														GET_RTX_CLASS: 141
12132 														single_set: 560
12133 														SET_SRC: 484
12134 														SET_DEST: 87
12135 														find_reg_note: <>
12136 														reg_mentioned_p: else if (), <./cc/loop.c 5796>
12137 														PATTERN: <>
12138 														replace_rtx: <>
12139 														remove_note: <>
12140 														reg_set_p: 4708
12141 													CONSTANT_P: 118
12142 													XEXP: 105
12143 													PUT_MODE: <>
12144 													rtx_equal_p: 143
12145 													next_active_insn: 3790
12146 													REG_NOTE_KIND: switch (), <./cc/sched.c 4292>
12147 													reg_mentioned_p: else if (), <./cc/loop.c 5796>
12148 													PATTERN: <>
12149 													validate_replace_rtx: 10777
12150 													remove_death: <>
12151 													PUT_CODE: <>
12152 													NOTE_SOURCE_FILE: <>
12153 												xmalloc: 416
12154 												bzero: <>
12155 												alloca: <>
12156 												oballoc: 530
12157 												reg_alternate_class: enum reg_class (), <./cc/regclass.c 625>
12158 												CLASS_LIKELY_SPILLED_P: <>
12159 												reg_preferred_class: enum reg_class (), <./cc/regclass.c 616>
12160 												CLEAR_HARD_REG_SET: <>
12161 												CLEAR: <>
12162 												block_alloc: void (), <./cc/local-alloc.c 1123>
12163 													get_max_uid: 10902
12164 													GET_CODE: 81
12165 													abort: <>
12166 													PREV_INSN: <>
12167 													alloca: <>
12168 													bzero: <>
12169 													COPY_HARD_REG_SET: <>
12170 													PATTERN: <>
12171 													GET_RTX_CLASS: 141
12172 													recog_memoized: 538
12173 													insn_extract: <>
12174 													rtx_equal_p: 143
12175 													SET_DEST: 87
12176 													requires_inout: int (), <./cc/local-alloc.c 2321>
12177 													XEXP: 105
12178 													SET_SRC: 484
12179 													combine_regs: int (), <./cc/local-alloc.c 1722>
12180 														GET_CODE: 81
12181 														GET_MODE_SIZE: 461
12182 														GET_MODE: 139
12183 														SUBREG_REG: <>
12184 														SUBREG_WORD: <>
12185 														REGNO: 93
12186 														REG_SIZE: <>
12187 														find_reg_note: <>
12188 														MODES_TIEABLE_P: <>
12189 														reg_is_born: <>
12190 														TEST_HARD_REG_BIT: 8306
12191 														SET_HARD_REG_BIT: <>
12192 														find_regno_note: <>
12193 														reg_meets_class_p: int (), <./cc/local-alloc.c 1893>
12194 															reg_preferred_class: enum reg_class (), <./cc/regclass.c 616>
12195 															reg_class_subset_p: if (), <./cc/reload.c 3130>
12196 														update_qty_class: void (), <./cc/local-alloc.c 1928>
12197 													find_reg_note: <>
12198 													single_set: 560
12199 													no_conflict_p: <>
12200 													GET_RTX_FORMAT: <>
12201 													REGNO: 93
12202 													SUBREG_REG: <>
12203 													REG_NOTES: <>
12204 													REG_NOTE_KIND: switch (), <./cc/sched.c 4292>
12205 													wipe_dead_reg: <>
12206 													note_stores: <>
12207 													alloc_qty_for_scratch: void (), <./cc/local-alloc.c 306>
12208 														constrain_operands: 618
12209 														REG_CLASS_FROM_LETTER: <>
12210 														GET_MODE_SIZE: 461
12211 														GET_MODE: 139
12212 													IOR_HARD_REG_SET: <>
12213 													NEXT_INSN: <>
12214 													qty_sugg_compare: int (), <./cc/local-alloc.c 1633>
12215 														floor_log2: <>
12216 													EXCHANGE: <>
12217 													qsort: <>
12218 													qty_sugg_compare_1: int (), <./cc/local-alloc.c 1662>
12219 														floor_log2: <>
12220 													find_free_reg: <>
12221 													qty_compare: int (), <./cc/local-alloc.c 1579>
12222 														floor_log2: <>
12223 													qty_compare_1: int (), <./cc/local-alloc.c 1598>
12224 														floor_log2: <>
12225 													PUT_CODE: <>
12226 											dump_flow_info: <>
12227 											dump_local_alloc: <>
12228 											global_alloc: int (), <./cc/global.c 277>
12229 												CLEAR_HARD_REG_SET: <>
12230 												OVERLAPPING_REGNO_P: <>
12231 												SET_HARD_REG_BIT: <>
12232 												CAN_ELIMINATE: <>
12233 												only_leaf_regs_used: int (), <./cc/final.c 3072>
12234 												leaf_function_p: int (), <./cc/final.c 3026>
12235 													get_insns: rtx (), <./cc/emit-rtl.c 1696>
12236 													NEXT_INSN: <>
12237 													GET_CODE: 81
12238 													PATTERN: <>
12239 													XVECEXP: <>
12240 													XEXP: 105
12241 												alloca: <>
12242 												bzero: <>
12243 												XEXP: 105
12244 												REGNO: 93
12245 												abort: <>
12246 												PSEUDO_REGNO_SIZE: <>
12247 												HARD_REGNO_NREGS: <>
12248 												PSEUDO_REGNO_MODE: 11753
12249 												GET_MODE: 139
12250 												global_conflicts: void (), <./cc/global.c 614>
12251 													alloca: <>
12252 													bzero: <>
12253 													COPY_HARD_REG_SET: <>
12254 													SET_ALLOCNO_LIVE: <>
12255 													mark_reg_live_nc: <>
12256 													PSEUDO_REGNO_MODE: 11753
12257 													record_conflicts: <>
12258 													GET_CODE: 81
12259 													REG_NOTES: <>
12260 													XEXP: 105
12261 													REG_NOTE_KIND: switch (), <./cc/sched.c 4292>
12262 													REGNO: 93
12263 													SET_DEST: 87
12264 													PATTERN: <>
12265 													note_stores: <>
12266 													mark_reg_clobber: <>
12267 													mark_reg_death: <>
12268 													mark_reg_store: <>
12269 													single_set: 560
12270 													XVECLEN: <>
12271 													XVECEXP: <>
12272 													rtx_equal_p: 143
12273 													reg_overlap_mentioned_p: 91
12274 													mark_reg_conflicts: <>
12275 													find_regno_note: <>
12276 													NEXT_INSN: <>
12277 												AND_COMPL_HARD_REG_SET: <>
12278 												expand_preferences: void (), <./cc/global.c 781>
12279 													get_insns: rtx (), <./cc/emit-rtl.c 1696>
12280 													NEXT_INSN: <>
12281 													GET_RTX_CLASS: 141
12282 													GET_CODE: 81
12283 													single_set: 560
12284 													SET_DEST: 87
12285 													REGNO: 93
12286 													REG_NOTES: <>
12287 													XEXP: 105
12288 													REG_NOTE_KIND: switch (), <./cc/sched.c 4292>
12289 													CONFLICTP: <>
12290 													SET_SRC: 484
12291 													IOR_HARD_REG_SET: <>
12292 												qsort: <>
12293 												allocno_compare: int (), <./cc/global.c 587>
12294 													floor_log2: <>
12295 												prune_preferences: void (), <./cc/global.c 834>
12296 													COPY_HARD_REG_SET: <>
12297 													IOR_HARD_REG_SET: <>
12298 													IOR_COMPL_HARD_REG_SET: <>
12299 													reg_preferred_class: enum reg_class (), <./cc/regclass.c 616>
12300 													AND_COMPL_HARD_REG_SET: <>
12301 													CLEAR_HARD_REG_SET: <>
12302 													CONFLICTP: <>
12303 												dump_conflicts: <>
12304 												find_reg: 11755
12305 												HARD_CONST: <>
12306 												reg_alternate_class: enum reg_class (), <./cc/regclass.c 625>
12307 												reload: if the pseudo appears and its mem needs a, <./cc/reload.c 4075>
12308 													init_recog: 9540
12309 													get_max_uid: 10902
12310 													clear_secondary_mem: void (), <./cc/reload.c 685>
12311 														bzero: <>
12312 													bcopy: <>
12313 													bzero: <>
12314 													init_save_areas: void (), <./cc/caller-save.c 214>
12315 													mark_home_live: void (), <./cc/reload1.c 2432>
12316 													mark_scratch_live: <>
12317 													emit_note: 170
12318 													alloca: <>
12319 													CLEAR_HARD_REG_SET: <>
12320 													NEXT_INSN: <>
12321 													single_set: 560
12322 													GET_CODE: 81
12323 													SET_DEST: 87
12324 													find_reg_note: <>
12325 													CONSTANT_P: 118
12326 													XEXP: 105
12327 													LEGITIMATE_PIC_OPERAND_P: <>
12328 													REGNO: 93
12329 													LEGITIMATE_CONSTANT_P: <>
12330 														force_const_mem: <>
12331 														GET_MODE: 139
12332 														gen_rtx: <>
12333 														find_reloads_address: <>
12334 													force_const_mem: <>
12335 													GET_MODE: 139
12336 													rtx_equal_p: 143
12337 													SET_SRC: 484
12338 													GET_RTX_CLASS: 141
12339 													scan_paradoxical_subregs: <>
12340 													PATTERN: <>
12341 													CAN_ELIMINATE: <>
12342 													gen_rtx: <>
12343 													max_label_num: 11315
12344 													get_first_label_num: int (), <./cc/emit-rtl.c 550>
12345 													alter_reg: <>
12346 													assign_stack_local: 5798
12347 													note_stores: <>
12348 													mark_not_eliminable: void (), <./cc/reload1.c 3410>
12349 														GET_CODE: 81
12350 														SUBREG_REG: <>
12351 														SET_SRC: 484
12352 														XEXP: 105
12353 													order_regs_for_reload: void (), <./cc/reload1.c 3612>
12354 													COPY_HARD_REG_SET: <>
12355 													spill_hard_reg: <>
12356 													get_frame_size: int (), <./cc/function.c 650>
12357 													INITIAL_ELIMINATION_OFFSET: <>
12358 													INITIAL_FRAME_POINTER_OFFSET: <>
12359 													abort: <>
12360 													set_label_offsets: <>
12361 													eliminate_regs: 111
12362 													strict_memory_address_p: 625
12363 													REG_NOTES: <>
12364 													INSN_CODE: <>
12365 													eliminate_regs_in_insn: int (), <./cc/reload1.c 3177>
12366 														PATTERN: <>
12367 														single_set: 560
12368 														push_obstacks: 392
12369 														GET_CODE: 81
12370 														SET_DEST: 87
12371 														REGNO: 93
12372 														SET_SRC: 484
12373 														XEXP: 105
12374 														INTVAL: 129
12375 														plus_constant: <>
12376 														validate_change: 142
12377 														apply_change_group: 533
12378 														done: 61
12379 														delete_dead_insn: void (), <./cc/reload1.c 2287>
12380 															prev_real_insn: 4565
12381 															GET_CODE: 81
12382 															PATTERN: <>
12383 															SET_DEST: 87
12384 															reg_mentioned_p: else if (), <./cc/loop.c 5796>
12385 															find_regno_note: <>
12386 															REGNO: 93
12387 															delete_dead_insn: 12379
12388 															PUT_CODE: <>
12389 															NOTE_LINE_NUMBER: 177
12390 															NOTE_SOURCE_FILE: <>
12391 														gen_rtx: <>
12392 														INSN_CODE: <>
12393 														eliminate_regs: 111
12394 														asm_noperands: 542
12395 														copy_rtx: <>
12396 														MAX: <>
12397 														MIN: <>
12398 														REG_NOTES: <>
12399 														pop_obstacks: 396
12400 													XVECEXP: <>
12401 													reg_referenced_p: if (), <./cc/reorg.c 2297>
12402 													find_reloads: <>
12403 													PUT_MODE: <>
12404 													obstack_free: 397
12405 													GET_MODE_SIZE: 461
12406 													CLASS_MAX_NREGS: <>
12407 													reloads_conflict: int (), <./cc/reload1.c 4621>
12408 														abort: <>
12409 													reg_classes_intersect_p: <>
12410 													modes_equiv_for_class_p: int (), <./cc/reload1.c 2171>
12411 														TEST_HARD_REG_BIT: 8306
12412 														HARD_REGNO_MODE_OK: <>
12413 													fatal_insn: void (), <./cc/toplev.c 1103>
12414 														error: 52
12415 														debug_rtx: <>
12416 														fflush: <>
12417 														abort: <>
12418 													MAX: <>
12419 													HARD_REGNO_NREGS: <>
12420 													TEST_HARD_REG_BIT: 8306
12421 													fprintf: <>
12422 													INSN_UID: <>
12423 													setup_save_areas: int (), <./cc/caller-save.c 249>
12424 														CLEAR_HARD_REG_SET: <>
12425 														HARD_REGNO_NREGS: <>
12426 														GET_MODE: 139
12427 														SET_HARD_REG_BIT: <>
12428 														TEST_HARD_REG_BIT: 8306
12429 														assign_stack_local: 5798
12430 														GET_MODE_SIZE: 461
12431 														gen_rtx: <>
12432 														XEXP: 105
12433 														adj_offsettable_operand: <>
12434 														strict_memory_address_p: 625
12435 														eliminate_regs: 111
12436 													CLEAR_HARD_REG_BIT: <>
12437 													count_possible_groups: void (), <./cc/reload1.c 2097>
12438 														CLEAR_HARD_REG_SET: <>
12439 														TEST_HARD_REG_BIT: 8306
12440 														SET_HARD_REG_BIT: <>
12441 														HARD_REGNO_MODE_OK: <>
12442 													HARD_REGNO_MODE_OK: <>
12443 													SET_HARD_REG_BIT: <>
12444 													spill_failure: void (), <./cc/reload1.c 2190>
12445 														asm_noperands: 542
12446 														PATTERN: <>
12447 														error_for_asm: <>
12448 														fatal_insn: 12413
12449 													new_spill_reg: int (), <./cc/reload1.c 2209>
12450 														abort: <>
12451 														TEST_HARD_REG_BIT: 8306
12452 														fatal: 49
12453 														fprintf: <>
12454 														SET_HARD_REG_BIT: <>
12455 														spill_hard_reg: <>
12456 													possible_group_p: int (), <./cc/reload1.c 2036>
12457 														TEST_HARD_REG_BIT: 8306
12458 													asm_noperands: 542
12459 													mark_elimination: void (), <./cc/global.c 1627>
12460 													save_call_clobbered_regs: void (), <./cc/caller-save.c 349>
12461 														PREV_INSN: <>
12462 														COPY_HARD_REG_SET: <>
12463 														CLEAR_HARD_REG_SET: <>
12464 														HARD_REGNO_NREGS: <>
12465 														PSEUDO_REGNO_MODE: 11753
12466 														SET_HARD_REG_BIT: <>
12467 														NEXT_INSN: <>
12468 														GET_CODE: 81
12469 														GET_RTX_CLASS: 141
12470 														restore_referenced_regs: void (), <./cc/caller-save.c 573>
12471 															GET_CODE: 81
12472 															REGNO: 93
12473 															restore_referenced_regs: 12470
12474 															XEXP: 105
12475 															HARD_REGNO_NREGS: <>
12476 															GET_MODE: 139
12477 															MIN: <>
12478 															TEST_HARD_REG_BIT: 8306
12479 															insert_save_restore: int (), <./cc/caller-save.c 646>
12480 																abort: <>
12481 																GET_CODE: 81
12482 																reg_referenced_p: if (), <./cc/reorg.c 2297>
12483 																PATTERN: <>
12484 																prev_nonnote_insn: 4509
12485 																TEST_HARD_REG_BIT: 8306
12486 																gen_rtx: <>
12487 																GET_MODE: 139
12488 																SET_HARD_REG_BIT: <>
12489 																CLEAR_HARD_REG_BIT: <>
12490 																emit_insn_before: <>
12491 																PUT_MODE: <>
12492 																INSN_CODE: <>
12493 															GET_RTX_FORMAT: <>
12494 															GET_RTX_LENGTH: <>
12495 															XVECLEN: <>
12496 															XVECEXP: <>
12497 														PATTERN: <>
12498 														REG_NOTES: <>
12499 														XEXP: 105
12500 														REG_NOTE_KIND: switch (), <./cc/sched.c 4292>
12501 														clear_reg_live: void (), <./cc/caller-save.c 549>
12502 															GET_CODE: 81
12503 															REGNO: 93
12504 															HARD_REGNO_NREGS: <>
12505 															GET_MODE: 139
12506 															CLEAR_HARD_REG_BIT: <>
12507 														note_stores: <>
12508 														set_reg_live: void (), <./cc/caller-save.c 517>
12509 															GET_MODE: 139
12510 															GET_CODE: 81
12511 															SUBREG_WORD: <>
12512 															SUBREG_REG: <>
12513 															REGNO: 93
12514 															HARD_REGNO_NREGS: <>
12515 															SET_HARD_REG_BIT: <>
12516 															CLEAR_HARD_REG_BIT: <>
12517 														TEST_HARD_REG_BIT: 8306
12518 														insert_save_restore: 12479
12519 														IOR_HARD_REG_SET: <>
12520 													reg_set_p: 4708
12521 													delete_dead_insn: 12379
12522 													PUT_CODE: <>
12523 													NOTE_SOURCE_FILE: <>
12524 													NOTE_LINE_NUMBER: 177
12525 													reload_as_needed: <>
12526 													MEM_IN_STRUCT_P: <>
12527 													REG_USERVAR_P: <>
12528 													REG_NOTE_KIND: switch (), <./cc/sched.c 4292>
12529 													remove_note: <>
12530 													free: <>
12531 												get_insns: rtx (), <./cc/emit-rtl.c 1696>
12532 											reload: 12307
12533 											dump_global_regs: <>
12534 											thread_prologue_and_epilogue_insns: void (), <./cc/function.c 5587>
12535 												emit_note_after: rtx (), <./cc/emit-rtl.c 2561>
12536 												gen_prologue: <>
12537 												emit_insn_after: <>
12538 												GET_CODE: 81
12539 												NEXT_INSN: <>
12540 												record_insns: int * (), <./cc/function.c 5532>
12541 													GET_CODE: 81
12542 													XVECLEN: <>
12543 													oballoc: 530
12544 													INSN_UID: <>
12545 													XVECEXP: <>
12546 												get_last_insn: 1981
12547 												prev_nonnote_insn: 4509
12548 												PATTERN: <>
12549 												PREV_INSN: <>
12550 												emit_barrier_after: <>
12551 												gen_epilogue: <>
12552 												emit_jump_insn_after: <>
12553 											only_leaf_regs_used: 12233
12554 											leaf_function_p: 12234
12555 											MACHINE_DEPENDENT_REORG: <>
12556 											dbr_schedule: void (), <./cc/reorg.c 4178>
12557 												final: int, <./cc/flow.c 2341>
12558 													NEXT_INSN: <>
12559 													GET_CODE: 81
12560 													NOTE_LINE_NUMBER: 177
12561 													RTX_INTEGRATED_P: <>
12562 													strcmp: 157
12563 													NOTE_SOURCE_FILE: <>
12564 													oballoc: 530
12565 													bzero: <>
12566 													init_recog: 9540
12567 													final_scan_insn: rtx (), <./cc/final.c 1273>
12568 														INSN_DELETED_P: <>
12569 														NEXT_INSN: <>
12570 														GET_CODE: 81
12571 														NOTE_LINE_NUMBER: 177
12572 														next_nonnote_insn: 4490
12573 														ASM_OUTPUT_LOOP_ALIGN: <>
12574 														FUNCTION_END_PROLOGUE: <>
12575 														profile_after_prologue: void (), <./cc/final.c 958>
12576 															FUNCTION_BLOCK_PROFILER: <>
12577 															profile_function: void (), <./cc/final.c 975>
12578 																MIN: <>
12579 																data_section: 9909
12580 																ASM_OUTPUT_ALIGN: <>
12581 																floor_log2: <>
12582 																ASM_OUTPUT_INTERNAL_LABEL: <>
12583 																assemble_integer: int (), <./cc/varasm.c 1762>
12584 																	ASM_OUTPUT_CHAR: <>
12585 																	ASM_OUTPUT_SHORT: <>
12586 																	ASM_OUTPUT_INT: <>
12587 																	ASM_OUTPUT_DOUBLE_INT: <>
12588 																	ASM_OUTPUT_QUADRUPLE_INT: <>
12589 																	GET_CODE: 81
12590 																	ASM_OUTPUT_BYTE: <>
12591 																	INTVAL: 129
12592 																	mode_for_size: <>
12593 																	operand_subword: <>
12594 																	assemble_integer: 12583
12595 																	abort: <>
12596 																text_section: 9915
12597 																ASM_OUTPUT_REG_PUSH: <>
12598 																FUNCTION_PROFILER: <>
12599 																ASM_OUTPUT_REG_POP: <>
12600 														FUNCTION_BEGIN_EPILOGUE: <>
12601 														sdbout_begin_function: void (), <./cc/sdbout.c 1496>
12602 															PUT_SDB_FUNCTION_START: <>
12603 															sdbout_parms: <>
12604 															DECL_ARGUMENTS: <>
12605 															sdbout_reg_parms: <>
12606 														dwarfout_begin_function: void (), <./cc/dwarfout.c 4982>
12607 														fprintf: <>
12608 														xrealloc: 420
12609 														sdbout_begin_block: <>
12610 														xcoffout_begin_block: <>
12611 														ASM_OUTPUT_INTERNAL_LABEL: <>
12612 														dwarfout_begin_block: <>
12613 														xcoffout_end_block: <>
12614 														sdbout_end_block: <>
12615 														dwarfout_end_block: <>
12616 														dwarfout_label: <>
12617 														output_source_line: void (), <./cc/final.c 2052>
12618 															NOTE_SOURCE_FILE: <>
12619 															add_bb_string: int (), <./cc/final.c 1140>
12620 																strlen: <>
12621 																permalloc: 2873
12622 																bcopy: <>
12623 															NOTE_LINE_NUMBER: 177
12624 															MAX: <>
12625 															strcmp: 157
12626 															ASM_OUTPUT_SOURCE_LINE: <>
12627 															fprintf: <>
12628 															dbxout_source_line: <>
12629 															xcoffout_source_line: void (), <./cc/xcoffout.c 358>
12630 																xcoffout_source_file: void (), <./cc/xcoffout.c 324>
12631 																	strcmp: 157
12632 																	fprintf: <>
12633 																	output_quoted_string: void (), <./cc/toplev.c 2146>
12634 																		putc: <>
12635 																RTX_INTEGRATED_P: <>
12636 																ASM_OUTPUT_SOURCE_LINE: <>
12637 																NOTE_LINE_NUMBER: 177
12638 															dwarfout_line: <>
12639 														ASM_OUTPUT_ALIGN_CODE: <>
12640 														LABEL_NAME: <>
12641 														sdbout_label: <>
12642 														PATTERN: <>
12643 														readonly_data_section: 9913
12644 														ASM_OUTPUT_ALIGN: <>
12645 														exact_log2:  () >= 0 (nzb (true_code == EQ && true_val == const0_rtx && () (reg_mentioned_p () (known_cond (), pc_rtx, pc_rtx, 0, 0 (reg_mentioned_p () (known_cond (), pc_rtx, pc_rtx, 0, 0 (XEXP (), swapped false true (XEXP (), swapped true false (x, 1 (x, 2 (cond (comparison_p && reversible_comparison_p () && () (true_code (XEXP (), gen_binary () (XEXP (), false (XEXP (), true (x, 0 (rtx_equal_p () && ! side_effects_p () (GET_MODE_CLASS () == MODE_INT && GET_CODE () == NEG && rtx_equal_p () && comparison_p && rtx_equal_p () && ! side_effects_p () (true_code (ABS, mode, mode, true (NEG, mode, mode, gen_unary () (() && comparison_p && rtx_equal_p () && rtx_equal_p () && ! side_effects_p () (true_code (SMAX, mode, true, false (SMIN, mode, true, false (UMAX, mode, true, false (UMIN, mode, true, false (comparison_p && mode != VOIDmode && ! side_effects_p () (true, SET (false, SET (cond, 0 (cond, 1 (() && rtx_equal_p () (t, 1 (t (() && rtx_equal_p () (t, 0 (t (GET_CODE () == SIGN_EXTEND && () && GET_CODE () == SUBREG && subreg_lowpart_p () && rtx_equal_p () && () (XEXP (), 1 (XEXP () (XEXP () (GET_CODE () == SIGN_EXTEND && () && GET_CODE () == SUBREG && subreg_lowpart_p () && rtx_equal_p () && () (XEXP (), 0 (XEXP () (XEXP () (GET_CODE () == ZERO_EXTEND && () && GET_CODE () == SUBREG && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT && subreg_lowpart_p () && rtx_equal_p () && () (XEXP (), 1 (XEXP () (XEXP () (GET_CODE () == ZERO_EXTEND && () && GET_CODE () == SUBREG && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT && subreg_lowpart_p () && rtx_equal_p () && () (XEXP (), 0 (XEXP () (XEXP () (z (gen_binary (), pc_rtx, pc_rtx, 0, 0 (MULT, m, temp, gen_binary () (temp, pc_rtx, pc_rtx, 0, 0 (op, m, gen_lowpart_for_combine (), temp (extend_op != NIL (extend_op, mode, m, temp (true_code == NE && XEXP () == const0_rtx && false == const0_rtx && GET_CODE () == CONST_INT && () (NULL_RTX, ASHIFT, mode, gen_lowpart_for_combine (), i (x (x (x (src (src (dest (GET_CODE () == PC && GET_CODE () == RETURN (GET_MODE_CLASS () == MODE_INT (src, mode, GET_MODE_MASK (), NULL_RTX, 0 (() && () != 0 && () && GET_RTX_CLASS () == && rtx_equal_p () (*cc_use (dest (GET_CODE () == COMPARE (src, 0 (src, 1 (old_code, & op0, & op1 (new_code, op0, op1 (compare_mode != GET_MODE () (dest (REG, compare_mode, regno (regno < FIRST_PSEUDO_REGISTER || () (regno >= FIRST_PSEUDO_REGISTER (regno_reg_rtx[regno], new_dest (SET_DEST (), new_dest (XEXP (), new_dest (new_code != old_code (*cc_use, gen_rtx_combine () (() && ! other_changed && op1 == const0_rtx && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT && exact_log2 () >= 0 (other_insn (() (*cc_use, old_code (XOR, GET_MODE (), op0, GEN_INT () (other_changed (op1 == const0_rtx && dest == cc0_rtx (SET_SRC (), op0 (GET_CODE () != COMPARE || GET_MODE () != compare_mode (SET_SRC (), gen_rtx_combine () (x (XEXP (), op0 (XEXP (), op1 (src, SET (SET_SRC (), src (GET_CODE () == SUBREG && subreg_lowpart_p () && GET_RTX_CLASS () != && () && () && ! () && () (SET_DEST (), gen_lowpart_for_combine () (SET_SRC (), SUBREG_REG () (x (x (GET_CODE () == SUBREG && subreg_lowpart_p () && LOAD_EXTEND_OP () != NIL && SUBREG_WORD () == 0 && () && GET_CODE () == MEM (SET_SRC (), gen_rtx_combine () (x (GET_CODE () != PC && GET_CODE () == IF_THEN_ELSE && GET_MODE_CLASS () == MODE_INT && () && XEXP () == const0_rtx && GET_MODE () == GET_MODE () && ! can_conditionally_move_p () && () && ! side_effects_p () (GET_CODE () == NE XEXP () XEXP () (GET_CODE () == NE XEXP () XEXP () (GET_CODE () == IOR && rtx_equal_p () (true, 1 (GET_CODE () == IOR && rtx_equal_p () (true, 0 (GET_CODE () == IOR && rtx_equal_p () (false, 1 (GET_CODE () == IOR && rtx_equal_p () (false, 0 (AND, GET_MODE (), XEXP (), true (AND, GET_MODE (), gen_unary (), false (SET_SRC (), gen_binary () (x (GET_CODE () == CLOBBER && XEXP () == const0_rtx (GET_CODE () == CLOBBER && XEXP () == const0_rtx (x (x, last (x (x, 0 (x, 1 (GET_CODE () (GET_CODE () == XOR && rtx_equal_p () && ! side_effects_p () (AND, mode, gen_unary (), op1 (GET_CODE () == XOR && rtx_equal_p () && ! side_effects_p () (AND, mode, gen_unary (), op1 (GET_CODE () == NOT && GET_CODE () == XOR && rtx_equal_p () && ! side_effects_p () (AND, mode, XEXP (), op1 (GET_CODE () == NOT && GET_CODE () == XOR && rtx_equal_p () && ! side_effects_p () (AND, mode, XEXP (), op1 (GET_CODE () == CONST_INT (x, mode, op0, INTVAL () (last && GET_CODE () == IOR && GET_CODE () == AND && GET_CODE () == CONST_INT && GET_CODE () == CONST_INT (IOR, mode, gen_binary (), op1 (GET_CODE () != AND (GET_RTX_CLASS () == || GET_RTX_CLASS () == (x, 0 (x, 1 (GET_CODE () == IOR && () && ! side_effects_p () && ! side_effects_p () (GET_CODE () == IOR || GET_CODE () == XOR (gen_binary () (GET_CODE () != AND (GET_CODE () == IOR || GET_CODE () == XOR (gen_binary () (GET_CODE () == NOT && GET_CODE () == XOR (gen_binary () (GET_CODE () == NOT && GET_CODE () == XOR (gen_binary () (GET_CODE () == CONST_INT && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT && () == 0 (GET_CODE () == AND && () && ! side_effects_p () && ! side_effects_p () (GET_CODE () == AND (gen_binary () (GET_CODE () != IOR (GET_CODE () == AND (gen_binary () (GET_CODE () != IOR (() && rtx_equal_p () && GET_CODE () == CONST_INT && GET_CODE () == CONST_INT && () (ROTATE, mode, XEXP (), () (GET_CODE () == CONST_INT && GET_CODE () == ASHIFTRT && GET_CODE () == PLUS && GET_CODE () == CONST_INT && GET_CODE () == CONST_INT && INTVAL () < HOST_BITS_PER_WIDE_INT (XEXP () (op1 (mask >> count == INTVAL () && () == 0 (XEXP (), GEN_INT () (GET_CODE () == NOT (op0, 0 (GET_CODE () == NOT (op1, 0 (num_negated == 2 (XEXP (), op0 (XEXP (), op1 (num_negated == 1 (NOT, mode, mode, gen_binary () (GET_CODE () == AND && rtx_equal_p () && ! side_effects_p () (AND, mode, gen_unary (), op1 (GET_CODE () == AND && rtx_equal_p () && ! side_effects_p () (AND, mode, gen_unary (), op1 (op1 == const1_rtx && GET_RTX_CLASS () == && reversible_comparison_p () (reverse_condition (), mode, XEXP (), XEXP () (op1 == const1_rtx && GET_CODE () == LSHIFTRT && GET_CODE () == CONST_INT && INTVAL () == GET_MODE_BITSIZE () - 1 (GE, mode, XEXP (), const0_rtx (GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT && () && op1 == const_true_rtx && GET_RTX_CLASS () == && reversible_comparison_p () (reverse_condition (), mode, XEXP (), XEXP () (x (GET_CODE () (GET_CODE () == CONST_INT (GET_MODE_SIZE () > UNITS_PER_WORD (GET_MODE () (len == 0 (GET_CODE () == CLOBBER (x, 0 (GET_CODE () != CONST_INT || GET_CODE () != CONST_INT || GET_MODE () == VOIDmode (XEXP () (XEXP () (len + pos > GET_MODE_BITSIZE () (XEXP (), gen_rtx () (BITS_BIG_ENDIAN (GET_MODE () (GET_MODE () (modewidth >= pos - len (NULL_RTX, unsignedp LSHIFTRT ASHIFTRT, GET_MODE (), simplify_shift_const (), modewidth - len (unsignedp && len < HOST_BITS_PER_WIDE_INT (NULL_RTX, GET_MODE (), simplify_shift_const (), () - 1 (GET_CODE () == CLOBBER (x (1 (GET_CODE () == STRICT_LOW_PART && GET_CODE () == SUBREG (XEXP () (GET_MODE () (GET_CODE () == ZERO_EXTRACT && GET_CODE () == CONST_INT (SET_DEST (), 0 (XEXP () (SET_DEST (), 2 (GET_CODE () == CONST_INT && INTVAL () + len > GET_MODE_BITSIZE () (USE, GET_MODE (), inner (BITS_BIG_ENDIAN (GET_CODE () == CONST_INT (GET_MODE_BITSIZE () - len - INTVAL () (GET_CODE () == MINUS && GET_CODE () == CONST_INT && () (pos, 0 (MINUS, GET_MODE (), GEN_INT (), pos (GET_CODE () == SUBREG && () (SET, VOIDmode, SUBREG_REG (), gen_lowpart_for_combine () (GET_CODE () == SUBREG && subreg_lowpart_p () (inner (inner (len < HOST_BITS_PER_WIDE_INT (() - 1 (SET, VOIDmode, copy_rtx (), gen_binary () (mode, inner, pos, pos_rtx, len, unsignedp, in_dest, in_compare (inner (len, MODE_INT, 1 (GET_CODE () == USE (inner, 0 (GET_CODE () == SUBREG && subreg_lowpart_p () (GET_CODE () == MEM (SUBREG_REG () (inner (inner (pos_rtx && GET_CODE () == CONST_INT (pos_rtx (tmode != BLKmode && ! () && () (GET_CODE () == MEM (BYTES_BIG_ENDIAN (GET_MODE_BITSIZE () - len - pos (MEM, tmode, plus_constant () (new (inner (new (inner (new (inner (GET_CODE () == REG (tmode != inner_mode (SUBREG, tmode, inner, () (inner, tmode, len >= HOST_BITS_PER_WIDE_INT GET_MODE_MASK () () - 1, NULL_RTX, 0 (in_dest (GET_CODE () == MEM new () (mode == tmode new gen_rtx_combine () (pos_rtx == 0 && pos == 0 && ! in_dest && ! in_compare && ! spans_byte && unsignedp ( ! spans_byte && () (in_dest (int (int (int ( ! in_dest && unsignedp (int (int (int ( ! in_dest && ! unsignedp (int (int (int (mode != VOIDmode && GET_MODE_SIZE () < GET_MODE_SIZE () (pos_rtx && GET_MODE () != VOIDmode && GET_MODE_SIZE () < GET_MODE_SIZE () (pos_rtx (GET_CODE () != MEM || () (BITS_BIG_ENDIAN (pos_rtx == 0 (MAX () - len - pos (MINUS, GET_MODE (), GEN_INT (), pos_rtx (wanted_mem_mode != VOIDmode && GET_MODE_SIZE () < GET_MODE_SIZE () && () (BYTES_BIG_ENDIAN && ! spans_byte && GET_MODE_SIZE () < GET_MODE_SIZE () (is_mode (inner_mode (pos_rtx == 0 (wanted_mem_mode (BYTES_BIG_ENDIAN != BITS_BIG_ENDIAN && ! spans_byte && is_mode != wanted_mem_mode (GET_MODE_SIZE () - GET_MODE_SIZE () - offset (offset != 0 || inner_mode != wanted_mem_mode (MEM, wanted_mem_mode, plus_constant () (newmem (inner (newmem (inner (newmem (inner (GET_CODE () != MEM (inner, extraction_mode, pos_rtx || len + orig_pos >= HOST_BITS_PER_WIDE_INT GET_MODE_MASK () () << orig_pos, NULL_RTX, 0 (pos_rtx != 0 && GET_MODE_SIZE () > GET_MODE_SIZE () (ZERO_EXTEND, pos_mode, pos_rtx (pos_rtx != 0 && GET_MODE_SIZE () < GET_MODE_SIZE () (pos_mode, pos_rtx (pos_rtx == 0 && orig_pos_rtx != 0 && INTVAL () == pos (pos_rtx == 0 (pos (unsignedp ZERO_EXTRACT SIGN_EXTRACT, extraction_mode, inner, GEN_INT (), pos_rtx ( ! in_dest (mode, new (x, count (x (x (code (GET_CODE () == CONST_INT && INTVAL () >= count (NULL_RTX, ASHIFT, mode, XEXP (), INTVAL () - count (() != 0 (code, mode, mode, tem (GET_CODE () == CONST_INT && () == 0 && () != 0 (code, mode, tem, GEN_INT () (x, in_code (x (x (mode (code == MEM || code == PLUS || code == MINUS MEM () COMPARE in_code == COMPARE SET in_code (code (in_code == MEM && GET_CODE () == CONST_INT && INTVAL () < HOST_BITS_PER_WIDE_INT && INTVAL () >= 0 (XEXP (), next_code (MULT, mode, new, GEN_INT () (GET_CODE () != CONST_INT (GET_CODE () == LSHIFTRT && () >= 0 (XEXP (), next_code (mode, new, 0, XEXP (), i, 1, 0, in_code == COMPARE (GET_CODE () == SUBREG && subreg_lowpart_p () && GET_CODE () == LSHIFTRT && () >= 0 (XEXP (), next_code (GET_MODE (), new, 0, XEXP (), i, 1, 0, in_code == COMPARE (() && GET_CODE () == LSHIFTRT && GET_CODE () == LSHIFTRT && () >= 0 (GET_CODE (), mode, gen_rtx (), gen_rtx () (new, in_code (GET_CODE () == ROTATE && GET_CODE () == CONST_INT && () >= 0 && i <= INTVAL () (XEXP (), next_code (mode, new, (), NULL_RTX, i, 1, 0, in_code == COMPARE (ashr_optab handlers[() mode]insn_code != CODE_FOR_nothing && () && GET_CODE () == LSHIFTRT && GET_CODE () == CONST_INT && INTVAL () >= 0 && INTVAL () < HOST_BITS_PER_WIDE_INT && mode_width <= HOST_BITS_PER_WIDE_INT (mode (XEXP () (() == 0 (XEXP (), gen_rtx_combine () (() >= 0 (mode, make_compound_operation (), 0, NULL_RTX, i, 1, 0, in_code == COMPARE (in_code == COMPARE && () >= 0 (mode, make_compound_operation (), i, NULL_RTX, 1, 1, 0, 1 (ashr_optab handlers[() mode]insn_code == CODE_FOR_nothing && lshr_optab handlers[() mode]insn_code != CODE_FOR_nothing && mode_width <= HOST_BITS_PER_WIDE_INT && () == 0 (ASHIFTRT, mode, make_compound_operation (), XEXP () (x, 0 (x, 1 (GET_CODE () == CONST_INT && GET_CODE () == ASHIFT && GET_CODE () == CONST_INT && INTVAL () >= INTVAL () (XEXP (), next_code (mode, new, INTVAL () - INTVAL (), NULL_RTX, mode_width - INTVAL (), code == LSHIFTRT, 0, in_code == COMPARE (GET_RTX_CLASS () != && ! () && GET_CODE () == CONST_INT && INTVAL () < HOST_BITS_PER_WIDE_INT && () != 0 (mode, make_compound_operation (), 0, NULL_RTX, mode_width - INTVAL (), code == LSHIFTRT, 0, in_code == COMPARE (SUBREG_REG (), in_code (GET_CODE () != GET_CODE () && GET_MODE_SIZE () < GET_MODE_SIZE () && subreg_lowpart_p () (tem, mode, GET_MODE_MASK (), NULL_RTX, 0 (GET_CODE () != SUBREG (newer, in_code (new (mode, new (x (code (i 0 i < GET_RTX_LENGTH () i ++ (fmt[i] == (XEXP (), next_code (XEXP (), new (m, plen (m & - m (pos < 0 (() + 1 (*plen <= 0 (x, mode, mask, reg, just_select (x (code == CALL (() mode GET_MODE () (() && GET_MODE_BITSIZE () < GET_MODE_BITSIZE () (x (op_mode (op_mode (op_mode (GET_MODE_BITSIZE () >= HOST_BITS_PER_WIDE_INT GET_MODE_MASK () () - 1 (HOST_WIDE_INT (x, mode ( ! just_select && () == 0 (GET_CODE () == CONST_INT (x (mode (width > 0 && width < HOST_BITS_PER_WIDE_INT && () != 0 (HOST_WIDE_INT (cval (GET_MODE_SIZE () < GET_MODE_SIZE () && () == 0 (mode, x (GET_MODE () == mode && code != SUBREG && () == 0 (code ( ! BITS_BIG_ENDIAN && () == 0 (XEXP (), mode, mask, reg, next_select (x (GET_CODE () != code (x, mode, mask, reg, next_select (reg != 0 && () (subreg_lowpart_p () && () (SUBREG_REG (), mode, mask, reg, next_select (GET_CODE () == CONST_INT (x, op_mode, XEXP (), mask & INTVAL () (GET_CODE () == AND && GET_CODE () == CONST_INT && INTVAL () == mask (x, 0 (GET_CODE () == AND && GET_CODE () == CONST_INT && GET_MODE_MASK () != mask && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT (INTVAL () | () (GET_MODE () (width > 0 && width < HOST_BITS_PER_WIDE_INT && () != 0 (HOST_WIDE_INT (AND, GET_MODE (), XEXP (), GEN_INT () (rtx_cost () < rtx_cost () (mode (width < HOST_BITS_PER_WIDE_INT && () != 0 (HOST_WIDE_INT (GET_CODE () == CONST_INT && exact_log2 () >= 0 && () == 0 && () != 0 (plus_constant (), mode, mask, reg, next_select (GET_CODE () == LSHIFTRT && GET_CODE () == CONST_INT && INTVAL () >= 0 && INTVAL () < HOST_BITS_PER_WIDE_INT && GET_CODE () == CONST_INT && () && () (() << INTVAL () (GET_CODE (), GET_MODE (), XEXP (), temp (LSHIFTRT, GET_MODE (), temp, XEXP () (x, mode, mask, reg, next_select (op_mode, force_to_mode () (op_mode, force_to_mode () (GET_CODE () == CONST_INT && () && () != 0 (INTVAL () & mask (op_mode != GET_MODE () || op0 != XEXP () || op1 != XEXP () (code, op_mode, op0, op1 ( ! () && ! () (GET_CODE () == CONST_INT && INTVAL () >= 0 && INTVAL () < GET_MODE_BITSIZE () && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT (XEXP () (op_mode, force_to_mode () (op_mode != GET_MODE () || op0 != XEXP () (code, op_mode, op0, XEXP () (GET_CODE () == CONST_INT && INTVAL () < HOST_BITS_PER_WIDE_INT && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT (x, 0 (XEXP () (GET_MODE_BITSIZE () > HOST_BITS_PER_WIDE_INT || () != 0 (x (inner, op_mode, mask, reg, next_select (GET_MODE () != op_mode || inner != XEXP () (LSHIFTRT, op_mode, inner, XEXP () (GET_CODE () == LSHIFTRT && GET_CODE () == CONST_INT && () && exact_log2 () >= 0 && () (LSHIFTRT, GET_MODE (), XEXP (), GEN_INT () (GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT && () (XEXP (), mode, mask, reg, next_select (GET_CODE () == CONST_INT && INTVAL () >= 0 && INTVAL () < HOST_BITS_PER_WIDE_INT (GET_MODE_BITSIZE () > HOST_BITS_PER_WIDE_INT (HOST_WIDE_INT (GET_MODE_BITSIZE () - INTVAL () < HOST_BITS_PER_WIDE_INT (XEXP () (GET_MODE () (GET_MODE () (XEXP () (() == 0 || () >= 0 (x, LSHIFTRT, GET_MODE (), XEXP (), i < 0 INTVAL () GET_MODE_BITSIZE () - 1 - i (GET_CODE () != ASHIFTRT (x, mode, mask, reg, next_select (mask == 1 (LSHIFTRT, GET_MODE (), XEXP (), XEXP () (() && GET_CODE () == CONST_INT && INTVAL () >= 0 && () && GET_CODE () == ASHIFT && GET_CODE () == CONST_INT && INTVAL () == INTVAL () (XEXP (), mode, mask, reg, next_select (GET_CODE () == CONST_INT && INTVAL () >= 0 (code == ROTATE ROTATERT ROTATE, GET_MODE (), GEN_INT (), XEXP () (temp && GET_CODE () == CONST_INT (XEXP (), force_to_mode () (mask == 1 (XEXP (), mode, mask, reg, just_select (GET_CODE () == LSHIFTRT && GET_CODE () == CONST_INT && INTVAL () >= 0 && () && INTVAL () < HOST_BITS_PER_WIDE_INT (mask << INTVAL () (XOR, GET_MODE (), XEXP (), temp (LSHIFTRT, GET_MODE (), temp, XEXP () (x, mode, mask, reg, next_select (op_mode, force_to_mode () (op_mode != GET_MODE () || op0 != XEXP () (code, op_mode, op_mode, op0 (() == 0 && XEXP () == const0_rtx && () == 0 (XEXP (), mode, mask, reg, next_select (XEXP (), gen_lowpart_for_combine () (XEXP (), gen_lowpart_for_combine () (mode, x (x, ptrue, pfalse (x (x (mode (GET_RTX_CLASS () == && () != 0 (code, mode, GET_MODE (), true0 (code, mode, GET_MODE (), false0 (code == COMPARE (GET_RTX_CLASS () == || GET_RTX_CLASS () == || GET_RTX_CLASS () == (XEXP (), & true0, & false0 (XEXP (), & true1, & false1 (() && ! () (code, mode, true0, true1 (code, mode, false0, false1 (() && GET_CODE () == MULT && GET_CODE () == MULT (XEXP (), 1 (XEXP (), 1 (XEXP (), 0 (XEXP (), 0 (GET_RTX_CLASS () == && GET_RTX_CLASS () == && reversible_comparison_p () && () && ! side_effects_p () (MULT, mode, op0, const_true_rtx (MULT, mode, (), const_true_rtx (() && GET_CODE () == MULT && GET_CODE () == MULT (XEXP (), 0 (XEXP (), 0 (GET_RTX_CLASS () == && GET_RTX_CLASS () == && reversible_comparison_p () && () && ! side_effects_p () (code == IF_THEN_ELSE (x, 0 (x, 1 (x, 2 (GET_CODE () == NE && XEXP () == const0_rtx (cond0, 0 (GET_CODE () == EQ && XEXP () == const0_rtx (x, 2 (x, 1 (cond0, 0 (code == SUBREG && GET_MODE_CLASS () == MODE_INT && GET_MODE_CLASS () == MODE_INT && GET_MODE_SIZE () <= GET_MODE_SIZE () && 0 != () (true0, mode, GET_MODE_MASK (), NULL_RTX, 0 (false0, mode, GET_MODE_MASK (), NULL_RTX, 0 (CONSTANT_P () || () (num_sign_bit_copies () == size (exact_log2 () >= 0 (nz (x, cond, reg, val (x (side_effects_p () (cond == EQ && rtx_equal_p () (code == ABS && rtx_equal_p () && val == const0_rtx (cond (x, 0 (NEG, GET_MODE (), GET_MODE (), XEXP () (GET_RTX_CLASS () == || GET_RTX_CLASS () == (rtx_equal_p () (cond (rtx_equal_p () && rtx_equal_p () (GET_RTX_CLASS () == (comparison_dominates_p () const_true_rtx () (code == SMAX || code == SMIN || code == UMIN || code == UMAX (code == UMIN || code == UMAX (code == SMAX || code == UMAX (cond (cond (x, 1 (x, 0 (x, 1 (x, 0 (code (i GET_RTX_LENGTH () - 1 i >= 0 i -- (fmt[i] == (XEXP (), known_cond () (fmt[i] == (j XVECLEN () - 1 j >= 0 j -- (XVECEXP (), known_cond () (x (x (x (GET_CODE () == AND && GET_CODE () == ROTATE && GET_CODE () == CONST_INT && INTVAL () == -2 && () (VOIDmode, dest, 0, XEXP (), 1, 1, 1, 0 (SET, VOIDmode, assign, const0_rtx (GET_CODE () == AND && GET_CODE () == SUBREG && subreg_lowpart_p () && () && GET_CODE () == ROTATE && INTVAL () == -2 && () (VOIDmode, dest, 0, XEXP (), 1, 1, 1, 0 (SET, VOIDmode, assign, const0_rtx (GET_CODE () == IOR && GET_CODE () == ASHIFT && XEXP () == const1_rtx && () (VOIDmode, dest, 0, XEXP (), 1, 1, 1, 0 (SET, VOIDmode, assign, const1_rtx (GET_CODE () == IOR && GET_CODE () == AND && GET_CODE () == CONST_INT && () (XEXP () (src, 1 (GET_CODE () == IOR && GET_CODE () == AND && GET_CODE () == CONST_INT && () (XEXP () (src, 0 (c1 ^ GET_MODE_MASK (), & len (pos < 0 || pos + len > GET_MODE_BITSIZE () || () (VOIDmode, dest, pos, NULL_RTX, len, 1, 1, 0 (GET_CODE () == STRICT_LOW_PART GET_MODE () GET_MODE () (simplify_shift_const (), mode, GET_MODE_BITSIZE () >= HOST_BITS_PER_WIDE_INT GET_MODE_MASK () () - 1, dest, 0 (SET, VOIDmode, assign, src (x (x (FLOAT_MODE_P () (code != IOR && code != AND && code != XOR && code != PLUS && code != MINUS (x, 0 (x, 1 (GET_RTX_CLASS () == || GET_RTX_CLASS () == (lhs (rhs (lhs (inner_code != GET_CODE () (inner_code (code == PLUS || code == MINUS (code != PLUS && code != MINUS (GET_MODE () != GET_MODE () || SUBREG_WORD () != SUBREG_WORD () || ! subreg_lowpart_p () || () || () || GET_MODE_SIZE () > UNITS_PER_WORD (code, GET_MODE (), SUBREG_REG (), SUBREG_REG () (GET_MODE (), tem (GET_RTX_CLASS () == && rtx_equal_p () (lhs, 0 (lhs, 1 (rhs, 1 (GET_RTX_CLASS () == && rtx_equal_p () (lhs, 0 (lhs, 1 (rhs, 0 (GET_RTX_CLASS () == && rtx_equal_p () (lhs, 1 (lhs, 0 (rhs, 1 (rtx_equal_p () (lhs, 1 (lhs, 0 (rhs, 0 (code, GET_MODE (), lhs, rhs (code == XOR && inner_code == IOR (NOT, GET_MODE (), GET_MODE (), other (inner_code, GET_MODE (), apply_distributive_law (), other (x, mode, varop, constop (mode (varop, mode, constop, NULL_RTX, 0 (GET_CODE () == CLOBBER || GET_CODE () == CONST_INT (varop, mode (mode (BITS_PER_WORD < HOST_BITS_PER_WIDE_INT && BITS_PER_WORD == width && () (() () << width (constop == 0 (GET_CODE () == NEG && nonzero_bits () == 1 && () >= 0 (NULL_RTX, ASHIFT, mode, XEXP (), i (GET_CODE () == IOR || GET_CODE () == XOR (mode, apply_distributive_law () (x && GET_CODE () == SUBREG && GET_MODE () == mode && SUBREG_REG () == varop (x, 0 (mode, varop (GET_CODE () == CLOBBER (constop == nonzero (x == 0 || GET_CODE () != AND || GET_MODE () != mode (AND, mode, varop, GEN_INT () (GET_CODE () != CONST_INT || INTVAL () != constop (XEXP (), GEN_INT () (XEXP (), varop (x, mode (mode (mode (FLOAT_MODE_P () || FLOAT_MODE_P () (GET_MODE_BITSIZE () > mode_width (x (mode (mode (mode_width > HOST_BITS_PER_WIDE_INT (GET_MODE () != VOIDmode && GET_MODE () != mode && GET_MODE_BITSIZE () <= BITS_PER_WORD && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT && GET_MODE_BITSIZE () > GET_MODE_BITSIZE () (x, GET_MODE () (mode (GET_MODE () (x (code (POINTERS_EXTEND_UNSIGNED && GET_MODE () == Pmode && REGNO_POINTER_FLAG () (ptr_mode (x == stack_pointer_rtx (PUSH_ROUNDING (), sp_alignment (sp_alignment - 1 (reg_last_set_value[REGNO ()] != 0 && reg_last_set_mode[REGNO ()] == mode && () && INSN_CUID () < subst_low_cuid (x (x (tem (GET_MODE_BITSIZE () < mode_width && GET_CODE () == CONST_INT && INTVAL () > 0 && 0 != () (INTVAL () | () (tem, mode (nonzero_sign_valid && reg_nonzero_bits[REGNO ()](x (INTVAL () > 0 && mode_width < BITS_PER_WORD && 0 != () (INTVAL () | () (x (LOAD_EXTEND_OP () == ZERO_EXTEND (GET_MODE () (GET_MODE_CLASS () == MODE_INT && mode_width <= HOST_BITS_PER_WIDE_INT (num_sign_bit_copies () == GET_MODE_BITSIZE () (GET_MODE_SIZE () < mode_width (GET_MODE_MASK () & GET_MODE_MASK () (num_sign_bit_copies () == GET_MODE_BITSIZE () (nonzero_bits () & GET_MODE_MASK () (XEXP (), mode (GET_MODE () != VOIDmode (GET_MODE () (XEXP (), mode (GET_MODE () != VOIDmode (GET_MODE () (inner_nz & () (GET_MODE_MASK () & GET_MODE_MASK () (nonzero_bits () & nonzero_bits () (nonzero_bits () | nonzero_bits () (XEXP (), mode (XEXP (), mode (nz0 (nz1 (nz0 & - nz0 (nz1 & - nz1 (nz0 & () (nz1 & () (code (width0, width1 (low0, low1 (low0, low1 ( ! op0_maybe_minusp && ! op1_maybe_minusp ( ! op0_maybe_minusp && ! op1_maybe_minusp (width0, width1 (low0, low1 (width0, width1 (low0, low1 (result_width < mode_width (() 1 << result_width (result_low > 0 (() - 1 (GET_CODE () == CONST_INT && INTVAL () < HOST_BITS_PER_WIDE_INT (() 1 << INTVAL () (SUBREG_PROMOTED_VAR_P () && SUBREG_PROMOTED_UNSIGNED_P () (GET_MODE_MASK () & nonzero_bits () (GET_MODE_BITSIZE () <= BITS_PER_WORD && () (SUBREG_REG (), mode (GET_MODE_SIZE () > GET_MODE_SIZE () (GET_MODE_MASK () & GET_MODE_MASK () (GET_CODE () == CONST_INT && INTVAL () >= 0 && INTVAL () < HOST_BITS_PER_WIDE_INT (x (inner_mode (XEXP () (inner_mode (XEXP (), mode (mode_width > width (op_nonzero & nonzero & mode_mask (code == LSHIFTRT (code == ASHIFTRT (inner & () (() - 1 (width - count (code == ASHIFT (() & mode_mask (outer | inner (() 1 << () (nonzero_bits () | nonzero_bits () (x, mode (x (mode == VOIDmode (x (mode == VOIDmode || FLOAT_MODE_P () || FLOAT_MODE_P () (mode (bitwidth < GET_MODE_BITSIZE () (1, () (GET_MODE () != VOIDmode && bitwidth > GET_MODE_BITSIZE () (code ( ! POINTERS_EXTEND_UNSIGNED && GET_MODE () == Pmode && mode == Pmode && REGNO_POINTER_FLAG () (Pmode (ptr_mode (reg_last_set_value[REGNO ()] != 0 && reg_last_set_mode[REGNO ()] == mode && () && INSN_CUID () < subst_low_cuid (x (x (tem != 0 (tem, mode (nonzero_sign_valid && reg_sign_bit_copies[REGNO ()] != 0 (x (LOAD_EXTEND_OP () == SIGN_EXTEND (1, bitwidth - GET_MODE_BITSIZE () + 1 (x (mode (bitwidth <= HOST_BITS_PER_WIDE_INT && () != 0 (nonzero (mode (nonzero == 0 bitwidth bitwidth - floor_log2 () - 1 (SUBREG_PROMOTED_VAR_P () && ! SUBREG_PROMOTED_UNSIGNED_P () (bitwidth - GET_MODE_BITSIZE () + 1, num_sign_bit_copies () (bitwidth <= GET_MODE_BITSIZE () (SUBREG_REG (), VOIDmode (1, () (() && LOAD_EXTEND_OP () == SIGN_EXTEND (SUBREG_REG (), mode (GET_CODE () == CONST_INT (1, bitwidth - INTVAL () (bitwidth - GET_MODE_BITSIZE () + num_sign_bit_copies () (XEXP (), VOIDmode (1, () (XEXP (), mode (GET_CODE () == CONST_INT && INTVAL () >= 0 && INTVAL () < bitwidth (XEXP (), mode (1, num0 - () (XEXP (), mode (nonzero == 1 (XEXP (), mode (num0 > 1 && bitwidth <= HOST_BITS_PER_WIDE_INT && () (XEXP (), mode (XEXP (), mode (num0, num1 (code == PLUS && XEXP () == constm1_rtx && bitwidth <= HOST_BITS_PER_WIDE_INT (XEXP (), mode (() == 0 (nonzero == 1 || nonzero == 0 bitwidth bitwidth - floor_log2 () - 1 (XEXP (), mode (XEXP (), mode (1, MIN () - 1 (XEXP (), mode (XEXP (), mode (bitwidth - num0 (bitwidth - num1 (result > 0 && bitwidth <= HOST_BITS_PER_WIDE_INT && () && () (1, result (XEXP (), mode (XEXP (), mode (XEXP (), mode (result > 1 && bitwidth <= HOST_BITS_PER_WIDE_INT && () != 0 (XEXP (), mode (result > 1 && bitwidth <= HOST_BITS_PER_WIDE_INT && () != 0 (XEXP (), mode (GET_CODE () == CONST_INT && INTVAL () > 0 (bitwidth, num0 + INTVAL () (GET_CODE () != CONST_INT || INTVAL () < 0 || INTVAL () >= bitwidth (XEXP (), mode (1, num0 - INTVAL () (XEXP (), mode (XEXP (), mode (num0, num1 (bitwidth > HOST_BITS_PER_WIDE_INT (x, mode (nonzero & () 1 bitwidth - floor_log2 () - 1 (x, mode, unsignedp (nonzero_sign_valid == 0 (unsignedp () num_sign_bit_copies () - 1 (pop0, pconst0, op1, const1, mode, pcomp_p (mode (mode (mode (op0 == AND (op1 == NIL || op0 == SET (op0 == NIL (op0 == op1 (op0 (op0 == PLUS || op1 == PLUS || op0 == NEG || op1 == NEG (const0 != const1 (op0 (op1 == AND (op1 == AND (op1 == IOR (mode (const0 == 0 && () (const0 == 0 && op0 == AND (const0 == GET_MODE_MASK () && op0 == AND (BITS_PER_WORD < HOST_BITS_PER_WIDE_INT && BITS_PER_WORD == width && () (() () << width (x, code, result_mode, varop, count (GET_MODE_SIZE () + () (count < 0 || count > GET_MODE_BITSIZE () (x (code, mode, varop, GEN_INT () (count != 0 (GET_CODE () == CLOBBER (complement_p (code == ROTATERT (result_mode (code == ASHIFTRT || code == LSHIFTRT || code == ROTATE result_mode mode (count > GET_MODE_BITSIZE () - 1 (code == ASHIFTRT (shift_mode (code == ROTATE || code == ROTATERT (shift_mode (count < 0 ((code == ASHIFTRT && () (code == ASHIFTRT && () (shift_mode (GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT && code == ASHIFTRT && () (GET_CODE () (varop (new != varop (() && ! mode_dependent_address_p () && ! MEM_VOLATILE_P () && () != BLKmode (BYTES_BIG_ENDIAN (MEM, tmode, XEXP () (MEM, tmode, plus_constant () (new (varop (new (varop (new (varop (code == ASHIFTRT SIGN_EXTEND ZERO_EXTEND, mode, new (() && () != BLKmode && tmode == GET_MODE () (BITS_BIG_ENDIAN (varop, 0 (XEXP () (XEXP (), plus_constant () (code == ASHIFTRT SIGN_EXTEND ZERO_EXTEND, mode, new (subreg_lowpart_p () && () && () (varop (GET_MODE_SIZE () > GET_MODE_SIZE () (varop (GET_CODE () == CONST_INT && exact_log2 () >= 0 (ASHIFT, GET_MODE (), XEXP (), GEN_INT () (GET_CODE () == CONST_INT && exact_log2 () >= 0 (LSHIFTRT, GET_MODE (), XEXP (), GEN_INT () (code == LSHIFTRT && count == GET_MODE_BITSIZE () - 1 (varop, 0 (GET_CODE () == CONST_INT && INTVAL () >= 0 && INTVAL () < GET_MODE_BITSIZE () && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT (varop (XEXP () (code == ASHIFT && first_code == ASHIFTRT && () == count (GET_MODE_MASK () & () (NULL_RTX, result_mode, XEXP (), mask (NULL_RTX, ASHIFT, result_mode, varop, count (code == ASHIFTRT && first_code == ASHIFT && GET_MODE () == shift_mode && () (count < 0 (varop, 0 (code == first_code (GET_MODE () != result_mode && () (varop, 0 (code == ASHIFTRT || () || GET_MODE_BITSIZE () > HOST_BITS_PER_WIDE_INT || () (nonzero_bits () (code, result_mode, mask_rtx, GEN_INT () (mask_rtx == 0 || GET_CODE () != CONST_INT || ! merge_outer_ops () (() == () (count > 0 && () (count < 0 (varop, 0 (GET_CODE () == code && GET_CODE () != CONST_INT && 0 != () (code, mode, new, XEXP () (XOR, mode, XEXP (), GEN_INT () (GET_CODE () == IOR && GET_CODE () == PLUS && XEXP () == constm1_rtx && () && () && count == GET_MODE_BITSIZE () - 1 && rtx_equal_p () (LE, GET_MODE (), XEXP (), const0_rtx (STORE_FLAG_VALUE == 1 code == ASHIFTRT code == LSHIFTRT (NEG, GET_MODE (), varop (GET_CODE () == CONST_INT && () != 0 && GET_CODE () == CONST_INT && merge_outer_ops () (varop, 0 (NULL_RTX, code, shift_mode, XEXP (), count (NULL_RTX, code, shift_mode, XEXP (), count (GET_CODE (), shift_mode, lhs, rhs (varop (code == LSHIFTRT && XEXP () == const0_rtx && GET_MODE () == result_mode && count == GET_MODE_BITSIZE () - 1 && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT && () && nonzero_bits () == 1 && merge_outer_ops () (varop, 0 (code == LSHIFTRT && count == GET_MODE_BITSIZE () - 1 && nonzero_bits () == 1 (varop, 0 (code == ASHIFT && merge_outer_ops () (varop, 0 (code == LSHIFTRT && count == GET_MODE_BITSIZE () - 1 && XEXP () == constm1_rtx && nonzero_bits () == 1 && merge_outer_ops () (varop, 0 (() && count < HOST_BITS_PER_WIDE_INT && nonzero_bits () >> count == 0 && () == 0 (varop, 0 (() && count < HOST_BITS_PER_WIDE_INT && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT && 0 == () && 0 == () (varop, 1 (code == ASHIFT && GET_CODE () == CONST_INT && () != 0 && GET_CODE () == CONST_INT && merge_outer_ops () (varop, 0 (GET_CODE () == ASHIFTRT && count == GET_MODE_BITSIZE () - 1 && () && () && GET_CODE () == CONST_INT && INTVAL () == count && rtx_equal_p () (GT, GET_MODE (), XEXP (), const0_rtx (STORE_FLAG_VALUE == 1 code == ASHIFTRT code == LSHIFTRT (NEG, GET_MODE (), varop (code == ASHIFTRT || code == LSHIFTRT || code == ROTATE result_mode mode (x && GET_RTX_CLASS () == && GET_CODE () == CONST_INT && INTVAL () == count (x, 1 (count (x && GET_CODE () == SUBREG && GET_MODE () == shift_mode && SUBREG_REG () == varop (x, 0 (GET_MODE () != shift_mode (shift_mode, varop (GET_CODE () == CLOBBER (code, shift_mode, varop, const_rtx (new != 0 (x == 0 || GET_CODE () != code || GET_MODE () != shift_mode (code, shift_mode, varop, const_rtx (XEXP (), varop (XEXP (), const_rtx (outer_op != NIL && GET_CODE () == code && GET_CODE () == CONST_INT (x, code, shift_mode, XEXP (), INTVAL () (orig_code == LSHIFTRT && result_mode != shift_mode (NULL_RTX, shift_mode, x, GET_MODE_MASK () >> orig_count (result_mode, x (complement_p (NOT, result_mode, result_mode, x (outer_op != NIL (GET_MODE_BITSIZE () < HOST_BITS_PER_WIDE_INT (result_mode (result_mode (BITS_PER_WORD < HOST_BITS_PER_WIDE_INT && BITS_PER_WORD == width && () (() () << width (outer_op == AND (NULL_RTX, result_mode, x, outer_const (outer_op == SET (outer_const (GET_RTX_CLASS () == (outer_op, result_mode, result_mode, x (outer_op, result_mode, x, GEN_INT () (pnewpat, insn, pnotes, padded_scratches (GET_CODE () == PARALLEL (i XVECLEN () - 1 i >= 0 i -- (GET_CODE () == CLOBBER && XEXP () == const0_rtx (pat, insn, & num_clobbers_to_add (insn_code_number < 0 && ! check_asm_operands () && GET_CODE () == PARALLEL (pos 0, i 0 i < XVECLEN () i ++ (GET_CODE () != CLOBBER (i != pos (XVECEXP (), XVECEXP () (XVECLEN (), pos (pos == 1 (pat, 0, 0 (pat, insn, & num_clobbers_to_add (num_clobbers_to_add (PARALLEL, VOIDmode, gen_rtvec () (GET_CODE () == PARALLEL (i 0 i < XVECLEN () i ++ (newpat, 0, i (pat, 0, i (newpat, 0, 0 (newpat, insn_code_number (i XVECLEN () - num_clobbers_to_add i < XVECLEN () i ++ (GET_CODE () == REG && ! reg_dead_at_p () (GET_CODE () == SCRATCH (*padded_scratches (EXPR_LIST, REG_UNUSED, XEXP (), notes (mode, x (GET_MODE () == mode (GET_MODE_SIZE () > UNITS_PER_WORD && ! () (CLOBBER, GET_MODE (), const0_rtx (GET_CODE () == SUBREG && GET_CODE () == MEM (x (GET_MODE () == mode (mode, x (result != 0 && GET_CODE () == SUBREG && GET_CODE () == REG && REGNO () >= FIRST_PSEUDO_REGISTER && () (SUBREG_REG () (result (GET_CODE () == MEM (MEM_VOLATILE_P () || mode_dependent_address_p () (CLOBBER, GET_MODE (), const0_rtx (GET_MODE_SIZE () < GET_MODE_SIZE () (SUBREG, mode, x, 0 (WORDS_BIG_ENDIAN (MAX () - MAX () (BYTES_BIG_ENDIAN (MIN () - MIN () (MEM, mode, plus_constant () (new (x (new (x (new (x (GET_RTX_CLASS () == (GET_CODE (), mode, XEXP (), XEXP () (WORDS_BIG_ENDIAN && GET_MODE_SIZE () > UNITS_PER_WORD (() / UNITS_PER_WORD (SUBREG, mode, x, word (() (p, mode (p, enum rtx_code (p, enum machine_mode (code (code (n_args == 0 || n_args > 3 ((j 0 j < n_args j ++ (*fmt ++ != ((p, rtx (i previous_num_undos i < undobuf num_undo i ++ ( ! undobuf undo[i]is_int && GET_CODE () == code && GET_MODE () == mode (j 0 j < n_args j ++ (XEXP () != args[j](j == n_args (code (rt, mode (rt, 0 (n_args > 1 (rt, 1 (n_args > 2 (rt, 2 (code, mode, op0, op1 (GET_RTX_CLASS () == && () (GET_RTX_CLASS () == (op0 (GET_CODE () == COMPARE && op1 == const0_rtx (op0, 1 (op0, 0 (op0 (op_mode == VOIDmode (op1 (code, op_mode, op0, op1 (code, mode, op0, op1 (result (GET_RTX_CLASS () == && () (code, mode, op1, op0 (code, mode, op0, op1 (code, mode, op0_mode, op0 (code, mode, op0, op0_mode (result (code, mode, op0 (code, pop0, pop1 (1 (code != GTU && code != GEU && code != LTU && code != LEU && GET_CODE () == ASHIFTRT && GET_CODE () == ASHIFTRT && GET_CODE () == ASHIFT && GET_CODE () == ASHIFT && GET_CODE () == SUBREG && GET_CODE () == SUBREG && () && GET_CODE () == CONST_INT && GET_CODE () == CONST_INT && GET_CODE () == CONST_INT && GET_CODE () == CONST_INT && INTVAL () == INTVAL () && INTVAL () == INTVAL () && INTVAL () == INTVAL () && () (XEXP () (XEXP () (GET_CODE () == GET_CODE () && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT && () && GET_CODE () == CONST_INT && INTVAL () >= 0 && INTVAL () < HOST_BITS_PER_WIDE_INT && XEXP () == XEXP () (op0 (mode (XEXP () (GET_CODE () == LSHIFTRT || GET_CODE () == ASHIFTRT (mask >> shift_count (GET_CODE () == ASHIFT (mask & () (() == 0 && () == 0 (op0, 0 (op1, 0 (GET_CODE () == AND && GET_CODE () == AND && GET_CODE () == CONST_INT && GET_CODE () == CONST_INT (op0, 0 (op1, 0 (XEXP () (XEXP () (GET_CODE () == SUBREG && GET_CODE () == SUBREG && () && () && () && () && () (inner_op0 (inner_op1 (code (c0 == c1 (tmode GET_CLASS_NARROWEST_MODE () tmode != GET_MODE () tmode GET_MODE_WIDER_MODE () (c0 == GET_MODE_MASK () (tmode, inner_op0 (tmode, inner_op1 (code ( ! changed (() || () (op0, 0 (op1, 0 (code (CONSTANT_P () (code (GET_CODE () == CONST_INT (op0 (mode (mode (GET_MODE_CLASS () != MODE_INT && ! () (op1 (mode_width <= HOST_BITS_PER_WIDE_INT (const_op && () && mode_width <= HOST_BITS_PER_WIDE_INT && exact_log2 () >= 0 && nonzero_bits () == const_op (code == EQ || code == GE || code == GEU NE EQ (const_op == -1 && () && num_sign_bit_copies () == mode_width (code == EQ || code == LE || code == GEU NE EQ (code (const_op > 0 (const_op (const_op < 0 (const_op (const_op == 0 && mode_width <= HOST_BITS_PER_WIDE_INT && () == 0 (const_op > 0 (const_op (const_op < 0 (const_op (const_op == 0 && mode_width <= HOST_BITS_PER_WIDE_INT && () == 0 (const_op > 0 (const_op (const_op == () 1 << () (const_op == 0 (const_op == () - 1 (const_op > 1 (const_op (const_op == () 1 << () (const_op == 0 (const_op == () - 1 (code == EQ || code == NE (() && const_op == 0 (code == LTU || code == LEU || code == GTU || code == LEU (sign_bit_comparison_p && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT (op0, mode, (), NULL_RTX, 0 (GET_CODE () (GET_CODE () == CONST_INT && XEXP () == const1_rtx && equality_comparison_p && const_op == 0 && () >= 0 && () (BITS_BIG_ENDIAN (GET_MODE_BITSIZE () - 1 - i (op0, 2 (i (code (op0 (tem != op0 (equality_comparison_p && () != 0 (op0, 0 (sign_bit_comparison_p (op0, 0 (code == GE LT GE (equality_comparison_p && () != 0 (op0, 0 (const_op != 0 (sign_bit_comparison_p && () (op0, 0 (code == LT NE EQ (num_sign_bit_copies () >= 2 (op0, 0 (code (equality_comparison_p && GET_CODE () == CONST_INT && () != 0 (op0, 0 (const_op == 0 && sign_bit_comparison_p && GET_CODE () == CONST_INT && mode_width <= HOST_BITS_PER_WIDE_INT (NULL_RTX, mode, XEXP (), () (code == LT NE EQ (const_op == 0 && equality_comparison_p (op0, 0 ( ! unsigned_comparison_p && () && () (op0, 0 (mode_width <= HOST_BITS_PER_WIDE_INT && subreg_lowpart_p () && GET_CODE () == PLUS && GET_CODE () == CONST_INT && INTVAL () < 0 && () && () const_op < GET_MODE_MASK () / 2 && () (op0 (subreg_lowpart_p () && GET_MODE_BITSIZE () < mode_width (() && () && () (op0, 0 (equality_comparison_p && 0 != () (op0, 0 (const_op == 0 && XEXP () == constm1_rtx && GET_CODE () == ABS && sign_bit_comparison_p (XEXP (), 0 (code == LT EQ NE (equality_comparison_p && 0 != () (op0, 0 (equality_comparison_p && 0 != () (op0, 1 (sign_bit_comparison_p && GET_CODE () == ASHIFTRT && GET_CODE () == CONST_INT && INTVAL () == mode_width - 1 && rtx_equal_p () (op0, 1 (code == GE LE GT (equality_comparison_p && 0 != () (op0, 0 (const_op != 0 || XEXP () == cc0_rtx || GET_MODE_CLASS () == MODE_CC (GET_CODE () == COMPARE (XEXP (), 0 (XEXP (), 1 (op0, 0 (op0, 1 (code == NE || () || () (code == LT || code == NE GET_CODE () reverse_condition () (sign_bit_comparison_p && GET_CODE () == PLUS && XEXP () == constm1_rtx && rtx_equal_p () (op0, 1 (code == GE GT LE (const_op == 0 && equality_comparison_p && GET_CODE () == ASHIFT && XEXP () == const1_rtx (op0, mode, gen_rtx_combine (), () 1 (const_op == 0 && equality_comparison_p && mode_width <= HOST_BITS_PER_WIDE_INT && GET_CODE () == CONST_INT && GET_CODE () == LSHIFTRT && GET_CODE () == CONST_INT && INTVAL () >= 0 && INTVAL () < HOST_BITS_PER_WIDE_INT (() << INTVAL () (() == 0 && () (XEXP (), 0 (equality_comparison_p && const_op == 0 && GET_CODE () == CONST_INT && mode_width <= HOST_BITS_PER_WIDE_INT && () (op0, 0 (code == EQ GE LT (() && GET_CODE () == CONST_INT && () >= 0 && const_op >> i == 0 && () != BLKmode (tmode, XEXP () (GET_CODE () == CONST_INT && INTVAL () >= 0 && () && () && mode_width <= HOST_BITS_PER_WIDE_INT && () == 0 (XEXP () (const_op (op0, 0 (sign_bit_comparison_p && GET_CODE () == CONST_INT && mode_width <= HOST_BITS_PER_WIDE_INT (NULL_RTX, mode, XEXP (), () (code == LT NE EQ (const_op == 0 && equality_comparison_p && GET_CODE () == CONST_INT && INTVAL () == mode_width - 1 (NULL_RTX, mode, XEXP (), () 1 (equality_comparison_p && const_op == 0 && GET_CODE () == CONST_INT (NULL_RTX, LSHIFTRT, mode, XEXP (), INTVAL () ( ! unsigned_comparison_p && GET_CODE () == CONST_INT && GET_CODE () == ASHIFT && XEXP () == XEXP () && () != BLKmode && () (tmode, XEXP () (GET_CODE () == CONST_INT && INTVAL () >= 0 && INTVAL () < HOST_BITS_PER_WIDE_INT && mode_width <= HOST_BITS_PER_WIDE_INT && () == 0 && () (XEXP () (const_op (op0, 0 (const_op == 0 && () && GET_CODE () == CONST_INT && INTVAL () == mode_width - 1 (op0, 0 (code == NE || code == GT LT GE (op0, op1 == const0_rtx COMPARE SET (op1, SET (GET_CODE () == SUBREG && subreg_lowpart_p () && GET_MODE_CLASS () == MODE_INT && () && () (op0 (GET_MODE (), op1 (GET_CODE () == SUBREG && subreg_lowpart_p () && GET_MODE_CLASS () == MODE_INT && () && () && () == 0 && () (op0 (op0 (mode != VOIDmode && GET_MODE_CLASS () == MODE_INT && GET_MODE_SIZE () < UNITS_PER_WORD && cmp_optab handlers[() mode]insn_code == CODE_FOR_nothing (tmode GET_MODE_WIDER_MODE () () tmode GET_MODE_WIDER_MODE () (cmp_optab handlers[() tmode]insn_code != CODE_FOR_nothing (() || () (tmode, op0 (tmode, op1 (op1 == const0_rtx && () && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT (AND, tmode, gen_lowpart_for_combine (), GEN_INT () (code == LT (code, op0, op1 (x (TARGET_FLOAT_FORMAT != IEEE_FLOAT_FORMAT || flag_fast_math || GET_CODE () == NE || GET_CODE () == EQ (GET_MODE_CLASS () (REVERSIBLE_CC_MODE () (XEXP () (x && GET_CODE () == COMPARE && ! FLOAT_MODE_P () (x (x (code (code == REG (x (regno < FIRST_PSEUDO_REGISTER HARD_REGNO_NREGS () 1 (i regno i < endregno i ++ (i GET_RTX_LENGTH () - 1 i >= 0 i -- (fmt[i] == (XEXP () (reg, insn, value (reg (regno < FIRST_PSEUDO_REGISTER HARD_REGNO_NREGS () 1 (value && insn && reg_overlap_mentioned_p () (insn (reg (tem (copy_rtx (), reg, tem (i regno i < endregno i ++ (insn (value (value (i regno i < endregno i ++ (value && reg_last_set_table_tick[i] == label_tick (value && ! get_last_value_validate () (value ( ! get_last_value_validate () (value (insn (reg (value, GET_MODE () (value, GET_MODE () (dest, setter (GET_CODE () == SUBREG (dest (GET_CODE () == REG (GET_CODE () == SET && dest == SET_DEST () (dest, record_dead_insn, SET_SRC () (GET_CODE () == SET && GET_CODE () == SUBREG && SUBREG_REG () == dest && GET_MODE_BITSIZE () <= BITS_PER_WORD && subreg_lowpart_p () (dest, record_dead_insn, gen_lowpart_for_combine () (dest, record_dead_insn, NULL_RTX (GET_CODE () == MEM && ! push_operand () (record_dead_insn (insn (link REG_NOTES () link link XEXP () (REG_NOTE_KIND () == REG_DEAD && GET_CODE () == REG (XEXP () (regno < FIRST_PSEUDO_REGISTER HARD_REGNO_NREGS () 1 (i regno i < endregno i ++ (REG_NOTE_KIND () == REG_INC (XEXP (), insn, NULL_RTX (GET_CODE () == CALL_INSN (i 0 i < FIRST_PSEUDO_REGISTER i ++ (call_used_regs[i](insn (PATTERN (), record_dead_and_set_regs_1 (loc, tick, replace (GET_CODE () (GET_CODE () (GET_CODE () == REG (x (regno < FIRST_PSEUDO_REGISTER HARD_REGNO_NREGS () 1 (j regno j < endregno j ++ (reg_last_set_invalid[j] || () (replace (CLOBBER, GET_MODE (), const0_rtx (i 0 i < len i ++ (() || fmt[i] == (x (GET_CODE () == SUBREG && subreg_lowpart_p () && () && () != 0 (GET_MODE (), value (GET_CODE () != REG (x (value == 0 || () (INSN_CUID () >= subst_low_cuid (subst_prev_insn (insn prev_nonnote_insn () insn && () insn prev_nonnote_insn () (insn && () != 0 && rtx_equal_p () (set (reg_mentioned_p () (copy_rtx (), x, gen_rtx () (reg_overlap_mentioned_p () (get_last_value_validate () (value (get_last_value_validate () (x, from_cuid (x (code == REG (x (regno < FIRST_PSEUDO_REGISTER HARD_REGNO_NREGS () 1 (regno == STACK_POINTER_REGNUM (regno < endreg regno ++ (reg_last_set[regno] && INSN_CUID () > from_cuid (code == MEM && mem_last_set > from_cuid (code (i GET_RTX_LENGTH () - 1 i >= 0 i -- (fmt[i] == (j XVECLEN () - 1 j >= 0 j -- (use_crosses_set_p () (fmt[i] == && use_crosses_set_p () (dest, x (GET_CODE () != REG (dest (regno < FIRST_PSEUDO_REGISTER HARD_REGNO_NREGS () 1 (reg_dead_endregno > regno && reg_dead_regno < endregno (GET_CODE () == CLOBBER (reg, insn (reg (reg_dead_regno < FIRST_PSEUDO_REGISTER HARD_REGNO_NREGS () 1 (reg_dead_regno < FIRST_PSEUDO_REGISTER (i reg_dead_regno i < reg_dead_endregno i ++ (TEST_HARD_REG_BIT () (insn && GET_CODE () != CODE_LABEL && GET_CODE () != BARRIER insn prev_nonnote_insn () (PATTERN (), reg_dead_at_p_1 (reg_dead_flag (find_regno_note () (insn == 0 (block 0 block < n_basic_blocks block ++ (insn == basic_block_head[block](block == n_basic_blocks (i reg_dead_regno i < reg_dead_endregno i ++ (basic_block_live_at_start[block][i / REGSET_ELT_BITS] & () (x (x (code (GET_CODE () == MEM (XEXP () (x (regno < FIRST_PSEUDO_REGISTER (regno == STACK_POINTER_REGNUM || regno == HARD_FRAME_POINTER_REGNUM || () || regno == FRAME_POINTER_REGNUM (regno, GET_MODE () (i -- > 0 (newpat_used_regs, regno + i (x (GET_CODE () == SUBREG || GET_CODE () == ZERO_EXTRACT || GET_CODE () == SIGN_EXTRACT || GET_CODE () == STRICT_LOW_PART (testreg, 0 (GET_CODE () == MEM (XEXP () (SET_SRC () (code (i GET_RTX_LENGTH () - 1 i >= 0 i -- (fmt[i] == (XEXP () (fmt[i] == (j 0 j < XVECLEN () j ++ (XVECEXP () (regno, insn (insn, REG_DEAD, regno (note (insn, note (x, from_cuid, to_insn, pnotes (x (code == REG (x (before_dead && INSN_UID () > max_uid_cuid (before_dead (after_dead && INSN_UID () > max_uid_cuid (after_dead (before_dead && after_dead && INSN_CUID () >= from_cuid && () (regno, where_dead (note != 0 && regno < FIRST_PSEUDO_REGISTER && () (XEXP () (deadregno + HARD_REGNO_NREGS () (regno, GET_MODE () (i deadregno i < deadend i ++ (i < regno || i >= ourend (where_dead (EXPR_LIST, REG_DEAD, gen_rtx (), REG_NOTES () (note == 0 && regno < FIRST_PSEUDO_REGISTER && HARD_REGNO_NREGS () > 1 (regno, GET_MODE () (i regno + 1 i < ourend i ++ (gen_rtx (), from_cuid, to_insn, & oldnotes (note != 0 && GET_MODE () == GET_MODE () (note, 1 (EXPR_LIST, REG_DEAD, x, *pnotes (GET_CODE () == SET (x (SET_SRC (), from_cuid, to_insn, pnotes (GET_CODE () == ZERO_EXTRACT || GET_CODE () == STRICT_LOW_PART || () (dest, from_cuid, to_insn, pnotes (GET_CODE () == SUBREG (dest (GET_CODE () == MEM (XEXP (), from_cuid, to_insn, pnotes (GET_CODE () == CLOBBER (code (code (i 0 i < len i ++ (fmt[i] == (j XVECLEN () - 1 j >= 0 j -- (XVECEXP (), from_cuid, to_insn, pnotes (fmt[i] == (XEXP (), from_cuid, to_insn, pnotes (x, body (GET_CODE () == SET (body (GET_CODE () == ZERO_EXTRACT (dest, 0 (GET_CODE () == STRICT_LOW_PART (XEXP () (GET_CODE () == SUBREG (target (GET_CODE () != REG (target (x (tregno >= FIRST_PSEUDO_REGISTER || regno >= FIRST_PSEUDO_REGISTER (tregno, GET_MODE () (regno, GET_MODE () (GET_CODE () == PARALLEL (i XVECLEN () - 1 i >= 0 i -- (reg_bitfield_target_p () (notes, from_insn, i3, i2, elim_i2, elim_i1 (note notes note note next_note (XEXP () && GET_CODE () == REG && REGNO () >= FIRST_PSEUDO_REGISTER (note, 0 (XEXP () (note, 1 (REG_NOTE_KIND () (reg_set_p () (from_insn != i3 ( ! () (reg_referenced_p () && ! () (note, REG_DEAD (from_insn == i3 && () (reg_mentioned_p () (i2 && reg_mentioned_p () (place (GET_CODE () != NOTE (XEXP (), REG_LIBCALL, NULL_RTX (from_insn (tem && place (tem, 0 (GET_CODE () != NOTE (XEXP (), REG_RETVAL, NULL_RTX (from_insn (tem && place (tem, 0 (from_insn && GET_CODE () == CALL_INSN && find_reg_fusage () (reg_referenced_p () (i2 != 0 && next_nonnote_insn () == i3 && reg_referenced_p () (XEXP () == elim_i2 || XEXP () == elim_i1 (place == i3 && i2 != 0 && GET_CODE () == REG && reg_n_refs[REGNO ()] == 2 && reg_referenced_p () (XEXP () (place == 0 (tem prev_nonnote_insn () place == 0 && tem && () tem prev_nonnote_insn () (reg_set_p () (tem (set != 0 && ! side_effects_p () && () (tem (REG_NOTES (), tem, tem, NULL_RTX, NULL_RTX, NULL_RTX (LOG_LINKS () (tem, NOTE (tem (tem (note, REG_UNUSED ( ! find_regno_note () (reg_referenced_p () || () (i2 && INSN_UID () <= max_uid_cuid && INSN_CUID () > INSN_CUID () && from_insn && INSN_CUID () > INSN_CUID () && reg_referenced_p () (place (place (links (REG_NOTE_KIND () == REG_DEAD && place == 0 && tem != 0 (gen_rtx (), tem (basic_block_end[this_basic_block - 1] == tem (place && REG_NOTE_KIND () == REG_DEAD (XEXP () (dead_or_set_p () || reg_bitfield_target_p () (reg_last_death[regno] != place (place && regno < FIRST_PSEUDO_REGISTER && HARD_REGNO_NREGS () > 1 (regno, GET_MODE () (i regno i < endregno i ++ ( ! refers_to_regno_p () && ! find_regno_fusage () (REG, reg_raw_mode[i], i (p place GET_CODE () == INSN && GET_CODE () == USE p PREV_INSN () (rtx_equal_p () (p (gen_rtx (), p (use_insn (EXPR_LIST, REG_DEAD, piece, REG_NOTES () (all_used (i regno i < endregno i ++ (dead_or_set_regno_p () ( ! all_used (i regno i < endregno i ++ (REG, reg_raw_mode[i], i (() && ! dead_or_set_p () && ! reg_bitfield_target_p () (place (EXPR_LIST, REG_DEAD, piece, REG_NOTES () ((place (note, 1 (place (place (() && GET_CODE () == REG (XEXP () (place2 (() && GET_CODE () == REG (XEXP () (place2 (GET_CODE (), REG_NOTE_KIND (), XEXP (), REG_NOTES () (links (link links link link next_link (link, 1 (GET_CODE () == NOTE || () == 0 (set (GET_CODE () == SUBREG || GET_CODE () == ZERO_EXTRACT || GET_CODE () == SIGN_EXTRACT || GET_CODE () == STRICT_LOW_PART (reg, 0 (insn NEXT_INSN () () insn NEXT_INSN () (GET_RTX_CLASS () == && reg_overlap_mentioned_p () (reg_referenced_p () (GET_CODE () == CALL_INSN && find_reg_fusage () (place (link2 LOG_LINKS () link2 link2 XEXP () (XEXP () == XEXP () (link2 == 0 (link, 1 (place (place (added_links_insn == 0 || INSN_CUID () > INSN_CUID () (file (file,, combine_attempts, combine_merges, combine_extras, combine_successes (file (file,, total_attempts, total_merges, total_extras, total_successes, <./cc/combine.c 3968>
12646 														function_section: void (), <./cc/varasm.c 282>
12647 															DECL_SECTION_NAME: <>
12648 															named_section: 9900
12649 															text_section: 9915
12650 														ASM_OUTPUT_CASE_LABEL: <>
12651 														CODE_LABEL_NUMBER: <>
12652 														XSTR: <>
12653 														assemble_label: void (), <./cc/varasm.c 1607>
12654 														find_reg_note: <>
12655 														NOTICE_UPDATE_CC: <>
12656 														XEXP: 105
12657 														XVECLEN: <>
12658 														ASM_OUTPUT_ADDR_VEC_ELT: <>
12659 														XVECEXP: <>
12660 														abort: <>
12661 														ASM_OUTPUT_ADDR_DIFF_ELT: <>
12662 														ASM_OUTPUT_CASE_END: <>
12663 														PREV_INSN: <>
12664 														add_bb: void (), <./cc/final.c 1109>
12665 															permalloc: 2873
12666 															ASM_OUTPUT_INTERNAL_LABEL: <>
12667 															BLOCK_PROFILER: <>
12668 														asm_noperands: 542
12669 														alloca: <>
12670 														decode_asm_operands: <>
12671 														output_asm_insn: 94
12672 														final_scan_insn: 12567
12673 														DBR_OUTPUT_SEQEND: <>
12674 														SET_SRC: 484
12675 														SET_DEST: 87
12676 														alter_subreg: <>
12677 														rtx_equal_p: 143
12678 														FIND_REG_INC_NOTE: <>
12679 														volatile_refs_p: <>
12680 														REGNO: 93
12681 														GET_RTX_CLASS: 141
12682 														alter_cond: <>
12683 														PUT_CODE: <>
12684 														NOTE_SOURCE_FILE: <>
12685 														INSN_CODE: <>
12686 														validate_change: 142
12687 														peephole: <>
12688 														recog_memoized: 538
12689 														insn_extract: <>
12690 														walk_alter_subreg: <>
12691 														constrain_operands: 618
12692 														fatal_insn_not_found: void (), <./cc/toplev.c 1156>
12693 															INSN_CODE: <>
12694 															fatal_insn: 12413
12695 														FINAL_PRESCAN_INSN: <>
12696 														prev_nonnote_insn: 4509
12697 														try_split: rtx (), <./cc/emit-rtl.c 2006>
12698 															PREV_INSN: <>
12699 															NEXT_INSN: <>
12700 															split_insns: <>
12701 															GET_CODE: 81
12702 															XVECLEN: <>
12703 															XVECEXP: <>
12704 															JUMP_LABEL: 3730
12705 															LABEL_NUSES: <>
12706 															emit_insn_after: <>
12707 															delete_insn: <>
12708 															emit_barrier_after: <>
12709 															INSN_DELETED_P: <>
12710 															try_split: 12697
12711 															PATTERN: <>
12712 															rtx_equal_p: 143
12713 															INSN_CODE: <>
12714 															prev_active_insn: 4570
12715 															next_active_insn: 3790
12716 													add_bb: 12664
12717 												NEXT_INSN: <>
12718 												INSN_UID: <>
12719 												GET_CODE: 81
12720 												NOTE_LINE_NUMBER: 177
12721 												alloca: <>
12722 												gcc_obstack_init: 5537
12723 												obstack_alloc: <>
12724 												next_active_insn: 3790
12725 												INSN_ANNULLED_BRANCH_P: 3784
12726 												INSN_FROM_TARGET_P: <>
12727 												PATTERN: <>
12728 												num_delay_slots: <>
12729 												obstack_ptr_grow: <>
12730 												condjump_p: <>
12731 												condjump_in_parallel_p: <>
12732 												JUMP_LABEL: 3730
12733 												prev_label: 4886
12734 												redirect_jump: <>
12735 												CLEAR_HARD_REG_SET: <>
12736 												SET_HARD_REG_BIT: <>
12737 												mark_referenced_resources: <>
12738 												next_nonnote_insn: 4490
12739 												mark_set_resources: <>
12740 												fill_simple_delay_slots: void (), <./cc/reorg.c 2799>
12741 													INSN_DELETED_P: <>
12742 													GET_CODE: 81
12743 													PATTERN: <>
12744 													get_jump_flags: <>
12745 													JUMP_LABEL: 3730
12746 													num_delay_slots: <>
12747 													abort: <>
12748 													next_active_insn: 3790
12749 													simplejump_p: if (), <./cc/cse.c 8510>
12750 													eligible_for_delay: <>
12751 													no_labels_between_p: <>
12752 													add_to_delay_list: 3734
12753 													NEXT_INSN: <>
12754 													PREV_INSN: <>
12755 													CLEAR_RESOURCE: <>
12756 													mark_set_resources: <>
12757 													mark_referenced_resources: <>
12758 													prev_nonnote_insn: 4509
12759 													stop_search_p: <>
12760 													insn_references_resource_p: <>
12761 													insn_sets_resource_p: <>
12762 													reg_mentioned_p: else if (), <./cc/loop.c 5796>
12763 													sets_cc0_p: <>
12764 													try_split: 12697
12765 													update_reg_dead_notes: <>
12766 													gen_rtx: <>
12767 													update_block: <>
12768 													delete_insn: <>
12769 													condjump_p: <>
12770 													condjump_in_parallel_p: <>
12771 													optimize_skip: <>
12772 													next_nonnote_insn: 4490
12773 													XVECEXP: <>
12774 													mark_target_live_regs: void (), <./cc/reorg.c 2441>
12775 														INSN_UID: <>
12776 														INSN_DELETED_P: <>
12777 														find_basic_block: <>
12778 														COPY_HARD_REG_SET: <>
12779 														oballoc: 530
12780 														CLEAR_HARD_REG_SET: <>
12781 														HARD_REGNO_NREGS: <>
12782 														PSEUDO_REGNO_MODE: 11753
12783 														SET_HARD_REG_BIT: <>
12784 														get_insns: rtx (), <./cc/emit-rtl.c 1696>
12785 														GET_CODE: 81
12786 														PATTERN: <>
12787 														XVECEXP: <>
12788 														next_insn: rtx (), <./cc/emit-rtl.c 1746>
12789 															NEXT_INSN: <>
12790 															GET_CODE: 81
12791 															PATTERN: <>
12792 															XVECEXP: <>
12793 														PREV_INSN: <>
12794 														next_insn_no_annul: rtx (), <./cc/reorg.c 2381>
12795 															INSN_ANNULLED_BRANCH_P: 3784
12796 															NEXT_INSN: <>
12797 															PREV_INSN: <>
12798 															INSN_FROM_TARGET_P: <>
12799 															GET_CODE: 81
12800 															PATTERN: <>
12801 															XVECEXP: <>
12802 														INSN_FROM_TARGET_P: <>
12803 														GET_RTX_CLASS: 141
12804 														XEXP: 105
12805 														CLEAR_HARD_REG_BIT: <>
12806 														REG_NOTES: <>
12807 														REG_NOTE_KIND: switch (), <./cc/sched.c 4292>
12808 														REGNO: 93
12809 														GET_MODE: 139
12810 														note_stores: <>
12811 														update_live_status: void (), <./cc/reorg.c 2348>
12812 															GET_CODE: 81
12813 															SUBREG_REG: <>
12814 															REGNO: 93
12815 															SUBREG_WORD: <>
12816 															HARD_REGNO_NREGS: <>
12817 															GET_MODE: 139
12818 															CLEAR_HARD_REG_BIT: <>
12819 															SET_HARD_REG_BIT: <>
12820 														AND_COMPL_HARD_REG_SET: <>
12821 														NOTE_LINE_NUMBER: 177
12822 														IOR_HARD_REG_SET: <>
12823 														SET_HARD_REG_SET: <>
12824 														CLEAR_RESOURCE: <>
12825 														NEXT_INSN: <>
12826 														mark_set_resources: <>
12827 														XVECLEN: <>
12828 														simplejump_p: if (), <./cc/cse.c 8510>
12829 														next_active_insn: 3790
12830 														JUMP_LABEL: 3730
12831 														mark_referenced_resources: <>
12832 														mark_target_live_regs: 12774
12833 														AND_HARD_REG_SET: <>
12834 													IOR_HARD_REG_SET: <>
12835 													may_trap_p: <>
12836 													link_cc0_insns: void (), <./cc/emit-rtl.c 1933>
12837 														next_nonnote_insn: 4490
12838 														GET_CODE: 81
12839 														PATTERN: <>
12840 														XVECEXP: <>
12841 														REG_NOTES: <>
12842 														gen_rtx: <>
12843 													get_label_before: 4578
12844 													find_end_label: rtx (), <./cc/reorg.c 777>
12845 													copy_rtx: <>
12846 													reorg_redirect_jump: <>
12847 													emit_delay_sequence: 3755
12848 													note_delay_statistics: void (), <./cc/reorg.c 1098>
12849 													SET_HARD_REG_BIT: <>
12850 													get_last_insn: 1981
12851 													ELIGIBLE_FOR_EPILOGUE_DELAY: <>
12852 												fill_eager_delay_slots: void (), <./cc/reorg.c 3632>
12853 													INSN_DELETED_P: <>
12854 													GET_CODE: 81
12855 													condjump_p: <>
12856 													condjump_in_parallel_p: <>
12857 													num_delay_slots: <>
12858 													abort: <>
12859 													JUMP_LABEL: 3730
12860 													get_branch_condition: <>
12861 													next_active_insn: 3790
12862 													own_thread_p: <>
12863 													NEXT_INSN: <>
12864 													mostly_true_jump: <>
12865 													fill_slots_from_thread: rtx (), <./cc/reorg.c 3257>
12866 														abort: <>
12867 														get_jump_flags: <>
12868 														JUMP_LABEL: 3730
12869 														CLEAR_RESOURCE: <>
12870 														mark_target_live_regs: 12774
12871 														try_split: 12697
12872 														PATTERN: <>
12873 														stop_search_p: <>
12874 														next_nonnote_insn: 4490
12875 														GET_CODE: 81
12876 														insn_references_resource_p: <>
12877 														insn_sets_resource_p: <>
12878 														reg_mentioned_p: else if (), <./cc/loop.c 5796>
12879 														sets_cc0_p: <>
12880 														redundant_insn: , <./cc/reorg.c 2316>
12881 														update_block: <>
12882 														next_active_insn: 3790
12883 														delete_insn: <>
12884 														update_reg_unused_notes: <>
12885 														may_trap_p: <>
12886 														eligible_for_delay: <>
12887 														eligible_for_annul_false: 3731
12888 														eligible_for_annul_true: 3742
12889 														link_cc0_insns: 12836
12890 														copy_rtx: <>
12891 														INSN_FROM_TARGET_P: <>
12892 														add_to_delay_list: 3734
12893 														mark_set_resources: <>
12894 														mark_referenced_resources: <>
12895 														SET_SRC: 484
12896 														SET_DEST: 87
12897 														reg_set_p: 4708
12898 														reg_referenced_p: if (), <./cc/reorg.c 2297>
12899 														validate_replace_rtx: 10777
12900 														XVECEXP: <>
12901 														steal_delay_list_from_target: <>
12902 														steal_delay_list_from_fallthrough: <>
12903 														rtx_equal_p: 143
12904 														XEXP: 105
12905 														reg_overlap_mentioned_p: 91
12906 														gen_rtx: <>
12907 														GET_MODE: 139
12908 														negate_rtx: 4821
12909 														emit_insn_after: <>
12910 														recog_memoized: 538
12911 														insn_extract: <>
12912 														constrain_operands: 618
12913 														INSN_CODE: <>
12914 														INSN_ANNULLED_BRANCH_P: 3784
12915 														simplejump_p: if (), <./cc/cse.c 8510>
12916 														redirect_with_delay_list_safe_p: <>
12917 														follow_jumps: <>
12918 														find_end_label: rtx (), <./cc/reorg.c 777>
12919 														get_label_before: 4578
12920 														reorg_redirect_jump: <>
12921 													emit_delay_sequence: 3755
12922 													note_delay_statistics: 12848
12923 												relax_delay_slots: void (), <./cc/reorg.c 3748>
12924 													next_active_insn: 3790
12925 													GET_CODE: 81
12926 													condjump_p: <>
12927 													condjump_in_parallel_p: <>
12928 													JUMP_LABEL: 3730
12929 													follow_jumps: <>
12930 													prev_label: 4886
12931 													find_end_label: rtx (), <./cc/reorg.c 777>
12932 													delete_jump: <>
12933 													reorg_redirect_jump: <>
12934 													simplejump_p: if (), <./cc/cse.c 8510>
12935 													PATTERN: <>
12936 													no_labels_between_p: <>
12937 													LABEL_NUSES: <>
12938 													invert_jump: <>
12939 													delete_insn: <>
12940 													prev_active_insn: 4570
12941 													mostly_true_jump: <>
12942 													get_branch_condition: <>
12943 													XVECEXP: <>
12944 													redundant_insn: , <./cc/reorg.c 2316>
12945 													delete_from_delay_slot: 3743
12946 													next_real_insn: 553
12947 													redirect_with_delay_slots_safe_p: <>
12948 													get_label_before: 4578
12949 													XVECLEN: <>
12950 													INSN_ANNULLED_BRANCH_P: 3784
12951 													find_reg_note: <>
12952 													INSN_FROM_TARGET_P: <>
12953 													PREV_INSN: <>
12954 													emit_insn_after: <>
12955 													delete_scheduled_jump: void (), <./cc/reorg.c 1040>
12956 														reg_mentioned_p: else if (), <./cc/loop.c 5796>
12957 														find_reg_note: <>
12958 														FIND_REG_INC_NOTE: <>
12959 														XEXP: 105
12960 														sets_cc0_p: <>
12961 														PATTERN: <>
12962 														delete_from_delay_slot: 3743
12963 														previous_insn: 10240
12964 														GET_CODE: 81
12965 														prev_nonnote_insn: 4509
12966 														PREV_INSN: <>
12967 														NEXT_INSN: <>
12968 														delete_insn: <>
12969 													rtx_equal_p: 143
12970 													own_thread_p: <>
12971 													NEXT_INSN: <>
12972 													try_merge_delay_insns: <>
12973 												GET_RTX_CLASS: 141
12974 												XEXP: 105
12975 												delete_insn: <>
12976 												LABEL_NUSES: <>
12977 												make_return_insns: void (), <./cc/reorg.c 4058>
12978 													NEXT_INSN: <>
12979 													GET_CODE: 81
12980 													PATTERN: <>
12981 													get_label_before: 4578
12982 													LABEL_NUSES: <>
12983 													obstack_free: 397
12984 													XVECEXP: <>
12985 													JUMP_LABEL: 3730
12986 													reorg_redirect_jump: <>
12987 													redirect_with_delay_slots_safe_p: <>
12988 													get_jump_flags: <>
12989 													num_delay_slots: <>
12990 													XVECLEN: <>
12991 													INSN_ANNULLED_BRANCH_P: 3784
12992 													INSN_FROM_TARGET_P: <>
12993 													eligible_for_annul_false: 3731
12994 													eligible_for_annul_true: 3742
12995 													eligible_for_delay: <>
12996 													PREV_INSN: <>
12997 													delete_insn: <>
12998 													emit_insn_after: <>
12999 													emit_jump_insn_after: <>
13000 													emit_barrier_after: <>
13001 													obstack_ptr_grow: <>
13002 													fill_simple_delay_slots: 12740
13003 												obstack_free: 397
13004 												reposition_prologue_and_epilogue_notes: void (), <./cc/function.c 5694>
13005 													NEXT_INSN: <>
13006 													GET_CODE: 81
13007 													NOTE_LINE_NUMBER: 177
13008 													contains: int (), <./cc/function.c 5557>
13009 														GET_CODE: 81
13010 														PATTERN: <>
13011 														XVECLEN: <>
13012 														INSN_UID: <>
13013 														XVECEXP: <>
13014 													PREV_INSN: <>
13015 													add_insn_after: <>
13016 													get_last_insn: 1981
13017 												fprintf: <>
13018 											shorten_branches: void (), <./cc/final.c 646>
13019 												NEXT_INSN: <>
13020 												INSN_UID: <>
13021 												oballoc: 530
13022 												GET_CODE: 81
13023 												PATTERN: <>
13024 												GET_MODE_SIZE: 461
13025 												GET_MODE: 139
13026 												XVECLEN: <>
13027 												asm_noperands: 542
13028 												asm_insn_count: int (), <./cc/final.c 836>
13029 													GET_CODE: 81
13030 													XSTR: <>
13031 													decode_asm_operands: <>
13032 													IS_ASM_LOGICAL_LINE_SEPARATOR: <>
13033 												insn_default_length: <>
13034 												const_num_delay_slots: <>
13035 												XVECEXP: <>
13036 												insn_variable_length_p: <>
13037 												ADJUST_INSN_LENGTH: <>
13038 												insn_current_length: <>
13039 											reg_to_stack: void (), <./cc/reg-stack.c 335>
13040 												CLEAR_HARD_REG_SET: <>
13041 												GET_CLASS_NARROWEST_MODE: <>
13042 												GET_MODE_WIDER_MODE: <>
13043 												FP_MODE_REG: <>
13044 												gen_rtx: <>
13045 												NEXT_INSN: <>
13046 												INSN_UID: <>
13047 												GET_CODE: 81
13048 												GET_RTX_CLASS: 141
13049 												NOTE_LINE_NUMBER: 177
13050 												stack_regs_mentioned_p: int (), <./cc/reg-stack.c 297>
13051 													STACK_REG_P: <>
13052 													GET_RTX_FORMAT: <>
13053 													GET_CODE: 81
13054 													GET_RTX_LENGTH: <>
13055 													XVECLEN: <>
13056 													stack_regs_mentioned_p: 13050
13057 													XVECEXP: <>
13058 													XEXP: 105
13059 												PATTERN: <>
13060 												PUT_MODE: <>
13061 												record_reg_life_pat: void (), <./cc/reg-stack.c 1056>
13062 													STACK_REG_P: <>
13063 													GET_CODE: 81
13064 													SUBREG_REG: <>
13065 													mark_regs_pat: void (), <./cc/reg-stack.c 253>
13066 														GET_CODE: 81
13067 														GET_MODE: 139
13068 														SUBREG_WORD: <>
13069 														REGNO: 93
13070 														SUBREG_REG: <>
13071 														HARD_REGNO_NREGS: <>
13072 														SET_HARD_REG_BIT: <>
13073 													record_reg_life_pat: 13061
13074 													XEXP: 105
13075 													GET_RTX_FORMAT: <>
13076 													GET_RTX_LENGTH: <>
13077 													XVECLEN: <>
13078 													XVECEXP: <>
13079 												LABEL_REFS: <>
13080 												abort: <>
13081 												alloca: <>
13082 												find_blocks: void (), <./cc/reg-stack.c 1263>
13083 													NEXT_INSN: <>
13084 													GET_CODE: 81
13085 													GET_RTX_CLASS: 141
13086 													REG_NOTES: <>
13087 													XEXP: 105
13088 													REG_NOTE_KIND: switch (), <./cc/sched.c 4292>
13089 													gen_rtx: <>
13090 													INSN_UID: <>
13091 													abort: <>
13092 													PATTERN: <>
13093 													XVECLEN: <>
13094 													XVECEXP: <>
13095 													SET_DEST: 87
13096 													uses_reg_or_mem: int (), <./cc/reg-stack.c 1372>
13097 														GET_CODE: 81
13098 														XEXP: 105
13099 														CONSTANT_POOL_ADDRESS_P: 627
13100 														GET_RTX_FORMAT: <>
13101 														GET_RTX_LENGTH: <>
13102 														uses_reg_or_mem: 13096
13103 														XVECLEN: <>
13104 														XVECEXP: <>
13105 													SET_SRC: 484
13106 													record_label_references: void (), <./cc/reg-stack.c 471>
13107 														GET_CODE: 81
13108 														XEXP: 105
13109 														abort: <>
13110 														LABEL_REFS: <>
13111 														LABEL_NEXTREF: <>
13112 														CONTAINING_INSN: <>
13113 														GET_RTX_FORMAT: <>
13114 														GET_RTX_LENGTH: <>
13115 														record_label_references: 13106
13116 														XVECLEN: <>
13117 														XVECEXP: <>
13118 												stack_reg_life_analysis: void (), <./cc/reg-stack.c 1456>
13119 													stack_result: rtx (), <./cc/reg-stack.c 1405>
13120 														DECL_RTL: <>
13121 														DECL_RESULT: <>
13122 														GET_CODE: 81
13123 														REGNO: 93
13124 														FUNCTION_OUTGOING_VALUE: <>
13125 														TREE_TYPE: 160
13126 														FUNCTION_VALUE: <>
13127 														STACK_REG_P: <>
13128 													GET_CODE: 81
13129 													PATTERN: <>
13130 													mark_regs_pat: 13065
13131 													COPY_HARD_REG_SET: <>
13132 													PREV_INSN: <>
13133 													GET_MODE: 139
13134 													record_reg_life: void (), <./cc/reg-stack.c 1145>
13135 														GET_CODE: 81
13136 														INSN_DELETED_P: <>
13137 														REG_NOTES: <>
13138 														XEXP: 105
13139 														STACK_REG_P: <>
13140 														REG_NOTE_KIND: switch (), <./cc/sched.c 4292>
13141 														asm_noperands: 542
13142 														PATTERN: <>
13143 														alloca: <>
13144 														decode_asm_operands: <>
13145 														get_asm_operand_lengths: void (), <./cc/reg-stack.c 1108>
13146 															GET_CODE: 81
13147 															SET_SRC: 484
13148 															ASM_OPERANDS_INPUT_LENGTH: <>
13149 															XVECEXP: <>
13150 															abort: <>
13151 														record_asm_reg_life: void (), <./cc/reg-stack.c 840>
13152 															PATTERN: <>
13153 															alloca: <>
13154 															constrain_asm_operands: int (), <./cc/reg-stack.c 564>
13155 																alloca: <>
13156 																GET_MODE: 139
13157 																GET_CODE: 81
13158 																SUBREG_REG: <>
13159 																REGNO: 93
13160 																SUBREG_WORD: <>
13161 																operands_match_p: <>
13162 																strict_memory_address_p: 625
13163 																reg_fits_class_p: int (), <./cc/recog.c 1972>
13164 																XEXP: 105
13165 																CONST_DOUBLE_OK_FOR_LETTER_P: <>
13166 																CONSTANT_P: 118
13167 																CONST_OK_FOR_LETTER_P: <>
13168 																INTVAL: 129
13169 																EXTRA_CONSTRAINT: <>
13170 																offsettable_memref_p: else if (), <./cc/config/i386/i386.c 2913>
13171 																REG_CLASS_FROM_LETTER: <>
13172 															GET_CODE: 81
13173 															SUBREG_REG: <>
13174 															XVECLEN: <>
13175 															XVECEXP: <>
13176 															XEXP: 105
13177 															STACK_REG_P: <>
13178 															error_for_asm: <>
13179 															REGNO: 93
13180 															operands_match_p: <>
13181 															gen_rtx: <>
13182 															PUT_MODE: <>
13183 															stack_regs_mentioned_p: 13050
13184 															abort: <>
13185 															TEST_HARD_REG_BIT: 8306
13186 															REG_NOTES: <>
13187 															CLEAR_HARD_REG_BIT: <>
13188 															find_regno_note: <>
13189 															SET_HARD_REG_BIT: <>
13190 														CLEAR_HARD_REG_SET: <>
13191 														CALL_INSN_FUNCTION_USAGE: <>
13192 														record_reg_life_pat: 13061
13193 														SET_DEST: 87
13194 														TEST_HARD_REG_BIT: 8306
13195 														gen_rtx: <>
13196 														FP_MODE_REG: <>
13197 														CONST0_RTX: <>
13198 														emit_insn_after: <>
13199 														PUT_MODE: <>
13200 														CLEAR_HARD_REG_BIT: <>
13201 														AND_COMPL_HARD_REG_SET: <>
13202 														IOR_HARD_REG_SET: <>
13203 													LABEL_REFS: <>
13204 													LABEL_NEXTREF: <>
13205 													BLOCK_NUM: <>
13206 													CONTAINING_INSN: <>
13207 													IOR_HARD_REG_SET: <>
13208 													GO_IF_HARD_REG_SUBSET: <>
13209 													TEST_HARD_REG_BIT: 8306
13210 													gen_rtx: <>
13211 													FP_MODE_REG: <>
13212 													CONST0_RTX: <>
13213 													emit_insn_after: <>
13214 													PUT_MODE: <>
13215 													CLEAR_HARD_REG_BIT: <>
13216 												dump_stack_info: void (), <./cc/reg-stack.c 3075>
13217 													fprintf: <>
13218 													INSN_UID: <>
13219 													GET_CODE: 81
13220 													LABEL_REFS: <>
13221 													LABEL_NEXTREF: <>
13222 													BLOCK_NUM: <>
13223 													CONTAINING_INSN: <>
13224 													TEST_HARD_REG_BIT: 8306
13225 													print_blocks: void (), <./cc/reg-stack.c 3038>
13226 														GET_CODE: 81
13227 														XEXP: 105
13228 														abort: <>
13229 														fprintf: <>
13230 														BLOCK_NUM: <>
13231 														GET_RTX_FORMAT: <>
13232 														GET_RTX_LENGTH: <>
13233 														print_blocks: 13225
13234 														XVECLEN: <>
13235 														XVECEXP: <>
13236 													PATTERN: <>
13237 												convert_regs: void (), <./cc/reg-stack.c 2944>
13238 													TEST_HARD_REG_BIT: 8306
13239 													NEXT_INSN: <>
13240 													GET_MODE: 139
13241 													GET_CODE: 81
13242 													subst_stack_regs: void (), <./cc/reg-stack.c 2616>
13243 														GET_CODE: 81
13244 														straighten_stack: void (), <./cc/reg-stack.c 279>
13245 															change_stack: , <./cc/reg-stack.c 2722>
13246 																emit_insn_after: <>
13247 																NEXT_INSN: <>
13248 																TEST_HARD_REG_BIT: 8306
13249 																emit_pop_insn: , <./cc/reg-stack.c 1690>
13250 																	get_hard_regnum: int (), <./cc/reg-stack.c 1653>
13251 																		STACK_REG_P: <>
13252 																		abort: <>
13253 																		REGNO: 93
13254 																	abort: <>
13255 																	gen_rtx: <>
13256 																	FP_MODE_REG: <>
13257 																	PUT_MODE: <>
13258 																	REG_NOTES: <>
13259 																	CLEAR_HARD_REG_BIT: <>
13260 																	REGNO: 93
13261 																FP_MODE_REG: <>
13262 																emit_insn_before: <>
13263 																GO_IF_HARD_REG_EQUAL: <>
13264 																abort: <>
13265 																emit_swap_insn: void (), <./cc/reg-stack.c 1732>
13266 																	gen_swapdf: <>
13267 																	get_hard_regnum: 13250
13268 																	abort: <>
13269 																	prev_nonnote_insn: 4509
13270 																	GET_CODE: 81
13271 																	GET_MODE: 139
13272 																	single_set: 560
13273 																	get_true_reg: rtx * (), <./cc/reg-stack.c 520>
13274 																		GET_CODE: 81
13275 																		FP_REG_P: if (), <./cc/config/i386/i386.c 1328>
13276 																		SUBREG_REG: <>
13277 																		FP_MODE_REG: <>
13278 																		REGNO: 93
13279 																		SUBREG_WORD: <>
13280 																		GET_MODE: 139
13281 																		XEXP: 105
13282 																	SET_SRC: 484
13283 																	SET_DEST: 87
13284 																	REGNO: 93
13285 																	find_regno_note: <>
13286 																	GET_RTX_CLASS: 141
13287 																	sets_cc0_p: <>
13288 																	PATTERN: <>
13289 																	next_nonnote_insn: 4490
13290 																	FP_MODE_REG: <>
13291 																	emit_insn_after: <>
13292 																	PUT_MODE: <>
13293 															emit_insn_after: <>
13294 														PREV_INSN: <>
13295 														CLEAR_HARD_REG_BIT: <>
13296 														GET_MODE: 139
13297 														asm_noperands: 542
13298 														PATTERN: <>
13299 														alloca: <>
13300 														decode_asm_operands: <>
13301 														get_asm_operand_lengths: 13145
13302 														subst_asm_stack_regs: void (), <./cc/reg-stack.c 2330>
13303 															PATTERN: <>
13304 															alloca: <>
13305 															constrain_asm_operands: 13154
13306 															abort: <>
13307 															GET_CODE: 81
13308 															SUBREG_REG: <>
13309 															REG_NOTES: <>
13310 															XEXP: 105
13311 															STACK_REG_P: <>
13312 															REG_NOTE_KIND: switch (), <./cc/sched.c 4292>
13313 															XVECLEN: <>
13314 															XVECEXP: <>
13315 															reg_class_subset_p: if (), <./cc/reload.c 3130>
13316 															get_hard_regnum: 13250
13317 															REGNO: 93
13318 															change_stack: 13245
13319 															emit_insn_before: <>
13320 															replace_reg: void (), <./cc/reg-stack.c 1605>
13321 																STACK_REG_P: <>
13322 																abort: <>
13323 																GET_MODE_CLASS: 492
13324 																GET_MODE: 139
13325 																FP_MODE_REG: <>
13326 															FP_MODE_REG: <>
13327 															operands_match_p: <>
13328 															CLEAR_HARD_REG_BIT: <>
13329 															SET_HARD_REG_BIT: <>
13330 															emit_pop_insn: 13249
13331 															emit_insn_after: <>
13332 															TEST_HARD_REG_BIT: 8306
13333 														XVECLEN: <>
13334 														stack_regs_mentioned_p: 13050
13335 														XVECEXP: <>
13336 														subst_stack_regs_pat: void (), <./cc/reg-stack.c 2081>
13337 															GET_CODE: 81
13338 															get_true_reg: 13273
13339 															SET_DEST: 87
13340 															SET_SRC: 484
13341 															STACK_REG_P: <>
13342 															move_for_stack_reg: void (), <./cc/reg-stack.c 1807>
13343 																get_true_reg: 13273
13344 																SET_SRC: 484
13345 																SET_DEST: 87
13346 																STACK_REG_P: <>
13347 																find_regno_note: <>
13348 																REGNO: 93
13349 																abort: <>
13350 																get_hard_regnum: 13250
13351 																emit_pop_insn: 13249
13352 																emit_insn_after: <>
13353 																delete_insn_for_stacker: void (), <./cc/reg-stack.c 1674>
13354 																	PUT_CODE: <>
13355 																	NOTE_LINE_NUMBER: 177
13356 																	NOTE_SOURCE_FILE: <>
13357 																SET_HARD_REG_BIT: <>
13358 																CLEAR_HARD_REG_BIT: <>
13359 																replace_reg: 13320
13360 																emit_swap_insn: 13265
13361 																XEXP: 105
13362 																GET_MODE: 139
13363 																FP_MODE_REG: <>
13364 																gen_movxf: <>
13365 																emit_insn_before: <>
13366 																PUT_MODE: <>
13367 																REG_NOTES: <>
13368 																gen_rtx: <>
13369 															compare_for_stack_reg: void (), <./cc/reg-stack.c 1983>
13370 																get_true_reg: 13273
13371 																XEXP: 105
13372 																SET_SRC: 484
13373 																STACK_REG_P: <>
13374 																get_hard_regnum: 13250
13375 																next_cc0_user: rtx (), <./cc/emit-rtl.c 1956>
13376 																	find_reg_note: <>
13377 																	XEXP: 105
13378 																	next_nonnote_insn: 4490
13379 																	GET_CODE: 81
13380 																	PATTERN: <>
13381 																	XVECEXP: <>
13382 																	GET_RTX_CLASS: 141
13383 																	reg_mentioned_p: else if (), <./cc/loop.c 5796>
13384 																abort: <>
13385 																swap_rtx_condition: void (), <./cc/reg-stack.c 1947>
13386 																	GET_RTX_CLASS: 141
13387 																	GET_CODE: 81
13388 																	PUT_CODE: <>
13389 																	swap_condition: <>
13390 																	GET_RTX_FORMAT: <>
13391 																	GET_RTX_LENGTH: <>
13392 																	XVECLEN: <>
13393 																	swap_rtx_condition: 13385
13394 																	XVECEXP: <>
13395 																	XEXP: 105
13396 																PATTERN: <>
13397 																INSN_CODE: <>
13398 																find_regno_note: <>
13399 																REGNO: 93
13400 																emit_swap_insn: 13265
13401 																replace_reg: 13320
13402 																CLEAR_HARD_REG_BIT: <>
13403 																link_cc0_insns: 12836
13404 																remove_regno_note: void (), <./cc/reg-stack.c 1627>
13405 																	REG_NOTES: <>
13406 																	XEXP: 105
13407 																	REG_NOTE_KIND: switch (), <./cc/sched.c 4292>
13408 																	REG_P: if (), <./cc/expr.c 3309>
13409 																	REGNO: 93
13410 																	abort: <>
13411 																emit_pop_insn: 13249
13412 																emit_insn_after: <>
13413 															HARD_REGNO_NREGS: <>
13414 															REGNO: 93
13415 															GET_MODE: 139
13416 															SET_HARD_REG_BIT: <>
13417 															replace_reg: 13320
13418 															abort: <>
13419 															XEXP: 105
13420 															emit_swap_insn: 13265
13421 															find_regno_note: <>
13422 															CLEAR_HARD_REG_BIT: <>
13423 															get_hard_regnum: 13250
13424 															XINT: <>
13425 															XVECEXP: <>
13426 														REG_NOTES: <>
13427 														XEXP: 105
13428 														REG_NOTE_KIND: switch (), <./cc/sched.c 4292>
13429 														STACK_REG_P: <>
13430 														emit_pop_insn: 13249
13431 														emit_insn_after: <>
13432 													GO_IF_HARD_REG_EQUAL: <>
13433 													abort: <>
13434 													goto_block_pat: void (), <./cc/reg-stack.c 2826>
13435 														GET_CODE: 81
13436 														straighten_stack: 13244
13437 														PREV_INSN: <>
13438 														GET_RTX_FORMAT: <>
13439 														GET_RTX_LENGTH: <>
13440 														goto_block_pat: 13434
13441 														XEXP: 105
13442 														XVECLEN: <>
13443 														XVECEXP: <>
13444 														abort: <>
13445 														INSN_UID: <>
13446 														BLOCK_NUM: <>
13447 														TEST_HARD_REG_BIT: 8306
13448 														change_stack: 13245
13449 														emit_insn_after: <>
13450 														emit_jump_insn_before: <>
13451 														gen_jump: <>
13452 														record_label_references: 13106
13453 														PATTERN: <>
13454 														JUMP_LABEL: 3730
13455 														emit_barrier_after: <>
13456 														gen_label_rtx: rtx (), <./cc/emit-rtl.c 1327>
13457 														emit_label_after: <>
13458 														LABEL_REFS: <>
13459 														LABEL_NEXTREF: <>
13460 													PATTERN: <>
13461 													change_stack: 13245
13462 													emit_insn_after: <>
13463 													stack_result: 13119
13464 													REGNO: 93
13465 													HARD_REGNO_NREGS: <>
13466 													emit_pop_insn: 13249
13467 													FP_MODE_REG: <>
13468 													straighten_stack: 13244
13469 												jump_optimize: 4461
13470 											DECL_RTL: <>
13471 											GET_CODE: 81
13472 											abort: <>
13473 											XEXP: 105
13474 											XSTR: <>
13475 											assemble_start_function: <>
13476 											final_start_function: void (), <./cc/final.c 867>
13477 												NOTE_LINE_NUMBER: 177
13478 												sdbout_begin_function: 12601
13479 												xcoffout_begin_function: <>
13480 												output_source_line: 12617
13481 												leaf_renumber_regs: void (), <./cc/final.c 3089>
13482 													NEXT_INSN: <>
13483 													GET_RTX_CLASS: 141
13484 													GET_CODE: 81
13485 													leaf_renumber_regs_insn: <>
13486 													PATTERN: <>
13487 													XEXP: 105
13488 												profile_function: 12577
13489 												FUNCTION_PROLOGUE: <>
13490 												get_frame_size: 12356
13491 												profile_after_prologue: 12575
13492 												add_bb_string: 12619
13493 											final: 12557
13494 											final_end_function: void (), <./cc/final.c 1047>
13495 												fprintf: <>
13496 												sdbout_end_function: void (), <./cc/sdbout.c 1509>
13497 													sdbout_dequeue_anonymous_types: void (), <./cc/sdbout.c 951>
13498 														nreverse: <>
13499 														TREE_CHAIN: if (), <./cc/cp/search.c 1454>
13500 														TREE_VALUE: <>
13501 														TREE_ASM_WRITTEN: else if (), <./cc/dwarfout.c 3566>
13502 														sdbout_one_type: <>
13503 													MAKE_LINE_SAFE: <>
13504 													PUT_SDB_FUNCTION_END: <>
13505 												dwarfout_end_function: void (), <./cc/dwarfout.c 4995>
13506 													function_section: 12646
13507 													sprintf: <>
13508 													ASM_OUTPUT_LABEL: <>
13509 												xcoffout_end_function: <>
13510 												FUNCTION_EPILOGUE: <>
13511 												get_frame_size: 12356
13512 												output_compiler_stub: void (), <./cc/config/rs6000/apple.c 107>
13513 													TREE_CHAIN: if (), <./cc/cp/search.c 1454>
13514 													fprintf: <>
13515 													IDENTIFIER_POINTER: <>
13516 													STUB_LABEL_NAME: <>
13517 													STUB_LINE_NUMBER: <>
13518 													machopic_stub_name: char * (), <./cc/config/next/machopic.c 273>
13519 														get_identifier: <>
13520 														TREE_CHAIN: if (), <./cc/cp/search.c 1454>
13521 														TREE_VALUE: <>
13522 														IDENTIFIER_POINTER: <>
13523 														TREE_PURPOSE: 215
13524 														name_needs_quotes: int (), <./cc/config/next/machopic.c 260>
13525 															isalnum: <>
13526 														strcpy: <>
13527 														strcat: <>
13528 														perm_tree_cons: <>
13529 														TREE_USED: <>
13530 													STUB_FUNCTION_NAME: <>
13531 													machopic_validate_stub_or_non_lazy_ptr: void (), <./cc/config/next/machopic.c 319>
13532 														get_identifier: <>
13533 														TREE_CHAIN: if (), <./cc/cp/search.c 1454>
13534 														TREE_PURPOSE: 215
13535 														TREE_USED: <>
13536 														TREE_CODE: 162
13537 														TREE_VALUE: <>
13538 														TREE_SYMBOL_REFERENCED: <>
13539 													sprintf: <>
13540 													output_asm_insn: 94
13541 													strcpy: <>
13542 													strcat: <>
13543 												sdbout_end_epilogue: void (), <./cc/sdbout.c 1527>
13544 													IDENTIFIER_POINTER: <>
13545 													DECL_ASSEMBLER_NAME: <>
13546 													PUT_SDB_EPILOGUE_END: <>
13547 												dwarfout_end_epilogue: void (), <./cc/dwarfout.c 5009>
13548 													sprintf: <>
13549 													ASM_OUTPUT_LABEL: <>
13550 												xcoffout_end_epilogue: <>
13551 											assemble_end_function: <>
13552 											dbxout_function: <>
13553 											sdbout_types: <>
13554 											init_insn_lengths: void (), <./cc/final.c 563>
13555 											clear_const_double_mem: void (), <./cc/varasm.c 2138>
13556 												CONST_DOUBLE_CHAIN: <>
13557 												CONST_DOUBLE_MEM: <>
13558 											resume_temporary_allocation: 5046
13559 										TREE_THIS_VOLATILE: <>
13560 										warning: 281
13561 										DECL_EXTERNAL: else if (), <./cc/dwarfout.c 3220>
13562 										TYPE_SIZE: if (), <./cc/dwarfout.c 3636>
13563 										TREE_CODE: 162
13564 										TREE_INT_CST_LOW: <>
13565 										permanent_allocation: 2995
13566 										DECL_SAVED_INSNS: <>
13567 										DECL_ARGUMENTS: <>
13568 										DECL_STATIC_CONSTRUCTOR: <>
13569 										perm_tree_cons: <>
13570 										assemble_constructor: void (), <./cc/varasm.c 732>
13571 										DECL_STATIC_DESTRUCTOR: <>
13572 										assemble_destructor: * / void (), <./cc/varasm.c 712>
13573 										store_parm_decls: 9725
13574 										target_type: 3214
13575 										IS_AGGR_TYPE: else if (), <./cc/cp/typeck.c 6140>
13576 										note_debug_info_needed: 4983
13577 										TREE_CHAIN: if (), <./cc/cp/search.c 1454>
13578 										do_pending_stack_adjust: 3642
13579 										TYPE_BINFO: if (), <./cc/cp/search.c 454>
13580 										lookup_name: 1474
13581 										build: <>
13582 										CLASSTYPE_N_BASECLASSES: <>
13583 										get_last_insn: 1981
13584 										get_first_nonparm_insn: 10235
13585 										TYPE_HAS_DESTRUCTOR: if (), <./cc/cp/typeck.c 1728>
13586 										TYPE_BINFO_BASETYPE: <>
13587 										pushlevel: 1896
13588 										expand_start_bindings: 1909
13589 										TYPE_USES_VIRTUAL_BASECLASSES: <>
13590 										TYPE_GETS_REG_DELETE: <>
13591 										build_delete: 3259
13592 										TREE_OPERAND: <>
13593 										expand_label: void (), <./cc/stmt.c 629>
13594 											DECL_RTL: <>
13595 											bc_gen_rtx: rtx (), <./cc/bc-emit.c 832>
13596 											bc_get_bytecode_label: struct bc_label * (), <./cc/bc-emit.c 513>
13597 											bc_emit_bytecode_labeldef: 4084
13598 											BYTECODE_BC_LABEL: <>
13599 											do_pending_stack_adjust: 3642
13600 											emit_label: <>
13601 											label_rtx: 9820
13602 											DECL_NAME: 250
13603 											LABEL_NAME: <>
13604 											IDENTIFIER_POINTER: <>
13605 											oballoc: 530
13606 										expand_start_cond: 3624
13607 										expand_expr_stmt: 3924
13608 										nreverse: <>
13609 										copy_list: 2833
13610 										CLASSTYPE_VBASECLASSES: <>
13611 										TYPE_NEEDS_DESTRUCTOR: <>
13612 										BINFO_TYPE: <>
13613 										convert_pointer_to_vbase: <>
13614 										build_pointer_type: 390
13615 										expand_end_cond: 4119
13616 										c_sizeof: tree (), <./cc/c-typeck.c 844>
13617 											TREE_CODE: 162
13618 											pedwarn: <>
13619 											size_int: <>
13620 											TYPE_SIZE: if (), <./cc/dwarfout.c 3636>
13621 											error: 52
13622 											size_binop: <>
13623 											TYPE_PRECISION: 211
13624 											force_fit_type: 3470
13625 											TREE_CONSTANT_OVERFLOW: <>
13626 											TREE_OVERFLOW: <>
13627 										build_method_call: <>
13628 										build_indirect_ref: 329
13629 										build1: 334
13630 										tree_cons: <>
13631 										build_tree_list: <>
13632 										build_x_delete: 3429
13633 										expand_end_bindings: <>
13634 										getdecls: 2026
13635 										start_sequence: void (), <./cc/emit-rtl.c 2919>
13636 										expand_direct_vtbls_init: 4265
13637 										expand_indirect_vtbls_init: 4248
13638 										build_binary_op: 164
13639 										get_insns: rtx (), <./cc/emit-rtl.c 1696>
13640 										end_sequence: 479
13641 										previous_insn: 10240
13642 										emit_insns_after: <>
13643 										DECL_CONSTRUCTOR_P: if (), <./cc/cp/decl2.c 951>
13644 										end_protect_partials: void (), <./cc/cp/except.c 1613>
13645 											end_protect: 4109
13646 											TREE_VALUE: <>
13647 											TREE_CHAIN: if (), <./cc/cp/search.c 1454>
13648 										c_expand_return: 10403
13649 										build_decl: 888
13650 										CLASSTYPE_ABSTRACT_VIRTUALS: 5060
13651 										DECL_RETURNS_FIRST_ARG: <>
13652 										build_modify_expr: <>
13653 										build_new: 9136
13654 										build_default_constructor: <>
13655 										IDENTIFIER_LENGTH: <>
13656 										expand_gc_prologue_and_epilogue: void (), <./cc/cp/gc.c 1484>
13657 											get_last_insn: 1981
13658 											get_first_nonparm_insn: 10235
13659 											previous_insn: 10240
13660 											build_function_call: 3506
13661 											build_tree_list: <>
13662 											size_int: <>
13663 											expand_expr_stmt: 3924
13664 											reorder_insns: <>
13665 											next_insn: 12788
13666 											TREE_VALUE: <>
13667 										DECL_SOURCE_FILE: <>
13668 										DECL_SOURCE_LINE: 182
13669 										expand_goto: void (), <./cc/stmt.c 681>
13670 											expand_goto_internal: 4050
13671 											label_rtx: 9820
13672 											decl_function_context: <>
13673 											find_function_data: <>
13674 											gen_rtx: <>
13675 											LABEL_REF_NONLOCAL_P: <>
13676 											emit_insn: <>
13677 											gen_nonlocal_goto: <>
13678 											lookup_static_chain: 8472
13679 											copy_rtx: <>
13680 											emit_move_insn: <>
13681 											copy_to_reg: <>
13682 											replace_rtx: <>
13683 											emit_stack_restore: <>
13684 											emit_indirect_jump: void (), <./cc/optabs.c 3054>
13685 												copy_to_mode_reg: <>
13686 												emit_jump_insn: <>
13687 												gen_indirect_jump: <>
13688 												emit_barrier: rtx (), <./cc/emit-rtl.c 2761>
13689 										emit_label: <>
13690 										fixup_result_decl: void (), <./cc/cp/expr.c 256>
13691 											REG_P: if (), <./cc/expr.c 3309>
13692 											REGNO: 93
13693 											FUNCTION_OUTGOING_VALUE: <>
13694 											TREE_TYPE: 160
13695 											FUNCTION_VALUE: <>
13696 											REG_FUNCTION_VALUE_P: <>
13697 											store_expr: <>
13698 											emit_insn: <>
13699 											gen_rtx: <>
13700 										emit_jump: 3641
13701 										expand_exception_blocks: void (), <./cc/cp/except.c 1445>
13702 											start_sequence: void (), <./cc/emit-rtl.c 2919>
13703 											gen_label_rtx: rtx (), <./cc/emit-rtl.c 1327>
13704 											emit_jump: 3641
13705 											emit_insns: <>
13706 											expand_leftover_cleanups: rtx (), <./cc/cp/except.c 988>
13707 												dequeue_eh_entry: <>
13708 												emit_label: <>
13709 												expand_expr: <>
13710 												expand_internal_throw: <>
13711 												gen_rtx: <>
13712 												abort: <>
13713 												free: <>
13714 											get_insns: rtx (), <./cc/emit-rtl.c 1696>
13715 											end_sequence: 479
13716 											TYPE_RAISES_EXCEPTIONS: <>
13717 											TREE_TYPE: 160
13718 											expand_end_eh_spec: void (), <./cc/cp/except.c 1360>
13719 												gen_label_rtx: rtx (), <./cc/emit-rtl.c 1327>
13720 												gen_reg_rtx: 523
13721 												TYPE_MODE: <>
13722 												make_node: 307
13723 												TREE_TYPE: 160
13724 												RTL_EXPR_RTL: <>
13725 												TREE_SIDE_EFFECTS: if (), <./cc/cp/typeck.c 4958>
13726 												start_sequence_for_rtl_expr: 9200
13727 												emit_move_insn: <>
13728 												gen_rtx: <>
13729 												emit_jump: 3641
13730 												emit_label: <>
13731 												jumpif: void (), <./cc/expr.c 9021>
13732 													do_jump: 3637
13733 												make_tree: <>
13734 												do_function_call: <>
13735 												assemble_external: <>
13736 												TREE_OPERAND: <>
13737 												emit_barrier: rtx (), <./cc/emit-rtl.c 2761>
13738 												RTL_EXPR_SEQUENCE: <>
13739 												get_insns: rtx (), <./cc/emit-rtl.c 1696>
13740 												end_sequence: 479
13741 												start_protect: 3911
13742 												end_protect: 4109
13743 												TREE_VALUE: <>
13744 												tree_cons: <>
13745 												build_eh_type_type: 9124
13746 												build_function_call: 3506
13747 												TREE_CHAIN: if (), <./cc/cp/search.c 1454>
13748 												emit_indirect_jump: 13684
13749 											push_to_sequence: 1978
13750 											push_rtl_perm: 3917
13751 											assemble_external: <>
13752 											TREE_OPERAND: <>
13753 											pop_rtl_from_perm: 3919
13754 											LABEL_PRESERVE_P: <>
13755 											emit_label: <>
13756 											enqueue_eh_entry: <>
13757 											copy_eh_entry: <>
13758 											expand_expr: <>
13759 											emit_barrier: rtx (), <./cc/emit-rtl.c 2761>
13760 											end_eh_unwinder:  (), <./cc/cp/except.c 1697>
13761 												doing_eh: 3912
13762 												make_node: 307
13763 												TREE_TYPE: 160
13764 												RTL_EXPR_RTL: <>
13765 												TREE_SIDE_EFFECTS: if (), <./cc/cp/typeck.c 4958>
13766 												start_sequence_for_rtl_expr: 9200
13767 												expand_builtin_return_addr: <>
13768 												copy_to_reg: <>
13769 												plus_constant: <>
13770 												emit_move_insn: <>
13771 												DECL_RTL: <>
13772 												gen_rtx: <>
13773 												gen_label_rtx: rtx (), <./cc/emit-rtl.c 1327>
13774 												emit_jump: 3641
13775 												emit_label: <>
13776 												do_function_call: <>
13777 												RTL_EXPR_SEQUENCE: <>
13778 												get_insns: rtx (), <./cc/emit-rtl.c 1696>
13779 												end_sequence: 479
13780 												end_protect: 4109
13781 										my_friendly_abort: 357
13782 										pop_nested_class: 5216
13783 										pop_memoized_context: void (), <./cc/cp/search.c 353>
13784 										TREE_ASM_WRITTEN: else if (), <./cc/dwarfout.c 3566>
13785 										DECL_NOT_REALLY_EXTERN: <>
13786 										mark_inline_for_output: 6489
13787 										cp_warning: 279
13788 										cp_pedwarn: 1314
13789 										cadillac_finish_function: void (), <./cc/cp/edsel.c 872>
13790 											cadillac_printf: 2497
13791 											lang_printable_name: 6006
13792 											pop_context_level: <>
13793 											my_friendly_abort: 357
13794 											CWriteHeader: <>
13795 											CWriteLength: <>
13796 											CWriteTopLevel: 2503
13797 											CWriteRequestBuffer: <>
13798 											cadillac_process_requests: 2524
13799 										TYPE_METHOD_BASETYPE: <>
13800 									DECL_INLINE: if (), <./cc/dwarfout.c 2737>
13801 									function_cannot_inline_p: <>
13802 									extract_interface_info: 2875
13803 									pop_cp_function_context: void (), <./cc/cp/decl.c 12923>
13804 										TREE_CHAIN: if (), <./cc/cp/search.c 1454>
13805 										DECL_NAME: 250
13806 										TREE_VALUE: <>
13807 										SET_IDENTIFIER_LABEL_VALUE: <>
13808 										DECL_SAVED_INSNS: <>
13809 										DECL_INITIAL: 168
13810 										DECL_ARGUMENTS: <>
13811 										pop_function_context_from: 1966
13812 										free: <>
13813 								obstack_free: 397
13814 								extract_interface_info: 2875
13815 								my_friendly_assert: 379
13816 								push_template_decls: 2161
13817 								feed_input: 5609
13818 								build_tree_list: <>
13819 								DECL_INLINE: if (), <./cc/dwarfout.c 2737>
13820 						done: 61
13821 						string_constant: <>
13822 						put_back: 9614
13823 						getc: <>
13824 						ungetc: <>
13825 						isalnum: <>
13826 						extend_token_buffer: char * (), <./cc/cp/lex.c 2161>
13827 						is_reserved_word: <>
13828 						TREE_CODE: 162
13829 						IDENTIFIER_GLOBAL_VALUE: <>
13830 						real_yylex: 9616
13831 						get_identifier: <>
13832 						TREE_STRING_POINTER: <>
13833 						my_friendly_abort: 357
13834 						strcmp: 157
13835 						lookup_name: 1474
13836 						GNU_xref_ref: void (), <./cc/cp/xref.c 324>
13837 							find_file: 1905
13838 							fprintf: <>
13839 							fctname: 3205
13840 						THIS_NAME_P: <>
13841 						VPTR_NAME_P: <>
13842 						DESTRUCTOR_NAME_P: <>
13843 						VTABLE_NAME_P: <>
13844 						TEMP_NAME_P: <>
13845 						ANON_AGGRNAME_P: <>
13846 						ANON_PARMNAME_P: <>
13847 						is_class_name: tree (), <./cc/objc-act.c 2821>
13848 							lookup_interface: 1192
13849 							TREE_CHAIN: if (), <./cc/cp/search.c 1454>
13850 							TREE_VALUE: <>
13851 							TREE_PURPOSE: 215
13852 						IDENTIFIER_LOCAL_VALUE: <>
13853 						DECL_IGNORED_P: if (), <./cc/dwarfout.c 4741>
13854 						TREE_READONLY: if (), <./cc/cp/decl2.c 1229>
13855 						DECL_INITIAL: 168
13856 						NEW: <>
13857 						global_bindings_p: 1509
13858 						isdigit: if (), <./cc/cplus-dem.c 1861>
13859 						setjmp: else if (), <./cc/fold-const.c 1489>
13860 						set_float_handler: 494
13861 						REAL_VALUE_ATOF: <>
13862 						TYPE_MODE: <>
13863 						REAL_VALUE_ISINF: <>
13864 						REAL_VALUES_LESS: <>
13865 						IDENTIFIER_POINTER: <>
13866 						DECL_NAME: 250
13867 						TYPE_NAME: 271
13868 						build_real: tree (), <./cc/tree.c 1311>
13869 							CHECK_FLOAT_VALUE: <>
13870 							TYPE_MODE: <>
13871 							make_node: 307
13872 							TREE_TYPE: 160
13873 							TREE_REAL_CST: <>
13874 							TREE_OVERFLOW: <>
13875 							TREE_CONSTANT_OVERFLOW: <>
13876 						TYPE_PRECISION: 211
13877 						build_int_2: <>
13878 						TREE_TYPE: 160
13879 						int_fits_type_p: <>
13880 						TREE_INT_CST_HIGH: <>
13881 						TREE_UNSIGNED: 678
13882 						readescape: int (), <./cc/cp/lex.c 2864>
13883 							getch: 9606
13884 							isxdigit: <>
13885 							put_back: 9614
13886 							TYPE_PRECISION: 211
13887 						isprint: <>
13888 						MAP_CHARACTER: <>
13889 						mbtowc: <>
13890 						alloca: <>
13891 						mbstowcs: <>
13892 						build_string: 6605
13893 						build_objc_string: tree (), <./cc/objc-act.c 1628>
13894 							build_string: 6605
13895 							TREE_SET_CODE: <>
13896 							abort: <>
13897 						LSHIFT: <>
13898 						build1: 334
13899 					TREE_CODE: 162
13900 					perm_tree_cons: <>
13901 					get_identifier: <>
13902 					TREE_STRING_POINTER: <>
13903 					IDENTIFIER_CLASS_VALUE: <>
13904 					get_time_identifier: 2877
13905 					FILE_NAME_NONDIRECTORY: <>
13906 					put_back: 9614
13907 					TREE_INT_CST_LOW: <>
13908 					TREE_INT_CST_HIGH: <>
13909 					permalloc: 2873
13910 					interface_strcmp: int (), <./cc/cp/lex.c 1214>
13911 						index: 3554
13912 					strcmp: 157
13913 					handle_sysv_pragma: int (), <./cc/c-lex.c 706>
13914 						yylex: int (), <./cc/c-lex.c 937>
13915 							getc: <>
13916 							ungetc: <>
13917 							scan_string: char * (), <./cc/bi-lexer.c 74>
13918 								getc: <>
13919 								xmalloc: char * (), <./cc/bi-lexer.c 30>
13920 									malloc: <>
13921 									fprintf: <>
13922 									exit: 5
13923 								xrealloc: char * (), <./cc/bi-lexer.c 49>
13924 									realloc: <>
13925 									malloc: <>
13926 									fprintf: <>
13927 									exit: 5
13928 								ungetc: <>
13929 							strcmp: 157
13930 							free: <>
13931 							fprintf: <>
13932 							num_tokens: 9240
13933 							nth_token: struct token (), <./cc/cp/spew.c 90>
13934 							TREE_PERMANENT: if (), <./cc/cp/decl.c 10271>
13935 							probe_obstack: int (), <./cc/cp/spew.c 216>
13936 							copy_node: 874
13937 							real_yylex: 9616
13938 							add_token: <>
13939 							consume_token: void (), <./cc/cp/spew.c 109>
13940 							debug_yychar: int (), <./cc/cp/spew.c 439>
13941 								fprintf: <>
13942 								debug_yytranslate: <>
13943 							scan_tokens: void (), <./cc/cp/spew.c 142>
13944 								num_tokens: 9240
13945 								nth_token: struct token (), <./cc/cp/spew.c 90>
13946 								obstack_blank: void () (), <./cc/obstack.c 443>
13947 								obstack_next_free: <>
13948 								real_yylex: 9616
13949 							lookup_name: 1474
13950 							identifier_type: __inline int (), <./cc/cp/lex.c 3025>
13951 								TREE_CODE: 162
13952 								DECL_TEMPLATE_IS_CLASS: <>
13953 							identifier_typedecl_value: <>
13954 							DECL_NESTED_TYPENAME: <>
13955 							my_friendly_abort: 357
13956 							do_aggr: int (), <./cc/cp/spew.c 400>
13957 								scan_tokens: 13943
13958 								nth_token: struct token (), <./cc/cp/spew.c 90>
13959 								my_friendly_abort: 357
13960 							skip_white_space: 9618
13961 							string_constant: <>
13962 							isalnum: <>
13963 							extend_token_buffer: char * (), <./cc/c-lex.c 365>
13964 								xrealloc: 420
13965 							is_reserved_word: <>
13966 							TREE_CODE: 162
13967 							pedwarn: <>
13968 							error: 52
13969 							get_identifier: <>
13970 							DECL_IGNORED_P: if (), <./cc/dwarfout.c 4741>
13971 							TREE_READONLY: if (), <./cc/cp/decl2.c 1229>
13972 							DECL_INITIAL: 168
13973 							build_string: 6605
13974 							TREE_STRING_LENGTH: <>
13975 							TREE_STRING_POINTER: <>
13976 							is_class_name: 13847
13977 							isdigit: if (), <./cc/cplus-dem.c 1861>
13978 							done: 61
13979 							setjmp: else if (), <./cc/fold-const.c 1489>
13980 							alloca: <>
13981 							bcopy: <>
13982 							set_float_handler: 494
13983 							REAL_VALUE_ATOF: <>
13984 							TYPE_MODE: <>
13985 							REAL_VALUE_ISINF: <>
13986 							warning: 281
13987 							REAL_VALUES_LESS: <>
13988 							REAL_VALUE_ISNAN: if (), <./cc/fold-const.c 1483>
13989 							build_complex: 9881
13990 							convert: 427
13991 							build_real: 13868
13992 							TYPE_PRECISION: 211
13993 							build_int_2: <>
13994 							TREE_TYPE: 160
13995 							int_fits_type_p: <>
13996 							TREE_INT_CST_HIGH: <>
13997 							TREE_UNSIGNED: 678
13998 							unsigned_type: 699
13999 							TREE_OVERFLOW: <>
14000 							TREE_CONSTANT_OVERFLOW: <>
14001 							readescape: int (), <./cc/c-lex.c 749>
14002 								getc: <>
14003 								warning: 281
14004 								ungetc: <>
14005 								error: 52
14006 								TYPE_PRECISION: 211
14007 								pedwarn: <>
14008 							isprint: <>
14009 							MAP_CHARACTER: <>
14010 							mbtowc: <>
14011 							mbstowcs: <>
14012 							bzero: <>
14013 							build_objc_string: 13893
14014 							LSHIFT: <>
14015 						handle_pragma_token: void (), <./cc/c-pragma.c 43>
14016 							handle_pragma_weak: <>
14017 							TREE_CODE: 162
14018 							strcmp: 157
14019 							IDENTIFIER_POINTER: <>
14020 							TREE_INT_CST_HIGH: <>
14021 							TREE_INT_CST_LOW: <>
14022 							abort: <>
14023 						getc: <>
14024 						ungetc: <>
14025 					ungetc: <>
14026 					HANDLE_PRAGMA: <>
14027 					dwarfout_define: <>
14028 					get_directive_line: <>
14029 					dwarfout_undef: <>
14030 					ASM_OUTPUT_IDENT: <>
14031 					sorry: <>
14032 					get_last_nonwhite_on_line: int (), <./cc/cp/lex.c 2173>
14033 					my_get_run_time: <>
14034 					IDENTIFIER_LOCAL_VALUE: <>
14035 					cadillac_note_source: void (), <./cc/cp/edsel.c 914>
14036 					TREE_STRING_LENGTH: <>
14037 					strcpy: <>
14038 					GNU_xref_file: void (), <./cc/cp/xref.c 203>
14039 						open_xref_file: void (), <./cc/cp/xref.c 810>
14040 							XREF_FILE_NAME: <>
14041 							rindex: <>
14042 							sprintf: <>
14043 							strcpy: <>
14044 							strcat: <>
14045 							fopen: <>
14046 							error: 52
14047 						fprintf: <>
14048 						find_file: 1905
14049 						PALLOC: <>
14050 						SALLOC: <>
14051 						getpwd: char * (), <./cc/getpwd.c 93>
14052 							getenv: <>
14053 							stat: <>
14054 							getcwd: <>
14055 							xmalloc: 416
14056 							free: <>
14057 						FILE_NAME_ABSOLUTE_P: <>
14058 						malloc: <>
14059 						strlen: <>
14060 						sprintf: <>
14061 						fctname: 3205
14062 					walk_vtables: <>
14063 					set_typedecl_interface_info: void (), <./cc/cp/lex.c 1252>
14064 						get_time_identifier: 2877
14065 						DECL_SOURCE_FILE: <>
14066 						IDENTIFIER_CLASS_VALUE: <>
14067 						TREE_TYPE: 160
14068 						CLASSTYPE_INTERFACE_ONLY: <>
14069 						TREE_INT_CST_LOW: <>
14070 						interface_strcmp: 13910
14071 						FILE_NAME_NONDIRECTORY: <>
14072 					set_vardecl_interface_info: void (), <./cc/cp/lex.c 1264>
14073 						DECL_CONTEXT: 267
14074 						CLASSTYPE_INTERFACE_KNOWN: <>
14075 						CLASSTYPE_INTERFACE_ONLY: <>
14076 						set_typedecl_interface_info: 14063
14077 						TYPE_NAME: 271
14078 						CLASSTYPE_VTABLE_NEEDS_WRITING: <>
14079 						DECL_EXTERNAL: else if (), <./cc/dwarfout.c 3220>
14080 						TREE_PUBLIC: 194
14081 					extract_interface_info: 2875
14082 					xmalloc: 1643
14083 					dwarfout_start_new_source_file: <>
14084 					cadillac_push_source: void (), <./cc/cp/edsel.c 923>
14085 						cadillac_switch_source: void (), <./cc/cp/edsel.c 920>
14086 							CWriteHeader: <>
14087 							CWriteSomething: <>
14088 							CWriteVstring0: <>
14089 							CWriteLength: <>
14090 							CWriteRequestBuffer: <>
14091 							cadillac_process_requests: 2524
14092 					cadillac_pop_source: void (), <./cc/cp/edsel.c 926>
14093 						cadillac_switch_source: 14085
14094 					free: <>
14095 					dwarfout_resume_previous_source_file: <>
14096 					cadillac_switch_source: 14085
14097 					getc: <>
14098 					yylex: 13914
14099 					error: 52
14100 					warning: 281
14101 				put_back: 9614
14102 				cadillac_start: void (), <./cc/cp/edsel.c 859>
14103 					CWriteHeader: <>
14104 					CWriteLength: <>
14105 					CWriteRequestBuffer: <>
14106 					cadillac_process_requests: 2524
14107 				GNU_xref_begin: void (), <./cc/cp/xref.c 159>
14108 					fatal: 49
14109 					STRNEQ: <>
14110 					open_xref_file: 14039
14111 					GNU_xref_file: 14038
14112 				init_repo: void (), <./cc/cp/repo.c 282>
14113 					open_repo_file: void (), <./cc/cp/repo.c 246>
14114 						get_base_filename: char * (), <./cc/cp/repo.c 198>
14115 							getenv: <>
14116 							save_string: char * (), <./cc/cp/repo.c 190>
14117 								obstack_copy0: <>
14118 							warning: 281
14119 							rindex: <>
14120 						rindex: <>
14121 						strlen: <>
14122 						obstack_grow: void () (), <./cc/obstack.c 420>
14123 						obstack_copy0: <>
14124 						fopen: <>
14125 					afgets: char * (), <./cc/cp/repo.c 269>
14126 						getc: <>
14127 						obstack_1grow: void () (), <./cc/obstack.c 436>
14128 						obstack_object_size: int () (), <./cc/obstack.c 408>
14129 						obstack_finish: <>
14130 					get_identifier: <>
14131 					IDENTIFIER_REPO_CHOSEN: <>
14132 					perm_tree_cons: <>
14133 					error: 52
14134 					obstack_free: 397
14135 				objc_lang_init: void (), <./cc/objc-act.c 783>
14136 					ungetc: <>
14137 					check_newline: 9605
14138 					strlen: <>
14139 					xmalloc: 416
14140 					strcpy: <>
14141 					strcat: <>
14142 					fopen: FILE * (), <./cc/cccp-winnt.c 10346>
14143 					pfatal_with_name: 7154
14144 					init_objc: void (), <./cc/obcp/obcp-act.c 9211>
14145 						gcc_obstack_init: 5537
14146 						obstack_finish: <>
14147 						xrealloc: 420
14148 						bcopy: <>
14149 						xmalloc: 416
14150 						hash_init: void (), <./cc/obcp/obcp-act.c 6382>
14151 							xmalloc: 416
14152 							perror: <>
14153 						synth_module_prologue: void (), <./cc/obcp/obcp-act.c 1434>
14154 							push_lang_context: 9495
14155 							get_identifier: <>
14156 							xref_tag: 2280
14157 							build_pointer_type: 390
14158 							objc_declare_class: void (), <./cc/objc-act.c 2780>
14159 								objc_fatal: void (), <./cc/obcp/obcp-act.c 829>
14160 									fatal: 49
14161 								TREE_CHAIN: if (), <./cc/cp/search.c 1454>
14162 								TREE_VALUE: <>
14163 								lookup_name: 1474
14164 								is_class_name: 13847
14165 								error: 52
14166 								IDENTIFIER_POINTER: <>
14167 								error_with_decl: <>
14168 								push_lang_context: 9495
14169 								xref_tag: 2280
14170 								pop_lang_context: 9511
14171 								TREE_STATIC_TEMPLATE: <>
14172 								tree_cons: <>
14173 								objc_fatal: void (), <./cc/objc-act.c 850>
14174 									fatal: 49
14175 							tree_cons: <>
14176 							build_function_type: 1210
14177 							build_decl: 888
14178 							DECL_EXTERNAL: else if (), <./cc/dwarfout.c 3220>
14179 							TREE_PUBLIC: 194
14180 							DECL_INLINE: if (), <./cc/dwarfout.c 2737>
14181 							DECL_ARTIFICIAL: 278
14182 							DECL_BUILT_IN_NONANSI: <>
14183 							make_decl_rtl: 1326
14184 							pushdecl: <>
14185 							builtin_function: 9302
14186 							fatal: 49
14187 							build_array_type: 974
14188 							layout_type: <>
14189 							create_builtin_decl: tree (), <./cc/obcp/obcp-act.c 1376>
14190 								build_decl: 888
14191 								get_identifier: <>
14192 								build_lang_field_decl: 887
14193 								TREE_STATIC: if (), <./cc/stor-layout.c 332>
14194 								DECL_EXTERNAL: else if (), <./cc/dwarfout.c 3220>
14195 								make_decl_rtl: 1326
14196 								pushdecl: <>
14197 								DECL_ARTIFICIAL: 278
14198 							DECL_SIZE: <>
14199 							TREE_USED: <>
14200 							generate_forward_declaration_to_string_table: void (), <./cc/obcp/obcp-act.c 2267>
14201 								tree_cons: <>
14202 								build_nt: <>
14203 								get_identifier: <>
14204 								define_decl: tree (), <./cc/obcp/obcp-act.c 918>
14205 									start_decl: 1618
14206 									finish_decl: 2533
14207 							pop_lang_context: 9511
14208 					xmalloc: 1643
14209 					fopen: <>
14210 					init_objc: void (), <./cc/objc-act.c 9206>
14211 						gcc_obstack_init: 5537
14212 						obstack_finish: <>
14213 						xrealloc: 420
14214 						bcopy: <>
14215 						xmalloc: 1643
14216 						hash_init: void (), <./cc/objc-act.c 6353>
14217 							hash_table_init: hash * (), <./cc/objc-act.c 6335>
14218 								xmalloc: 1643
14219 								perror: <>
14220 						synth_module_prologue: void (), <./cc/objc-act.c 1428>
14221 							push_lang_context: 9495
14222 							get_identifier: <>
14223 							xref_tag: 2280
14224 							build_pointer_type: 390
14225 							build_function_type: 1210
14226 							tree_cons: <>
14227 							build_decl: 888
14228 							DECL_EXTERNAL: else if (), <./cc/dwarfout.c 3220>
14229 							TREE_PUBLIC: 194
14230 							DECL_INLINE: if (), <./cc/dwarfout.c 2737>
14231 							DECL_ARTIFICIAL: 278
14232 							DECL_BUILT_IN_NONANSI: <>
14233 							make_decl_rtl: 1326
14234 							pushdecl: <>
14235 							builtin_function: 9302
14236 							fatal: 49
14237 							build_array_type: 974
14238 							layout_type: <>
14239 							create_builtin_decl: tree (), <./cc/objc-act.c 1378>
14240 								build_lang_field_decl: 887
14241 								get_identifier: <>
14242 								build_decl: 888
14243 								TREE_STATIC: if (), <./cc/stor-layout.c 332>
14244 								make_decl_rtl: 1326
14245 								pushdecl: <>
14246 								DECL_ARTIFICIAL: 278
14247 							DECL_SIZE: <>
14248 							TREE_USED: <>
14249 							generate_forward_declaration_to_string_table: void (), <./cc/objc-act.c 2240>
14250 								tree_cons: <>
14251 								build_nt: <>
14252 								get_identifier: <>
14253 								define_decl: tree (), <./cc/objc-act.c 945>
14254 									start_decl: 1618
14255 									finish_decl: 2533
14256 							pop_lang_context: 9511
14257 			ASM_FILE_START: <>
14258 			fprintf: <>
14259 			ASM_IDENTIFY_GCC: <>
14260 			ASM_IDENTIFY_LANGUAGE: <>
14261 			error: 52
14262 			assemble_zeros: void (), <./cc/varasm.c 871>
14263 			TIMEVAR: <>
14264 			dbxout_init: <>
14265 			getdecls: 2026
14266 			sdbout_init: void (), <./cc/sdbout.c 284>
14267 				TREE_CHAIN: if (), <./cc/cp/search.c 1454>
14268 				DECL_NAME: 250
14269 				IDENTIFIER_POINTER: <>
14270 				strcmp: 157
14271 				sdbout_symbol: <>
14272 				sdbout_typedefs: <>
14273 			dwarfout_init: <>
14274 			init_final: void (), <./cc/final.c 293>
14275 				xmalloc: 416
14276 			get_run_time: 10709
14277 			yyparse: 7178
14278 			global_bindings_p: 1509
14279 			poplevel: 1949
14280 			list_length: 1446
14281 			alloca: <>
14282 			TREE_CHAIN: if (), <./cc/cp/search.c 1454>
14283 			DECL_DEFER_OUTPUT: <>
14284 			TREE_CODE: 162
14285 			DECL_SIZE: <>
14286 			TREE_ASM_WRITTEN: else if (), <./cc/dwarfout.c 3566>
14287 			DECL_EXTERNAL: else if (), <./cc/dwarfout.c 3220>
14288 			TREE_STATIC: if (), <./cc/stor-layout.c 332>
14289 			TREE_READONLY: if (), <./cc/cp/decl2.c 1229>
14290 			TREE_PUBLIC: 194
14291 			TREE_SYMBOL_REFERENCED: <>
14292 			DECL_ASSEMBLER_NAME: <>
14293 			rest_of_decl_compilation: 2969
14294 			DECL_INITIAL: 168
14295 			DECL_SAVED_INSNS: <>
14296 			temporary_allocation: 1820
14297 			output_inline_function: <>
14298 			permanent_allocation: 2995
14299 			DECL_RTL: <>
14300 			pedwarn_with_decl: <>
14301 			assemble_external: <>
14302 			DECL_IN_SYSTEM_HEADER: <>
14303 			TREE_USED: <>
14304 			DECL_REGISTER: <>
14305 			DECL_NAME: 250
14306 			warning_with_decl: <>
14307 			sdbout_symbol: <>
14308 			GET_CODE: 81
14309 			sdbout_toplevel_data: <>
14310 			dwarfout_file_scope_decl: <>
14311 			weak_finish: void (), <./cc/varasm.c 4110>
14312 			dbxout_finish: <>
14313 			dwarfout_finish: void (), <./cc/dwarfout.c 5472>
14314 			machopic_finish: void (), <./cc/config/next/machopic.c 829>
14315 				TREE_CHAIN: if (), <./cc/cp/search.c 1454>
14316 				IDENTIFIER_POINTER: <>
14317 				TREE_VALUE: <>
14318 				TREE_PURPOSE: 215
14319 				lookup_name: 1474
14320 				TREE_USED: <>
14321 				TREE_CODE: 162
14322 				DECL_INLINE: if (), <./cc/dwarfout.c 2737>
14323 				TREE_PUBLIC: 194
14324 				TREE_ASM_WRITTEN: else if (), <./cc/dwarfout.c 3566>
14325 				strcpy: <>
14326 				machopic_output_stub: void (), <./cc/config/i386/next.c 10>
14327 				machopic_ident_defined_p: <>
14328 				DECL_PRIVATE_EXTERN: <>
14329 				data_section: 9909
14330 				assemble_align: void (), <./cc/varasm.c 924>
14331 				assemble_label: void (), <./cc/varasm.c 1607>
14332 				assemble_integer: 12583
14333 				gen_rtx: <>
14334 				GET_MODE_SIZE: 461
14335 				machopic_nl_symbol_ptr_section: <>
14336 				assemble_name: <>
14337 				fprintf: <>
14338 			end_final: void (), <./cc/final.c 311>
14339 				exact_log2:  () >= 0 (nzb (true_code == EQ && true_val == const0_rtx && () (reg_mentioned_p () (known_cond (), pc_rtx, pc_rtx, 0, 0 (reg_mentioned_p () (known_cond (), pc_rtx, pc_rtx, 0, 0 (XEXP (), swapped false true (XEXP (), swapped true false (x, 1 (x, 2 (cond (comparison_p && reversible_comparison_p () && () (true_code (XEXP (), gen_binary () (XEXP (), false (XEXP (), true (x, 0 (rtx_equal_p () && ! side_effects_p () (GET_MODE_CLASS () == MODE_INT && GET_CODE () == NEG && rtx_equal_p () && comparison_p && rtx_equal_p () && ! side_effects_p () (true_code (ABS, mode, mode, true (NEG, mode, mode, gen_unary () (() && comparison_p && rtx_equal_p () && rtx_equal_p () && ! side_effects_p () (true_code (SMAX, mode, true, false (SMIN, mode, true, false (UMAX, mode, true, false (UMIN, mode, true, false (comparison_p && mode != VOIDmode && ! side_effects_p () (true, SET (false, SET (cond, 0 (cond, 1 (() && rtx_equal_p () (t, 1 (t (() && rtx_equal_p () (t, 0 (t (GET_CODE () == SIGN_EXTEND && () && GET_CODE () == SUBREG && subreg_lowpart_p () && rtx_equal_p () && () (XEXP (), 1 (XEXP () (XEXP () (GET_CODE () == SIGN_EXTEND && () && GET_CODE () == SUBREG && subreg_lowpart_p () && rtx_equal_p () && () (XEXP (), 0 (XEXP () (XEXP () (GET_CODE () == ZERO_EXTEND && () && GET_CODE () == SUBREG && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT && subreg_lowpart_p () && rtx_equal_p () && () (XEXP (), 1 (XEXP () (XEXP () (GET_CODE () == ZERO_EXTEND && () && GET_CODE () == SUBREG && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT && subreg_lowpart_p () && rtx_equal_p () && () (XEXP (), 0 (XEXP () (XEXP () (z (gen_binary (), pc_rtx, pc_rtx, 0, 0 (MULT, m, temp, gen_binary () (temp, pc_rtx, pc_rtx, 0, 0 (op, m, gen_lowpart_for_combine (), temp (extend_op != NIL (extend_op, mode, m, temp (true_code == NE && XEXP () == const0_rtx && false == const0_rtx && GET_CODE () == CONST_INT && () (NULL_RTX, ASHIFT, mode, gen_lowpart_for_combine (), i (x (x (x (src (src (dest (GET_CODE () == PC && GET_CODE () == RETURN (GET_MODE_CLASS () == MODE_INT (src, mode, GET_MODE_MASK (), NULL_RTX, 0 (() && () != 0 && () && GET_RTX_CLASS () == && rtx_equal_p () (*cc_use (dest (GET_CODE () == COMPARE (src, 0 (src, 1 (old_code, & op0, & op1 (new_code, op0, op1 (compare_mode != GET_MODE () (dest (REG, compare_mode, regno (regno < FIRST_PSEUDO_REGISTER || () (regno >= FIRST_PSEUDO_REGISTER (regno_reg_rtx[regno], new_dest (SET_DEST (), new_dest (XEXP (), new_dest (new_code != old_code (*cc_use, gen_rtx_combine () (() && ! other_changed && op1 == const0_rtx && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT && exact_log2 () >= 0 (other_insn (() (*cc_use, old_code (XOR, GET_MODE (), op0, GEN_INT () (other_changed (op1 == const0_rtx && dest == cc0_rtx (SET_SRC (), op0 (GET_CODE () != COMPARE || GET_MODE () != compare_mode (SET_SRC (), gen_rtx_combine () (x (XEXP (), op0 (XEXP (), op1 (src, SET (SET_SRC (), src (GET_CODE () == SUBREG && subreg_lowpart_p () && GET_RTX_CLASS () != && () && () && ! () && () (SET_DEST (), gen_lowpart_for_combine () (SET_SRC (), SUBREG_REG () (x (x (GET_CODE () == SUBREG && subreg_lowpart_p () && LOAD_EXTEND_OP () != NIL && SUBREG_WORD () == 0 && () && GET_CODE () == MEM (SET_SRC (), gen_rtx_combine () (x (GET_CODE () != PC && GET_CODE () == IF_THEN_ELSE && GET_MODE_CLASS () == MODE_INT && () && XEXP () == const0_rtx && GET_MODE () == GET_MODE () && ! can_conditionally_move_p () && () && ! side_effects_p () (GET_CODE () == NE XEXP () XEXP () (GET_CODE () == NE XEXP () XEXP () (GET_CODE () == IOR && rtx_equal_p () (true, 1 (GET_CODE () == IOR && rtx_equal_p () (true, 0 (GET_CODE () == IOR && rtx_equal_p () (false, 1 (GET_CODE () == IOR && rtx_equal_p () (false, 0 (AND, GET_MODE (), XEXP (), true (AND, GET_MODE (), gen_unary (), false (SET_SRC (), gen_binary () (x (GET_CODE () == CLOBBER && XEXP () == const0_rtx (GET_CODE () == CLOBBER && XEXP () == const0_rtx (x (x, last (x (x, 0 (x, 1 (GET_CODE () (GET_CODE () == XOR && rtx_equal_p () && ! side_effects_p () (AND, mode, gen_unary (), op1 (GET_CODE () == XOR && rtx_equal_p () && ! side_effects_p () (AND, mode, gen_unary (), op1 (GET_CODE () == NOT && GET_CODE () == XOR && rtx_equal_p () && ! side_effects_p () (AND, mode, XEXP (), op1 (GET_CODE () == NOT && GET_CODE () == XOR && rtx_equal_p () && ! side_effects_p () (AND, mode, XEXP (), op1 (GET_CODE () == CONST_INT (x, mode, op0, INTVAL () (last && GET_CODE () == IOR && GET_CODE () == AND && GET_CODE () == CONST_INT && GET_CODE () == CONST_INT (IOR, mode, gen_binary (), op1 (GET_CODE () != AND (GET_RTX_CLASS () == || GET_RTX_CLASS () == (x, 0 (x, 1 (GET_CODE () == IOR && () && ! side_effects_p () && ! side_effects_p () (GET_CODE () == IOR || GET_CODE () == XOR (gen_binary () (GET_CODE () != AND (GET_CODE () == IOR || GET_CODE () == XOR (gen_binary () (GET_CODE () == NOT && GET_CODE () == XOR (gen_binary () (GET_CODE () == NOT && GET_CODE () == XOR (gen_binary () (GET_CODE () == CONST_INT && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT && () == 0 (GET_CODE () == AND && () && ! side_effects_p () && ! side_effects_p () (GET_CODE () == AND (gen_binary () (GET_CODE () != IOR (GET_CODE () == AND (gen_binary () (GET_CODE () != IOR (() && rtx_equal_p () && GET_CODE () == CONST_INT && GET_CODE () == CONST_INT && () (ROTATE, mode, XEXP (), () (GET_CODE () == CONST_INT && GET_CODE () == ASHIFTRT && GET_CODE () == PLUS && GET_CODE () == CONST_INT && GET_CODE () == CONST_INT && INTVAL () < HOST_BITS_PER_WIDE_INT (XEXP () (op1 (mask >> count == INTVAL () && () == 0 (XEXP (), GEN_INT () (GET_CODE () == NOT (op0, 0 (GET_CODE () == NOT (op1, 0 (num_negated == 2 (XEXP (), op0 (XEXP (), op1 (num_negated == 1 (NOT, mode, mode, gen_binary () (GET_CODE () == AND && rtx_equal_p () && ! side_effects_p () (AND, mode, gen_unary (), op1 (GET_CODE () == AND && rtx_equal_p () && ! side_effects_p () (AND, mode, gen_unary (), op1 (op1 == const1_rtx && GET_RTX_CLASS () == && reversible_comparison_p () (reverse_condition (), mode, XEXP (), XEXP () (op1 == const1_rtx && GET_CODE () == LSHIFTRT && GET_CODE () == CONST_INT && INTVAL () == GET_MODE_BITSIZE () - 1 (GE, mode, XEXP (), const0_rtx (GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT && () && op1 == const_true_rtx && GET_RTX_CLASS () == && reversible_comparison_p () (reverse_condition (), mode, XEXP (), XEXP () (x (GET_CODE () (GET_CODE () == CONST_INT (GET_MODE_SIZE () > UNITS_PER_WORD (GET_MODE () (len == 0 (GET_CODE () == CLOBBER (x, 0 (GET_CODE () != CONST_INT || GET_CODE () != CONST_INT || GET_MODE () == VOIDmode (XEXP () (XEXP () (len + pos > GET_MODE_BITSIZE () (XEXP (), gen_rtx () (BITS_BIG_ENDIAN (GET_MODE () (GET_MODE () (modewidth >= pos - len (NULL_RTX, unsignedp LSHIFTRT ASHIFTRT, GET_MODE (), simplify_shift_const (), modewidth - len (unsignedp && len < HOST_BITS_PER_WIDE_INT (NULL_RTX, GET_MODE (), simplify_shift_const (), () - 1 (GET_CODE () == CLOBBER (x (1 (GET_CODE () == STRICT_LOW_PART && GET_CODE () == SUBREG (XEXP () (GET_MODE () (GET_CODE () == ZERO_EXTRACT && GET_CODE () == CONST_INT (SET_DEST (), 0 (XEXP () (SET_DEST (), 2 (GET_CODE () == CONST_INT && INTVAL () + len > GET_MODE_BITSIZE () (USE, GET_MODE (), inner (BITS_BIG_ENDIAN (GET_CODE () == CONST_INT (GET_MODE_BITSIZE () - len - INTVAL () (GET_CODE () == MINUS && GET_CODE () == CONST_INT && () (pos, 0 (MINUS, GET_MODE (), GEN_INT (), pos (GET_CODE () == SUBREG && () (SET, VOIDmode, SUBREG_REG (), gen_lowpart_for_combine () (GET_CODE () == SUBREG && subreg_lowpart_p () (inner (inner (len < HOST_BITS_PER_WIDE_INT (() - 1 (SET, VOIDmode, copy_rtx (), gen_binary () (mode, inner, pos, pos_rtx, len, unsignedp, in_dest, in_compare (inner (len, MODE_INT, 1 (GET_CODE () == USE (inner, 0 (GET_CODE () == SUBREG && subreg_lowpart_p () (GET_CODE () == MEM (SUBREG_REG () (inner (inner (pos_rtx && GET_CODE () == CONST_INT (pos_rtx (tmode != BLKmode && ! () && () (GET_CODE () == MEM (BYTES_BIG_ENDIAN (GET_MODE_BITSIZE () - len - pos (MEM, tmode, plus_constant () (new (inner (new (inner (new (inner (GET_CODE () == REG (tmode != inner_mode (SUBREG, tmode, inner, () (inner, tmode, len >= HOST_BITS_PER_WIDE_INT GET_MODE_MASK () () - 1, NULL_RTX, 0 (in_dest (GET_CODE () == MEM new () (mode == tmode new gen_rtx_combine () (pos_rtx == 0 && pos == 0 && ! in_dest && ! in_compare && ! spans_byte && unsignedp ( ! spans_byte && () (in_dest (int (int (int ( ! in_dest && unsignedp (int (int (int ( ! in_dest && ! unsignedp (int (int (int (mode != VOIDmode && GET_MODE_SIZE () < GET_MODE_SIZE () (pos_rtx && GET_MODE () != VOIDmode && GET_MODE_SIZE () < GET_MODE_SIZE () (pos_rtx (GET_CODE () != MEM || () (BITS_BIG_ENDIAN (pos_rtx == 0 (MAX () - len - pos (MINUS, GET_MODE (), GEN_INT (), pos_rtx (wanted_mem_mode != VOIDmode && GET_MODE_SIZE () < GET_MODE_SIZE () && () (BYTES_BIG_ENDIAN && ! spans_byte && GET_MODE_SIZE () < GET_MODE_SIZE () (is_mode (inner_mode (pos_rtx == 0 (wanted_mem_mode (BYTES_BIG_ENDIAN != BITS_BIG_ENDIAN && ! spans_byte && is_mode != wanted_mem_mode (GET_MODE_SIZE () - GET_MODE_SIZE () - offset (offset != 0 || inner_mode != wanted_mem_mode (MEM, wanted_mem_mode, plus_constant () (newmem (inner (newmem (inner (newmem (inner (GET_CODE () != MEM (inner, extraction_mode, pos_rtx || len + orig_pos >= HOST_BITS_PER_WIDE_INT GET_MODE_MASK () () << orig_pos, NULL_RTX, 0 (pos_rtx != 0 && GET_MODE_SIZE () > GET_MODE_SIZE () (ZERO_EXTEND, pos_mode, pos_rtx (pos_rtx != 0 && GET_MODE_SIZE () < GET_MODE_SIZE () (pos_mode, pos_rtx (pos_rtx == 0 && orig_pos_rtx != 0 && INTVAL () == pos (pos_rtx == 0 (pos (unsignedp ZERO_EXTRACT SIGN_EXTRACT, extraction_mode, inner, GEN_INT (), pos_rtx ( ! in_dest (mode, new (x, count (x (x (code (GET_CODE () == CONST_INT && INTVAL () >= count (NULL_RTX, ASHIFT, mode, XEXP (), INTVAL () - count (() != 0 (code, mode, mode, tem (GET_CODE () == CONST_INT && () == 0 && () != 0 (code, mode, tem, GEN_INT () (x, in_code (x (x (mode (code == MEM || code == PLUS || code == MINUS MEM () COMPARE in_code == COMPARE SET in_code (code (in_code == MEM && GET_CODE () == CONST_INT && INTVAL () < HOST_BITS_PER_WIDE_INT && INTVAL () >= 0 (XEXP (), next_code (MULT, mode, new, GEN_INT () (GET_CODE () != CONST_INT (GET_CODE () == LSHIFTRT && () >= 0 (XEXP (), next_code (mode, new, 0, XEXP (), i, 1, 0, in_code == COMPARE (GET_CODE () == SUBREG && subreg_lowpart_p () && GET_CODE () == LSHIFTRT && () >= 0 (XEXP (), next_code (GET_MODE (), new, 0, XEXP (), i, 1, 0, in_code == COMPARE (() && GET_CODE () == LSHIFTRT && GET_CODE () == LSHIFTRT && () >= 0 (GET_CODE (), mode, gen_rtx (), gen_rtx () (new, in_code (GET_CODE () == ROTATE && GET_CODE () == CONST_INT && () >= 0 && i <= INTVAL () (XEXP (), next_code (mode, new, (), NULL_RTX, i, 1, 0, in_code == COMPARE (ashr_optab handlers[() mode]insn_code != CODE_FOR_nothing && () && GET_CODE () == LSHIFTRT && GET_CODE () == CONST_INT && INTVAL () >= 0 && INTVAL () < HOST_BITS_PER_WIDE_INT && mode_width <= HOST_BITS_PER_WIDE_INT (mode (XEXP () (() == 0 (XEXP (), gen_rtx_combine () (() >= 0 (mode, make_compound_operation (), 0, NULL_RTX, i, 1, 0, in_code == COMPARE (in_code == COMPARE && () >= 0 (mode, make_compound_operation (), i, NULL_RTX, 1, 1, 0, 1 (ashr_optab handlers[() mode]insn_code == CODE_FOR_nothing && lshr_optab handlers[() mode]insn_code != CODE_FOR_nothing && mode_width <= HOST_BITS_PER_WIDE_INT && () == 0 (ASHIFTRT, mode, make_compound_operation (), XEXP () (x, 0 (x, 1 (GET_CODE () == CONST_INT && GET_CODE () == ASHIFT && GET_CODE () == CONST_INT && INTVAL () >= INTVAL () (XEXP (), next_code (mode, new, INTVAL () - INTVAL (), NULL_RTX, mode_width - INTVAL (), code == LSHIFTRT, 0, in_code == COMPARE (GET_RTX_CLASS () != && ! () && GET_CODE () == CONST_INT && INTVAL () < HOST_BITS_PER_WIDE_INT && () != 0 (mode, make_compound_operation (), 0, NULL_RTX, mode_width - INTVAL (), code == LSHIFTRT, 0, in_code == COMPARE (SUBREG_REG (), in_code (GET_CODE () != GET_CODE () && GET_MODE_SIZE () < GET_MODE_SIZE () && subreg_lowpart_p () (tem, mode, GET_MODE_MASK (), NULL_RTX, 0 (GET_CODE () != SUBREG (newer, in_code (new (mode, new (x (code (i 0 i < GET_RTX_LENGTH () i ++ (fmt[i] == (XEXP (), next_code (XEXP (), new (m, plen (m & - m (pos < 0 (() + 1 (*plen <= 0 (x, mode, mask, reg, just_select (x (code == CALL (() mode GET_MODE () (() && GET_MODE_BITSIZE () < GET_MODE_BITSIZE () (x (op_mode (op_mode (op_mode (GET_MODE_BITSIZE () >= HOST_BITS_PER_WIDE_INT GET_MODE_MASK () () - 1 (HOST_WIDE_INT (x, mode ( ! just_select && () == 0 (GET_CODE () == CONST_INT (x (mode (width > 0 && width < HOST_BITS_PER_WIDE_INT && () != 0 (HOST_WIDE_INT (cval (GET_MODE_SIZE () < GET_MODE_SIZE () && () == 0 (mode, x (GET_MODE () == mode && code != SUBREG && () == 0 (code ( ! BITS_BIG_ENDIAN && () == 0 (XEXP (), mode, mask, reg, next_select (x (GET_CODE () != code (x, mode, mask, reg, next_select (reg != 0 && () (subreg_lowpart_p () && () (SUBREG_REG (), mode, mask, reg, next_select (GET_CODE () == CONST_INT (x, op_mode, XEXP (), mask & INTVAL () (GET_CODE () == AND && GET_CODE () == CONST_INT && INTVAL () == mask (x, 0 (GET_CODE () == AND && GET_CODE () == CONST_INT && GET_MODE_MASK () != mask && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT (INTVAL () | () (GET_MODE () (width > 0 && width < HOST_BITS_PER_WIDE_INT && () != 0 (HOST_WIDE_INT (AND, GET_MODE (), XEXP (), GEN_INT () (rtx_cost () < rtx_cost () (mode (width < HOST_BITS_PER_WIDE_INT && () != 0 (HOST_WIDE_INT (GET_CODE () == CONST_INT && exact_log2 () >= 0 && () == 0 && () != 0 (plus_constant (), mode, mask, reg, next_select (GET_CODE () == LSHIFTRT && GET_CODE () == CONST_INT && INTVAL () >= 0 && INTVAL () < HOST_BITS_PER_WIDE_INT && GET_CODE () == CONST_INT && () && () (() << INTVAL () (GET_CODE (), GET_MODE (), XEXP (), temp (LSHIFTRT, GET_MODE (), temp, XEXP () (x, mode, mask, reg, next_select (op_mode, force_to_mode () (op_mode, force_to_mode () (GET_CODE () == CONST_INT && () && () != 0 (INTVAL () & mask (op_mode != GET_MODE () || op0 != XEXP () || op1 != XEXP () (code, op_mode, op0, op1 ( ! () && ! () (GET_CODE () == CONST_INT && INTVAL () >= 0 && INTVAL () < GET_MODE_BITSIZE () && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT (XEXP () (op_mode, force_to_mode () (op_mode != GET_MODE () || op0 != XEXP () (code, op_mode, op0, XEXP () (GET_CODE () == CONST_INT && INTVAL () < HOST_BITS_PER_WIDE_INT && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT (x, 0 (XEXP () (GET_MODE_BITSIZE () > HOST_BITS_PER_WIDE_INT || () != 0 (x (inner, op_mode, mask, reg, next_select (GET_MODE () != op_mode || inner != XEXP () (LSHIFTRT, op_mode, inner, XEXP () (GET_CODE () == LSHIFTRT && GET_CODE () == CONST_INT && () && exact_log2 () >= 0 && () (LSHIFTRT, GET_MODE (), XEXP (), GEN_INT () (GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT && () (XEXP (), mode, mask, reg, next_select (GET_CODE () == CONST_INT && INTVAL () >= 0 && INTVAL () < HOST_BITS_PER_WIDE_INT (GET_MODE_BITSIZE () > HOST_BITS_PER_WIDE_INT (HOST_WIDE_INT (GET_MODE_BITSIZE () - INTVAL () < HOST_BITS_PER_WIDE_INT (XEXP () (GET_MODE () (GET_MODE () (XEXP () (() == 0 || () >= 0 (x, LSHIFTRT, GET_MODE (), XEXP (), i < 0 INTVAL () GET_MODE_BITSIZE () - 1 - i (GET_CODE () != ASHIFTRT (x, mode, mask, reg, next_select (mask == 1 (LSHIFTRT, GET_MODE (), XEXP (), XEXP () (() && GET_CODE () == CONST_INT && INTVAL () >= 0 && () && GET_CODE () == ASHIFT && GET_CODE () == CONST_INT && INTVAL () == INTVAL () (XEXP (), mode, mask, reg, next_select (GET_CODE () == CONST_INT && INTVAL () >= 0 (code == ROTATE ROTATERT ROTATE, GET_MODE (), GEN_INT (), XEXP () (temp && GET_CODE () == CONST_INT (XEXP (), force_to_mode () (mask == 1 (XEXP (), mode, mask, reg, just_select (GET_CODE () == LSHIFTRT && GET_CODE () == CONST_INT && INTVAL () >= 0 && () && INTVAL () < HOST_BITS_PER_WIDE_INT (mask << INTVAL () (XOR, GET_MODE (), XEXP (), temp (LSHIFTRT, GET_MODE (), temp, XEXP () (x, mode, mask, reg, next_select (op_mode, force_to_mode () (op_mode != GET_MODE () || op0 != XEXP () (code, op_mode, op_mode, op0 (() == 0 && XEXP () == const0_rtx && () == 0 (XEXP (), mode, mask, reg, next_select (XEXP (), gen_lowpart_for_combine () (XEXP (), gen_lowpart_for_combine () (mode, x (x, ptrue, pfalse (x (x (mode (GET_RTX_CLASS () == && () != 0 (code, mode, GET_MODE (), true0 (code, mode, GET_MODE (), false0 (code == COMPARE (GET_RTX_CLASS () == || GET_RTX_CLASS () == || GET_RTX_CLASS () == (XEXP (), & true0, & false0 (XEXP (), & true1, & false1 (() && ! () (code, mode, true0, true1 (code, mode, false0, false1 (() && GET_CODE () == MULT && GET_CODE () == MULT (XEXP (), 1 (XEXP (), 1 (XEXP (), 0 (XEXP (), 0 (GET_RTX_CLASS () == && GET_RTX_CLASS () == && reversible_comparison_p () && () && ! side_effects_p () (MULT, mode, op0, const_true_rtx (MULT, mode, (), const_true_rtx (() && GET_CODE () == MULT && GET_CODE () == MULT (XEXP (), 0 (XEXP (), 0 (GET_RTX_CLASS () == && GET_RTX_CLASS () == && reversible_comparison_p () && () && ! side_effects_p () (code == IF_THEN_ELSE (x, 0 (x, 1 (x, 2 (GET_CODE () == NE && XEXP () == const0_rtx (cond0, 0 (GET_CODE () == EQ && XEXP () == const0_rtx (x, 2 (x, 1 (cond0, 0 (code == SUBREG && GET_MODE_CLASS () == MODE_INT && GET_MODE_CLASS () == MODE_INT && GET_MODE_SIZE () <= GET_MODE_SIZE () && 0 != () (true0, mode, GET_MODE_MASK (), NULL_RTX, 0 (false0, mode, GET_MODE_MASK (), NULL_RTX, 0 (CONSTANT_P () || () (num_sign_bit_copies () == size (exact_log2 () >= 0 (nz (x, cond, reg, val (x (side_effects_p () (cond == EQ && rtx_equal_p () (code == ABS && rtx_equal_p () && val == const0_rtx (cond (x, 0 (NEG, GET_MODE (), GET_MODE (), XEXP () (GET_RTX_CLASS () == || GET_RTX_CLASS () == (rtx_equal_p () (cond (rtx_equal_p () && rtx_equal_p () (GET_RTX_CLASS () == (comparison_dominates_p () const_true_rtx () (code == SMAX || code == SMIN || code == UMIN || code == UMAX (code == UMIN || code == UMAX (code == SMAX || code == UMAX (cond (cond (x, 1 (x, 0 (x, 1 (x, 0 (code (i GET_RTX_LENGTH () - 1 i >= 0 i -- (fmt[i] == (XEXP (), known_cond () (fmt[i] == (j XVECLEN () - 1 j >= 0 j -- (XVECEXP (), known_cond () (x (x (x (GET_CODE () == AND && GET_CODE () == ROTATE && GET_CODE () == CONST_INT && INTVAL () == -2 && () (VOIDmode, dest, 0, XEXP (), 1, 1, 1, 0 (SET, VOIDmode, assign, const0_rtx (GET_CODE () == AND && GET_CODE () == SUBREG && subreg_lowpart_p () && () && GET_CODE () == ROTATE && INTVAL () == -2 && () (VOIDmode, dest, 0, XEXP (), 1, 1, 1, 0 (SET, VOIDmode, assign, const0_rtx (GET_CODE () == IOR && GET_CODE () == ASHIFT && XEXP () == const1_rtx && () (VOIDmode, dest, 0, XEXP (), 1, 1, 1, 0 (SET, VOIDmode, assign, const1_rtx (GET_CODE () == IOR && GET_CODE () == AND && GET_CODE () == CONST_INT && () (XEXP () (src, 1 (GET_CODE () == IOR && GET_CODE () == AND && GET_CODE () == CONST_INT && () (XEXP () (src, 0 (c1 ^ GET_MODE_MASK (), & len (pos < 0 || pos + len > GET_MODE_BITSIZE () || () (VOIDmode, dest, pos, NULL_RTX, len, 1, 1, 0 (GET_CODE () == STRICT_LOW_PART GET_MODE () GET_MODE () (simplify_shift_const (), mode, GET_MODE_BITSIZE () >= HOST_BITS_PER_WIDE_INT GET_MODE_MASK () () - 1, dest, 0 (SET, VOIDmode, assign, src (x (x (FLOAT_MODE_P () (code != IOR && code != AND && code != XOR && code != PLUS && code != MINUS (x, 0 (x, 1 (GET_RTX_CLASS () == || GET_RTX_CLASS () == (lhs (rhs (lhs (inner_code != GET_CODE () (inner_code (code == PLUS || code == MINUS (code != PLUS && code != MINUS (GET_MODE () != GET_MODE () || SUBREG_WORD () != SUBREG_WORD () || ! subreg_lowpart_p () || () || () || GET_MODE_SIZE () > UNITS_PER_WORD (code, GET_MODE (), SUBREG_REG (), SUBREG_REG () (GET_MODE (), tem (GET_RTX_CLASS () == && rtx_equal_p () (lhs, 0 (lhs, 1 (rhs, 1 (GET_RTX_CLASS () == && rtx_equal_p () (lhs, 0 (lhs, 1 (rhs, 0 (GET_RTX_CLASS () == && rtx_equal_p () (lhs, 1 (lhs, 0 (rhs, 1 (rtx_equal_p () (lhs, 1 (lhs, 0 (rhs, 0 (code, GET_MODE (), lhs, rhs (code == XOR && inner_code == IOR (NOT, GET_MODE (), GET_MODE (), other (inner_code, GET_MODE (), apply_distributive_law (), other (x, mode, varop, constop (mode (varop, mode, constop, NULL_RTX, 0 (GET_CODE () == CLOBBER || GET_CODE () == CONST_INT (varop, mode (mode (BITS_PER_WORD < HOST_BITS_PER_WIDE_INT && BITS_PER_WORD == width && () (() () << width (constop == 0 (GET_CODE () == NEG && nonzero_bits () == 1 && () >= 0 (NULL_RTX, ASHIFT, mode, XEXP (), i (GET_CODE () == IOR || GET_CODE () == XOR (mode, apply_distributive_law () (x && GET_CODE () == SUBREG && GET_MODE () == mode && SUBREG_REG () == varop (x, 0 (mode, varop (GET_CODE () == CLOBBER (constop == nonzero (x == 0 || GET_CODE () != AND || GET_MODE () != mode (AND, mode, varop, GEN_INT () (GET_CODE () != CONST_INT || INTVAL () != constop (XEXP (), GEN_INT () (XEXP (), varop (x, mode (mode (mode (FLOAT_MODE_P () || FLOAT_MODE_P () (GET_MODE_BITSIZE () > mode_width (x (mode (mode (mode_width > HOST_BITS_PER_WIDE_INT (GET_MODE () != VOIDmode && GET_MODE () != mode && GET_MODE_BITSIZE () <= BITS_PER_WORD && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT && GET_MODE_BITSIZE () > GET_MODE_BITSIZE () (x, GET_MODE () (mode (GET_MODE () (x (code (POINTERS_EXTEND_UNSIGNED && GET_MODE () == Pmode && REGNO_POINTER_FLAG () (ptr_mode (x == stack_pointer_rtx (PUSH_ROUNDING (), sp_alignment (sp_alignment - 1 (reg_last_set_value[REGNO ()] != 0 && reg_last_set_mode[REGNO ()] == mode && () && INSN_CUID () < subst_low_cuid (x (x (tem (GET_MODE_BITSIZE () < mode_width && GET_CODE () == CONST_INT && INTVAL () > 0 && 0 != () (INTVAL () | () (tem, mode (nonzero_sign_valid && reg_nonzero_bits[REGNO ()](x (INTVAL () > 0 && mode_width < BITS_PER_WORD && 0 != () (INTVAL () | () (x (LOAD_EXTEND_OP () == ZERO_EXTEND (GET_MODE () (GET_MODE_CLASS () == MODE_INT && mode_width <= HOST_BITS_PER_WIDE_INT (num_sign_bit_copies () == GET_MODE_BITSIZE () (GET_MODE_SIZE () < mode_width (GET_MODE_MASK () & GET_MODE_MASK () (num_sign_bit_copies () == GET_MODE_BITSIZE () (nonzero_bits () & GET_MODE_MASK () (XEXP (), mode (GET_MODE () != VOIDmode (GET_MODE () (XEXP (), mode (GET_MODE () != VOIDmode (GET_MODE () (inner_nz & () (GET_MODE_MASK () & GET_MODE_MASK () (nonzero_bits () & nonzero_bits () (nonzero_bits () | nonzero_bits () (XEXP (), mode (XEXP (), mode (nz0 (nz1 (nz0 & - nz0 (nz1 & - nz1 (nz0 & () (nz1 & () (code (width0, width1 (low0, low1 (low0, low1 ( ! op0_maybe_minusp && ! op1_maybe_minusp ( ! op0_maybe_minusp && ! op1_maybe_minusp (width0, width1 (low0, low1 (width0, width1 (low0, low1 (result_width < mode_width (() 1 << result_width (result_low > 0 (() - 1 (GET_CODE () == CONST_INT && INTVAL () < HOST_BITS_PER_WIDE_INT (() 1 << INTVAL () (SUBREG_PROMOTED_VAR_P () && SUBREG_PROMOTED_UNSIGNED_P () (GET_MODE_MASK () & nonzero_bits () (GET_MODE_BITSIZE () <= BITS_PER_WORD && () (SUBREG_REG (), mode (GET_MODE_SIZE () > GET_MODE_SIZE () (GET_MODE_MASK () & GET_MODE_MASK () (GET_CODE () == CONST_INT && INTVAL () >= 0 && INTVAL () < HOST_BITS_PER_WIDE_INT (x (inner_mode (XEXP () (inner_mode (XEXP (), mode (mode_width > width (op_nonzero & nonzero & mode_mask (code == LSHIFTRT (code == ASHIFTRT (inner & () (() - 1 (width - count (code == ASHIFT (() & mode_mask (outer | inner (() 1 << () (nonzero_bits () | nonzero_bits () (x, mode (x (mode == VOIDmode (x (mode == VOIDmode || FLOAT_MODE_P () || FLOAT_MODE_P () (mode (bitwidth < GET_MODE_BITSIZE () (1, () (GET_MODE () != VOIDmode && bitwidth > GET_MODE_BITSIZE () (code ( ! POINTERS_EXTEND_UNSIGNED && GET_MODE () == Pmode && mode == Pmode && REGNO_POINTER_FLAG () (Pmode (ptr_mode (reg_last_set_value[REGNO ()] != 0 && reg_last_set_mode[REGNO ()] == mode && () && INSN_CUID () < subst_low_cuid (x (x (tem != 0 (tem, mode (nonzero_sign_valid && reg_sign_bit_copies[REGNO ()] != 0 (x (LOAD_EXTEND_OP () == SIGN_EXTEND (1, bitwidth - GET_MODE_BITSIZE () + 1 (x (mode (bitwidth <= HOST_BITS_PER_WIDE_INT && () != 0 (nonzero (mode (nonzero == 0 bitwidth bitwidth - floor_log2 () - 1 (SUBREG_PROMOTED_VAR_P () && ! SUBREG_PROMOTED_UNSIGNED_P () (bitwidth - GET_MODE_BITSIZE () + 1, num_sign_bit_copies () (bitwidth <= GET_MODE_BITSIZE () (SUBREG_REG (), VOIDmode (1, () (() && LOAD_EXTEND_OP () == SIGN_EXTEND (SUBREG_REG (), mode (GET_CODE () == CONST_INT (1, bitwidth - INTVAL () (bitwidth - GET_MODE_BITSIZE () + num_sign_bit_copies () (XEXP (), VOIDmode (1, () (XEXP (), mode (GET_CODE () == CONST_INT && INTVAL () >= 0 && INTVAL () < bitwidth (XEXP (), mode (1, num0 - () (XEXP (), mode (nonzero == 1 (XEXP (), mode (num0 > 1 && bitwidth <= HOST_BITS_PER_WIDE_INT && () (XEXP (), mode (XEXP (), mode (num0, num1 (code == PLUS && XEXP () == constm1_rtx && bitwidth <= HOST_BITS_PER_WIDE_INT (XEXP (), mode (() == 0 (nonzero == 1 || nonzero == 0 bitwidth bitwidth - floor_log2 () - 1 (XEXP (), mode (XEXP (), mode (1, MIN () - 1 (XEXP (), mode (XEXP (), mode (bitwidth - num0 (bitwidth - num1 (result > 0 && bitwidth <= HOST_BITS_PER_WIDE_INT && () && () (1, result (XEXP (), mode (XEXP (), mode (XEXP (), mode (result > 1 && bitwidth <= HOST_BITS_PER_WIDE_INT && () != 0 (XEXP (), mode (result > 1 && bitwidth <= HOST_BITS_PER_WIDE_INT && () != 0 (XEXP (), mode (GET_CODE () == CONST_INT && INTVAL () > 0 (bitwidth, num0 + INTVAL () (GET_CODE () != CONST_INT || INTVAL () < 0 || INTVAL () >= bitwidth (XEXP (), mode (1, num0 - INTVAL () (XEXP (), mode (XEXP (), mode (num0, num1 (bitwidth > HOST_BITS_PER_WIDE_INT (x, mode (nonzero & () 1 bitwidth - floor_log2 () - 1 (x, mode, unsignedp (nonzero_sign_valid == 0 (unsignedp () num_sign_bit_copies () - 1 (pop0, pconst0, op1, const1, mode, pcomp_p (mode (mode (mode (op0 == AND (op1 == NIL || op0 == SET (op0 == NIL (op0 == op1 (op0 (op0 == PLUS || op1 == PLUS || op0 == NEG || op1 == NEG (const0 != const1 (op0 (op1 == AND (op1 == AND (op1 == IOR (mode (const0 == 0 && () (const0 == 0 && op0 == AND (const0 == GET_MODE_MASK () && op0 == AND (BITS_PER_WORD < HOST_BITS_PER_WIDE_INT && BITS_PER_WORD == width && () (() () << width (x, code, result_mode, varop, count (GET_MODE_SIZE () + () (count < 0 || count > GET_MODE_BITSIZE () (x (code, mode, varop, GEN_INT () (count != 0 (GET_CODE () == CLOBBER (complement_p (code == ROTATERT (result_mode (code == ASHIFTRT || code == LSHIFTRT || code == ROTATE result_mode mode (count > GET_MODE_BITSIZE () - 1 (code == ASHIFTRT (shift_mode (code == ROTATE || code == ROTATERT (shift_mode (count < 0 ((code == ASHIFTRT && () (code == ASHIFTRT && () (shift_mode (GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT && code == ASHIFTRT && () (GET_CODE () (varop (new != varop (() && ! mode_dependent_address_p () && ! MEM_VOLATILE_P () && () != BLKmode (BYTES_BIG_ENDIAN (MEM, tmode, XEXP () (MEM, tmode, plus_constant () (new (varop (new (varop (new (varop (code == ASHIFTRT SIGN_EXTEND ZERO_EXTEND, mode, new (() && () != BLKmode && tmode == GET_MODE () (BITS_BIG_ENDIAN (varop, 0 (XEXP () (XEXP (), plus_constant () (code == ASHIFTRT SIGN_EXTEND ZERO_EXTEND, mode, new (subreg_lowpart_p () && () && () (varop (GET_MODE_SIZE () > GET_MODE_SIZE () (varop (GET_CODE () == CONST_INT && exact_log2 () >= 0 (ASHIFT, GET_MODE (), XEXP (), GEN_INT () (GET_CODE () == CONST_INT && exact_log2 () >= 0 (LSHIFTRT, GET_MODE (), XEXP (), GEN_INT () (code == LSHIFTRT && count == GET_MODE_BITSIZE () - 1 (varop, 0 (GET_CODE () == CONST_INT && INTVAL () >= 0 && INTVAL () < GET_MODE_BITSIZE () && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT (varop (XEXP () (code == ASHIFT && first_code == ASHIFTRT && () == count (GET_MODE_MASK () & () (NULL_RTX, result_mode, XEXP (), mask (NULL_RTX, ASHIFT, result_mode, varop, count (code == ASHIFTRT && first_code == ASHIFT && GET_MODE () == shift_mode && () (count < 0 (varop, 0 (code == first_code (GET_MODE () != result_mode && () (varop, 0 (code == ASHIFTRT || () || GET_MODE_BITSIZE () > HOST_BITS_PER_WIDE_INT || () (nonzero_bits () (code, result_mode, mask_rtx, GEN_INT () (mask_rtx == 0 || GET_CODE () != CONST_INT || ! merge_outer_ops () (() == () (count > 0 && () (count < 0 (varop, 0 (GET_CODE () == code && GET_CODE () != CONST_INT && 0 != () (code, mode, new, XEXP () (XOR, mode, XEXP (), GEN_INT () (GET_CODE () == IOR && GET_CODE () == PLUS && XEXP () == constm1_rtx && () && () && count == GET_MODE_BITSIZE () - 1 && rtx_equal_p () (LE, GET_MODE (), XEXP (), const0_rtx (STORE_FLAG_VALUE == 1 code == ASHIFTRT code == LSHIFTRT (NEG, GET_MODE (), varop (GET_CODE () == CONST_INT && () != 0 && GET_CODE () == CONST_INT && merge_outer_ops () (varop, 0 (NULL_RTX, code, shift_mode, XEXP (), count (NULL_RTX, code, shift_mode, XEXP (), count (GET_CODE (), shift_mode, lhs, rhs (varop (code == LSHIFTRT && XEXP () == const0_rtx && GET_MODE () == result_mode && count == GET_MODE_BITSIZE () - 1 && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT && () && nonzero_bits () == 1 && merge_outer_ops () (varop, 0 (code == LSHIFTRT && count == GET_MODE_BITSIZE () - 1 && nonzero_bits () == 1 (varop, 0 (code == ASHIFT && merge_outer_ops () (varop, 0 (code == LSHIFTRT && count == GET_MODE_BITSIZE () - 1 && XEXP () == constm1_rtx && nonzero_bits () == 1 && merge_outer_ops () (varop, 0 (() && count < HOST_BITS_PER_WIDE_INT && nonzero_bits () >> count == 0 && () == 0 (varop, 0 (() && count < HOST_BITS_PER_WIDE_INT && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT && 0 == () && 0 == () (varop, 1 (code == ASHIFT && GET_CODE () == CONST_INT && () != 0 && GET_CODE () == CONST_INT && merge_outer_ops () (varop, 0 (GET_CODE () == ASHIFTRT && count == GET_MODE_BITSIZE () - 1 && () && () && GET_CODE () == CONST_INT && INTVAL () == count && rtx_equal_p () (GT, GET_MODE (), XEXP (), const0_rtx (STORE_FLAG_VALUE == 1 code == ASHIFTRT code == LSHIFTRT (NEG, GET_MODE (), varop (code == ASHIFTRT || code == LSHIFTRT || code == ROTATE result_mode mode (x && GET_RTX_CLASS () == && GET_CODE () == CONST_INT && INTVAL () == count (x, 1 (count (x && GET_CODE () == SUBREG && GET_MODE () == shift_mode && SUBREG_REG () == varop (x, 0 (GET_MODE () != shift_mode (shift_mode, varop (GET_CODE () == CLOBBER (code, shift_mode, varop, const_rtx (new != 0 (x == 0 || GET_CODE () != code || GET_MODE () != shift_mode (code, shift_mode, varop, const_rtx (XEXP (), varop (XEXP (), const_rtx (outer_op != NIL && GET_CODE () == code && GET_CODE () == CONST_INT (x, code, shift_mode, XEXP (), INTVAL () (orig_code == LSHIFTRT && result_mode != shift_mode (NULL_RTX, shift_mode, x, GET_MODE_MASK () >> orig_count (result_mode, x (complement_p (NOT, result_mode, result_mode, x (outer_op != NIL (GET_MODE_BITSIZE () < HOST_BITS_PER_WIDE_INT (result_mode (result_mode (BITS_PER_WORD < HOST_BITS_PER_WIDE_INT && BITS_PER_WORD == width && () (() () << width (outer_op == AND (NULL_RTX, result_mode, x, outer_const (outer_op == SET (outer_const (GET_RTX_CLASS () == (outer_op, result_mode, result_mode, x (outer_op, result_mode, x, GEN_INT () (pnewpat, insn, pnotes, padded_scratches (GET_CODE () == PARALLEL (i XVECLEN () - 1 i >= 0 i -- (GET_CODE () == CLOBBER && XEXP () == const0_rtx (pat, insn, & num_clobbers_to_add (insn_code_number < 0 && ! check_asm_operands () && GET_CODE () == PARALLEL (pos 0, i 0 i < XVECLEN () i ++ (GET_CODE () != CLOBBER (i != pos (XVECEXP (), XVECEXP () (XVECLEN (), pos (pos == 1 (pat, 0, 0 (pat, insn, & num_clobbers_to_add (num_clobbers_to_add (PARALLEL, VOIDmode, gen_rtvec () (GET_CODE () == PARALLEL (i 0 i < XVECLEN () i ++ (newpat, 0, i (pat, 0, i (newpat, 0, 0 (newpat, insn_code_number (i XVECLEN () - num_clobbers_to_add i < XVECLEN () i ++ (GET_CODE () == REG && ! reg_dead_at_p () (GET_CODE () == SCRATCH (*padded_scratches (EXPR_LIST, REG_UNUSED, XEXP (), notes (mode, x (GET_MODE () == mode (GET_MODE_SIZE () > UNITS_PER_WORD && ! () (CLOBBER, GET_MODE (), const0_rtx (GET_CODE () == SUBREG && GET_CODE () == MEM (x (GET_MODE () == mode (mode, x (result != 0 && GET_CODE () == SUBREG && GET_CODE () == REG && REGNO () >= FIRST_PSEUDO_REGISTER && () (SUBREG_REG () (result (GET_CODE () == MEM (MEM_VOLATILE_P () || mode_dependent_address_p () (CLOBBER, GET_MODE (), const0_rtx (GET_MODE_SIZE () < GET_MODE_SIZE () (SUBREG, mode, x, 0 (WORDS_BIG_ENDIAN (MAX () - MAX () (BYTES_BIG_ENDIAN (MIN () - MIN () (MEM, mode, plus_constant () (new (x (new (x (new (x (GET_RTX_CLASS () == (GET_CODE (), mode, XEXP (), XEXP () (WORDS_BIG_ENDIAN && GET_MODE_SIZE () > UNITS_PER_WORD (() / UNITS_PER_WORD (SUBREG, mode, x, word (() (p, mode (p, enum rtx_code (p, enum machine_mode (code (code (n_args == 0 || n_args > 3 ((j 0 j < n_args j ++ (*fmt ++ != ((p, rtx (i previous_num_undos i < undobuf num_undo i ++ ( ! undobuf undo[i]is_int && GET_CODE () == code && GET_MODE () == mode (j 0 j < n_args j ++ (XEXP () != args[j](j == n_args (code (rt, mode (rt, 0 (n_args > 1 (rt, 1 (n_args > 2 (rt, 2 (code, mode, op0, op1 (GET_RTX_CLASS () == && () (GET_RTX_CLASS () == (op0 (GET_CODE () == COMPARE && op1 == const0_rtx (op0, 1 (op0, 0 (op0 (op_mode == VOIDmode (op1 (code, op_mode, op0, op1 (code, mode, op0, op1 (result (GET_RTX_CLASS () == && () (code, mode, op1, op0 (code, mode, op0, op1 (code, mode, op0_mode, op0 (code, mode, op0, op0_mode (result (code, mode, op0 (code, pop0, pop1 (1 (code != GTU && code != GEU && code != LTU && code != LEU && GET_CODE () == ASHIFTRT && GET_CODE () == ASHIFTRT && GET_CODE () == ASHIFT && GET_CODE () == ASHIFT && GET_CODE () == SUBREG && GET_CODE () == SUBREG && () && GET_CODE () == CONST_INT && GET_CODE () == CONST_INT && GET_CODE () == CONST_INT && GET_CODE () == CONST_INT && INTVAL () == INTVAL () && INTVAL () == INTVAL () && INTVAL () == INTVAL () && () (XEXP () (XEXP () (GET_CODE () == GET_CODE () && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT && () && GET_CODE () == CONST_INT && INTVAL () >= 0 && INTVAL () < HOST_BITS_PER_WIDE_INT && XEXP () == XEXP () (op0 (mode (XEXP () (GET_CODE () == LSHIFTRT || GET_CODE () == ASHIFTRT (mask >> shift_count (GET_CODE () == ASHIFT (mask & () (() == 0 && () == 0 (op0, 0 (op1, 0 (GET_CODE () == AND && GET_CODE () == AND && GET_CODE () == CONST_INT && GET_CODE () == CONST_INT (op0, 0 (op1, 0 (XEXP () (XEXP () (GET_CODE () == SUBREG && GET_CODE () == SUBREG && () && () && () && () && () (inner_op0 (inner_op1 (code (c0 == c1 (tmode GET_CLASS_NARROWEST_MODE () tmode != GET_MODE () tmode GET_MODE_WIDER_MODE () (c0 == GET_MODE_MASK () (tmode, inner_op0 (tmode, inner_op1 (code ( ! changed (() || () (op0, 0 (op1, 0 (code (CONSTANT_P () (code (GET_CODE () == CONST_INT (op0 (mode (mode (GET_MODE_CLASS () != MODE_INT && ! () (op1 (mode_width <= HOST_BITS_PER_WIDE_INT (const_op && () && mode_width <= HOST_BITS_PER_WIDE_INT && exact_log2 () >= 0 && nonzero_bits () == const_op (code == EQ || code == GE || code == GEU NE EQ (const_op == -1 && () && num_sign_bit_copies () == mode_width (code == EQ || code == LE || code == GEU NE EQ (code (const_op > 0 (const_op (const_op < 0 (const_op (const_op == 0 && mode_width <= HOST_BITS_PER_WIDE_INT && () == 0 (const_op > 0 (const_op (const_op < 0 (const_op (const_op == 0 && mode_width <= HOST_BITS_PER_WIDE_INT && () == 0 (const_op > 0 (const_op (const_op == () 1 << () (const_op == 0 (const_op == () - 1 (const_op > 1 (const_op (const_op == () 1 << () (const_op == 0 (const_op == () - 1 (code == EQ || code == NE (() && const_op == 0 (code == LTU || code == LEU || code == GTU || code == LEU (sign_bit_comparison_p && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT (op0, mode, (), NULL_RTX, 0 (GET_CODE () (GET_CODE () == CONST_INT && XEXP () == const1_rtx && equality_comparison_p && const_op == 0 && () >= 0 && () (BITS_BIG_ENDIAN (GET_MODE_BITSIZE () - 1 - i (op0, 2 (i (code (op0 (tem != op0 (equality_comparison_p && () != 0 (op0, 0 (sign_bit_comparison_p (op0, 0 (code == GE LT GE (equality_comparison_p && () != 0 (op0, 0 (const_op != 0 (sign_bit_comparison_p && () (op0, 0 (code == LT NE EQ (num_sign_bit_copies () >= 2 (op0, 0 (code (equality_comparison_p && GET_CODE () == CONST_INT && () != 0 (op0, 0 (const_op == 0 && sign_bit_comparison_p && GET_CODE () == CONST_INT && mode_width <= HOST_BITS_PER_WIDE_INT (NULL_RTX, mode, XEXP (), () (code == LT NE EQ (const_op == 0 && equality_comparison_p (op0, 0 ( ! unsigned_comparison_p && () && () (op0, 0 (mode_width <= HOST_BITS_PER_WIDE_INT && subreg_lowpart_p () && GET_CODE () == PLUS && GET_CODE () == CONST_INT && INTVAL () < 0 && () && () const_op < GET_MODE_MASK () / 2 && () (op0 (subreg_lowpart_p () && GET_MODE_BITSIZE () < mode_width (() && () && () (op0, 0 (equality_comparison_p && 0 != () (op0, 0 (const_op == 0 && XEXP () == constm1_rtx && GET_CODE () == ABS && sign_bit_comparison_p (XEXP (), 0 (code == LT EQ NE (equality_comparison_p && 0 != () (op0, 0 (equality_comparison_p && 0 != () (op0, 1 (sign_bit_comparison_p && GET_CODE () == ASHIFTRT && GET_CODE () == CONST_INT && INTVAL () == mode_width - 1 && rtx_equal_p () (op0, 1 (code == GE LE GT (equality_comparison_p && 0 != () (op0, 0 (const_op != 0 || XEXP () == cc0_rtx || GET_MODE_CLASS () == MODE_CC (GET_CODE () == COMPARE (XEXP (), 0 (XEXP (), 1 (op0, 0 (op0, 1 (code == NE || () || () (code == LT || code == NE GET_CODE () reverse_condition () (sign_bit_comparison_p && GET_CODE () == PLUS && XEXP () == constm1_rtx && rtx_equal_p () (op0, 1 (code == GE GT LE (const_op == 0 && equality_comparison_p && GET_CODE () == ASHIFT && XEXP () == const1_rtx (op0, mode, gen_rtx_combine (), () 1 (const_op == 0 && equality_comparison_p && mode_width <= HOST_BITS_PER_WIDE_INT && GET_CODE () == CONST_INT && GET_CODE () == LSHIFTRT && GET_CODE () == CONST_INT && INTVAL () >= 0 && INTVAL () < HOST_BITS_PER_WIDE_INT (() << INTVAL () (() == 0 && () (XEXP (), 0 (equality_comparison_p && const_op == 0 && GET_CODE () == CONST_INT && mode_width <= HOST_BITS_PER_WIDE_INT && () (op0, 0 (code == EQ GE LT (() && GET_CODE () == CONST_INT && () >= 0 && const_op >> i == 0 && () != BLKmode (tmode, XEXP () (GET_CODE () == CONST_INT && INTVAL () >= 0 && () && () && mode_width <= HOST_BITS_PER_WIDE_INT && () == 0 (XEXP () (const_op (op0, 0 (sign_bit_comparison_p && GET_CODE () == CONST_INT && mode_width <= HOST_BITS_PER_WIDE_INT (NULL_RTX, mode, XEXP (), () (code == LT NE EQ (const_op == 0 && equality_comparison_p && GET_CODE () == CONST_INT && INTVAL () == mode_width - 1 (NULL_RTX, mode, XEXP (), () 1 (equality_comparison_p && const_op == 0 && GET_CODE () == CONST_INT (NULL_RTX, LSHIFTRT, mode, XEXP (), INTVAL () ( ! unsigned_comparison_p && GET_CODE () == CONST_INT && GET_CODE () == ASHIFT && XEXP () == XEXP () && () != BLKmode && () (tmode, XEXP () (GET_CODE () == CONST_INT && INTVAL () >= 0 && INTVAL () < HOST_BITS_PER_WIDE_INT && mode_width <= HOST_BITS_PER_WIDE_INT && () == 0 && () (XEXP () (const_op (op0, 0 (const_op == 0 && () && GET_CODE () == CONST_INT && INTVAL () == mode_width - 1 (op0, 0 (code == NE || code == GT LT GE (op0, op1 == const0_rtx COMPARE SET (op1, SET (GET_CODE () == SUBREG && subreg_lowpart_p () && GET_MODE_CLASS () == MODE_INT && () && () (op0 (GET_MODE (), op1 (GET_CODE () == SUBREG && subreg_lowpart_p () && GET_MODE_CLASS () == MODE_INT && () && () && () == 0 && () (op0 (op0 (mode != VOIDmode && GET_MODE_CLASS () == MODE_INT && GET_MODE_SIZE () < UNITS_PER_WORD && cmp_optab handlers[() mode]insn_code == CODE_FOR_nothing (tmode GET_MODE_WIDER_MODE () () tmode GET_MODE_WIDER_MODE () (cmp_optab handlers[() tmode]insn_code != CODE_FOR_nothing (() || () (tmode, op0 (tmode, op1 (op1 == const0_rtx && () && GET_MODE_BITSIZE () <= HOST_BITS_PER_WIDE_INT (AND, tmode, gen_lowpart_for_combine (), GEN_INT () (code == LT (code, op0, op1 (x (TARGET_FLOAT_FORMAT != IEEE_FLOAT_FORMAT || flag_fast_math || GET_CODE () == NE || GET_CODE () == EQ (GET_MODE_CLASS () (REVERSIBLE_CC_MODE () (XEXP () (x && GET_CODE () == COMPARE && ! FLOAT_MODE_P () (x (x (code (code == REG (x (regno < FIRST_PSEUDO_REGISTER HARD_REGNO_NREGS () 1 (i regno i < endregno i ++ (i GET_RTX_LENGTH () - 1 i >= 0 i -- (fmt[i] == (XEXP () (reg, insn, value (reg (regno < FIRST_PSEUDO_REGISTER HARD_REGNO_NREGS () 1 (value && insn && reg_overlap_mentioned_p () (insn (reg (tem (copy_rtx (), reg, tem (i regno i < endregno i ++ (insn (value (value (i regno i < endregno i ++ (value && reg_last_set_table_tick[i] == label_tick (value && ! get_last_value_validate () (value ( ! get_last_value_validate () (value (insn (reg (value, GET_MODE () (value, GET_MODE () (dest, setter (GET_CODE () == SUBREG (dest (GET_CODE () == REG (GET_CODE () == SET && dest == SET_DEST () (dest, record_dead_insn, SET_SRC () (GET_CODE () == SET && GET_CODE () == SUBREG && SUBREG_REG () == dest && GET_MODE_BITSIZE () <= BITS_PER_WORD && subreg_lowpart_p () (dest, record_dead_insn, gen_lowpart_for_combine () (dest, record_dead_insn, NULL_RTX (GET_CODE () == MEM && ! push_operand () (record_dead_insn (insn (link REG_NOTES () link link XEXP () (REG_NOTE_KIND () == REG_DEAD && GET_CODE () == REG (XEXP () (regno < FIRST_PSEUDO_REGISTER HARD_REGNO_NREGS () 1 (i regno i < endregno i ++ (REG_NOTE_KIND () == REG_INC (XEXP (), insn, NULL_RTX (GET_CODE () == CALL_INSN (i 0 i < FIRST_PSEUDO_REGISTER i ++ (call_used_regs[i](insn (PATTERN (), record_dead_and_set_regs_1 (loc, tick, replace (GET_CODE () (GET_CODE () (GET_CODE () == REG (x (regno < FIRST_PSEUDO_REGISTER HARD_REGNO_NREGS () 1 (j regno j < endregno j ++ (reg_last_set_invalid[j] || () (replace (CLOBBER, GET_MODE (), const0_rtx (i 0 i < len i ++ (() || fmt[i] == (x (GET_CODE () == SUBREG && subreg_lowpart_p () && () && () != 0 (GET_MODE (), value (GET_CODE () != REG (x (value == 0 || () (INSN_CUID () >= subst_low_cuid (subst_prev_insn (insn prev_nonnote_insn () insn && () insn prev_nonnote_insn () (insn && () != 0 && rtx_equal_p () (set (reg_mentioned_p () (copy_rtx (), x, gen_rtx () (reg_overlap_mentioned_p () (get_last_value_validate () (value (get_last_value_validate () (x, from_cuid (x (code == REG (x (regno < FIRST_PSEUDO_REGISTER HARD_REGNO_NREGS () 1 (regno == STACK_POINTER_REGNUM (regno < endreg regno ++ (reg_last_set[regno] && INSN_CUID () > from_cuid (code == MEM && mem_last_set > from_cuid (code (i GET_RTX_LENGTH () - 1 i >= 0 i -- (fmt[i] == (j XVECLEN () - 1 j >= 0 j -- (use_crosses_set_p () (fmt[i] == && use_crosses_set_p () (dest, x (GET_CODE () != REG (dest (regno < FIRST_PSEUDO_REGISTER HARD_REGNO_NREGS () 1 (reg_dead_endregno > regno && reg_dead_regno < endregno (GET_CODE () == CLOBBER (reg, insn (reg (reg_dead_regno < FIRST_PSEUDO_REGISTER HARD_REGNO_NREGS () 1 (reg_dead_regno < FIRST_PSEUDO_REGISTER (i reg_dead_regno i < reg_dead_endregno i ++ (TEST_HARD_REG_BIT () (insn && GET_CODE () != CODE_LABEL && GET_CODE () != BARRIER insn prev_nonnote_insn () (PATTERN (), reg_dead_at_p_1 (reg_dead_flag (find_regno_note () (insn == 0 (block 0 block < n_basic_blocks block ++ (insn == basic_block_head[block](block == n_basic_blocks (i reg_dead_regno i < reg_dead_endregno i ++ (basic_block_live_at_start[block][i / REGSET_ELT_BITS] & () (x (x (code (GET_CODE () == MEM (XEXP () (x (regno < FIRST_PSEUDO_REGISTER (regno == STACK_POINTER_REGNUM || regno == HARD_FRAME_POINTER_REGNUM || () || regno == FRAME_POINTER_REGNUM (regno, GET_MODE () (i -- > 0 (newpat_used_regs, regno + i (x (GET_CODE () == SUBREG || GET_CODE () == ZERO_EXTRACT || GET_CODE () == SIGN_EXTRACT || GET_CODE () == STRICT_LOW_PART (testreg, 0 (GET_CODE () == MEM (XEXP () (SET_SRC () (code (i GET_RTX_LENGTH () - 1 i >= 0 i -- (fmt[i] == (XEXP () (fmt[i] == (j 0 j < XVECLEN () j ++ (XVECEXP () (regno, insn (insn, REG_DEAD, regno (note (insn, note (x, from_cuid, to_insn, pnotes (x (code == REG (x (before_dead && INSN_UID () > max_uid_cuid (before_dead (after_dead && INSN_UID () > max_uid_cuid (after_dead (before_dead && after_dead && INSN_CUID () >= from_cuid && () (regno, where_dead (note != 0 && regno < FIRST_PSEUDO_REGISTER && () (XEXP () (deadregno + HARD_REGNO_NREGS () (regno, GET_MODE () (i deadregno i < deadend i ++ (i < regno || i >= ourend (where_dead (EXPR_LIST, REG_DEAD, gen_rtx (), REG_NOTES () (note == 0 && regno < FIRST_PSEUDO_REGISTER && HARD_REGNO_NREGS () > 1 (regno, GET_MODE () (i regno + 1 i < ourend i ++ (gen_rtx (), from_cuid, to_insn, & oldnotes (note != 0 && GET_MODE () == GET_MODE () (note, 1 (EXPR_LIST, REG_DEAD, x, *pnotes (GET_CODE () == SET (x (SET_SRC (), from_cuid, to_insn, pnotes (GET_CODE () == ZERO_EXTRACT || GET_CODE () == STRICT_LOW_PART || () (dest, from_cuid, to_insn, pnotes (GET_CODE () == SUBREG (dest (GET_CODE () == MEM (XEXP (), from_cuid, to_insn, pnotes (GET_CODE () == CLOBBER (code (code (i 0 i < len i ++ (fmt[i] == (j XVECLEN () - 1 j >= 0 j -- (XVECEXP (), from_cuid, to_insn, pnotes (fmt[i] == (XEXP (), from_cuid, to_insn, pnotes (x, body (GET_CODE () == SET (body (GET_CODE () == ZERO_EXTRACT (dest, 0 (GET_CODE () == STRICT_LOW_PART (XEXP () (GET_CODE () == SUBREG (target (GET_CODE () != REG (target (x (tregno >= FIRST_PSEUDO_REGISTER || regno >= FIRST_PSEUDO_REGISTER (tregno, GET_MODE () (regno, GET_MODE () (GET_CODE () == PARALLEL (i XVECLEN () - 1 i >= 0 i -- (reg_bitfield_target_p () (notes, from_insn, i3, i2, elim_i2, elim_i1 (note notes note note next_note (XEXP () && GET_CODE () == REG && REGNO () >= FIRST_PSEUDO_REGISTER (note, 0 (XEXP () (note, 1 (REG_NOTE_KIND () (reg_set_p () (from_insn != i3 ( ! () (reg_referenced_p () && ! () (note, REG_DEAD (from_insn == i3 && () (reg_mentioned_p () (i2 && reg_mentioned_p () (place (GET_CODE () != NOTE (XEXP (), REG_LIBCALL, NULL_RTX (from_insn (tem && place (tem, 0 (GET_CODE () != NOTE (XEXP (), REG_RETVAL, NULL_RTX (from_insn (tem && place (tem, 0 (from_insn && GET_CODE () == CALL_INSN && find_reg_fusage () (reg_referenced_p () (i2 != 0 && next_nonnote_insn () == i3 && reg_referenced_p () (XEXP () == elim_i2 || XEXP () == elim_i1 (place == i3 && i2 != 0 && GET_CODE () == REG && reg_n_refs[REGNO ()] == 2 && reg_referenced_p () (XEXP () (place == 0 (tem prev_nonnote_insn () place == 0 && tem && () tem prev_nonnote_insn () (reg_set_p () (tem (set != 0 && ! side_effects_p () && () (tem (REG_NOTES (), tem, tem, NULL_RTX, NULL_RTX, NULL_RTX (LOG_LINKS () (tem, NOTE (tem (tem (note, REG_UNUSED ( ! find_regno_note () (reg_referenced_p () || () (i2 && INSN_UID () <= max_uid_cuid && INSN_CUID () > INSN_CUID () && from_insn && INSN_CUID () > INSN_CUID () && reg_referenced_p () (place (place (links (REG_NOTE_KIND () == REG_DEAD && place == 0 && tem != 0 (gen_rtx (), tem (basic_block_end[this_basic_block - 1] == tem (place && REG_NOTE_KIND () == REG_DEAD (XEXP () (dead_or_set_p () || reg_bitfield_target_p () (reg_last_death[regno] != place (place && regno < FIRST_PSEUDO_REGISTER && HARD_REGNO_NREGS () > 1 (regno, GET_MODE () (i regno i < endregno i ++ ( ! refers_to_regno_p () && ! find_regno_fusage () (REG, reg_raw_mode[i], i (p place GET_CODE () == INSN && GET_CODE () == USE p PREV_INSN () (rtx_equal_p () (p (gen_rtx (), p (use_insn (EXPR_LIST, REG_DEAD, piece, REG_NOTES () (all_used (i regno i < endregno i ++ (dead_or_set_regno_p () ( ! all_used (i regno i < endregno i ++ (REG, reg_raw_mode[i], i (() && ! dead_or_set_p () && ! reg_bitfield_target_p () (place (EXPR_LIST, REG_DEAD, piece, REG_NOTES () ((place (note, 1 (place (place (() && GET_CODE () == REG (XEXP () (place2 (() && GET_CODE () == REG (XEXP () (place2 (GET_CODE (), REG_NOTE_KIND (), XEXP (), REG_NOTES () (links (link links link link next_link (link, 1 (GET_CODE () == NOTE || () == 0 (set (GET_CODE () == SUBREG || GET_CODE () == ZERO_EXTRACT || GET_CODE () == SIGN_EXTRACT || GET_CODE () == STRICT_LOW_PART (reg, 0 (insn NEXT_INSN () () insn NEXT_INSN () (GET_RTX_CLASS () == && reg_overlap_mentioned_p () (reg_referenced_p () (GET_CODE () == CALL_INSN && find_reg_fusage () (place (link2 LOG_LINKS () link2 link2 XEXP () (XEXP () == XEXP () (link2 == 0 (link, 1 (place (place (added_links_insn == 0 || INSN_CUID () > INSN_CUID () (file (file,, combine_attempts, combine_merges, combine_extras, combine_successes (file (file,, total_attempts, total_merges, total_extras, total_successes, <./cc/combine.c 3968>
14340 				data_section: 9909
14341 				ASM_OUTPUT_ALIGN: <>
14342 				ASM_OUTPUT_INTERNAL_LABEL: <>
14343 				assemble_integer: 12583
14344 				ASM_GENERATE_INTERNAL_LABEL: <>
14345 				gen_rtx: <>
14346 				GEN_INT: <>
14347 				getpwd: 14051
14348 				strlen: <>
14349 				alloca: <>
14350 				strcpy: <>
14351 				strcat: <>
14352 				strip_off_ending: void (), <./cc/toplev.c 2132>
14353 				assemble_string: void (), <./cc/varasm.c 934>
14354 				assemble_zeros: void (), <./cc/varasm.c 871>
14355 				ASM_OUTPUT_SHARED_LOCAL: <>
14356 				ASM_OUTPUT_ALIGNED_LOCAL: <>
14357 				ASM_OUTPUT_LOCAL: <>
14358 				readonly_data_section: 9913
14359 			ASM_FILE_END: <>
14360 			lang_finish: void (), <./cc/cp/lex.c 494>
14361 				GNU_xref_end: void (), <./cc/cp/xref.c 175>
14362 					fatal: 49
14363 					find_file: 1905
14364 					GNU_xref_end_scope: 2004
14365 					fclose: <>
14366 					unlink: 57
14367 			bc_write_file: <>
14368 			fclose: <>
14369 			unlink: 57
14370 			dump_combine_total_stats: <>
14371 			ferror: <>
14372 			fatal_io_error: void (), <./cc/toplev.c 1088>
14373 				report_event: 7158
14374 				fprintf: <>
14375 				exit: 5
14376 			print_time: void (), <./cc/toplev.c 946>
14377 				fprintf: <>
14378 		sbrk: <>
14379 		system: <>
14380 		getpwd: 14051
14381 		my_strerror: 7355
14382 		string_list_cons: struct string_list * (), <./cc/protoize.c 1092>
14383 		getopt_long: int (), <./bison/getopt1.c 60>
14384 		abspath: char * (), <./cc/dbxout.c 302>
14385 			alloca: <>
14386 			strlen: <>
14387 			fprintf: <>
14388 			exit: 5
14389 			oballoc: 530
14390 			strcpy: <>
14391 			xmalloc: 1643
14392 			bzero: <>
14393 			ASM_GENERATE_INTERNAL_LABEL: <>
14394 			getpwd: 14051
14395 			sprintf: <>
14396 			DBX_OUTPUT_MAIN_SOURCE_DIRECTORY: <>
14397 			output_quoted_string: 12633
14398 			DBX_OUTPUT_MAIN_SOURCE_FILENAME: <>
14399 			text_section: 9915
14400 			ASM_OUTPUT_INTERNAL_LABEL: <>
14401 			ASM_IDENTIFY_GCC_AFTER_SOURCE: <>
14402 			DBX_OUTPUT_STANDARD_TYPES: <>
14403 			dbxout_symbol: <>
14404 			TYPE_NAME: 271
14405 			dbxout_typedefs: <>
14406 			TREE_CHAIN: if (), <./cc/cp/search.c 1454>
14407 			TREE_CODE: 162
14408 			TREE_TYPE: 160
14409 			TREE_ASM_WRITTEN: else if (), <./cc/dwarfout.c 3566>
14410 			strcmp: 157
14411 			DBX_OUTPUT_SOURCE_FILENAME: <>
14412 			DECL_SECTION_NAME: <>
14413 			ASM_OUTPUT_SOURCE_LINE: <>
14414 			DBX_OUTPUT_MAIN_SOURCE_FILE_END: <>
14415 			dbxout_finish_symbol: <>
14416 			TYPE_FIELDS: <>
14417 			DECL_FIELD_BITPOS: <>
14418 			DECL_SIZE: <>
14419 			DECL_VIRTUAL_P: if (), <./cc/dwarfout.c 2795>
14420 			DECL_ASSEMBLER_NAME: <>
14421 			CHARS: <>
14422 			IDENTIFIER_LENGTH: <>
14423 			fputs: <>
14424 			IDENTIFIER_POINTER: <>
14425 			dbxout_type: <>
14426 			DECL_FCONTEXT: <>
14427 			TREE_INT_CST_LOW: <>
14428 			DECL_NAME: 250
14429 			TREE_PRIVATE: <>
14430 			TREE_PROTECTED: else if (), <./cc/cp/search.c 906>
14431 			putc: <>
14432 			DECL_BIT_FIELD_TYPE: if (), <./cc/dwarfout.c 3386>
14433 			TREE_STATIC: if (), <./cc/stor-layout.c 332>
14434 			TREE_VALUE: <>
14435 			TYPE_ARG_TYPES: 791
14436 			TYPE_READONLY: 217
14437 			TYPE_VOLATILE: <>
14438 			DECL_VINDEX: <>
14439 			DECL_CONTEXT: 267
14440 			TYPE_METHODS: <>
14441 			warning: 281
14442 			TREE_VEC_ELT: <>
14443 			DECL_IGNORED_P: if (), <./cc/dwarfout.c 4741>
14444 			strncmp: 233
14445 			dbxout_type_method_1: <>
14446 			TYPE_SYMTAB_ADDRESS: <>
14447 			TYPE_MIN_VALUE: <>
14448 			TYPE_MAX_VALUE: <>
14449 			TYPE_MAIN_VARIANT: 324
14450 			TYPE_DECL_SUPPRESS_DEBUG: <>
14451 			xrealloc: 420
14452 			DBX_TYPE_DEFINED: <>
14453 			TYPE_SIZE: if (), <./cc/dwarfout.c 3636>
14454 			TREE_UNSIGNED: 678
14455 			TYPE_PRECISION: 211
14456 			print_int_cst_octal: <>
14457 			dbxout_range_type: <>
14458 			int_size_in_bytes: <>
14459 			TYPE_STRING_FLAG: <>
14460 			TYPE_DOMAIN: <>
14461 			TYPE_BINFO: if (), <./cc/cp/search.c 454>
14462 			TYPE_BINFO_BASETYPES: <>
14463 			TREE_VEC_LENGTH: <>
14464 			abort: <>
14465 			dbxout_type_name: <>
14466 			BINFO_BASETYPES: <>
14467 			TREE_VIA_VIRTUAL: 1041
14468 			TREE_VIA_PUBLIC: <>
14469 			BINFO_OFFSET: <>
14470 			BINFO_TYPE: <>
14471 			dbxout_type_fields: <>
14472 			dbxout_type_methods: <>
14473 			TYPE_VFIELD: <>
14474 			DBX_OUTPUT_ENUM: <>
14475 			TYPE_VALUES: <>
14476 			TREE_PURPOSE: 215
14477 			TREE_INT_CST_HIGH: <>
14478 			TYPE_METHOD_BASETYPE: <>
14479 			dbxout_args: <>
14480 			TYPE_OFFSET_BASETYPE: <>
14481 			print_octal: <>
14482 			dbxout_prepare_symbol: <>
14483 			DECL_RTL: <>
14484 			DECL_EXTERNAL: else if (), <./cc/dwarfout.c 3220>
14485 			decl_function_context: <>
14486 			GET_CODE: 81
14487 			XEXP: 105
14488 			TREE_PUBLIC: 194
14489 			lang_identify: 10659
14490 			DECL_SOURCE_LINE: 182
14491 			TREE_READONLY: if (), <./cc/cp/decl2.c 1229>
14492 			DECL_INITIAL: 168
14493 			DECL_FIELD_CONTEXT: <>
14494 			DBX_OUTPUT_CONSTANT_SYMBOL: <>
14495 			eliminate_regs: 111
14496 			leaf_renumber_regs_insn: <>
14497 			dbxout_symbol_location: <>
14498 			REGNO: 93
14499 			SUBREG_WORD: <>
14500 			SUBREG_REG: <>
14501 			alter_subreg: <>
14502 			DECL_IN_TEXT_SECTION: <>
14503 			data_section: 9909
14504 			DBX_REGISTER_NUMBER: <>
14505 			DEBUGGER_AUTO_OFFSET: <>
14506 			make_node: 307
14507 			DBX_STATIC_BLOCK_START: <>
14508 			dbxout_symbol_name: <>
14509 			DBX_STATIC_BLOCK_END: <>
14510 			DECL_SOURCE_FILE: <>
14511 			DBX_FINISH_SYMBOL: <>
14512 			output_addr_const: 119
14513 			DECL_INCOMING_RTL: 10025
14514 			PARM_PASSED_IN_MEMORY: if (), <./cc/sdbout.c 1243>
14515 				gen_fake_label: 10035
14516 				PUT_SDB_DEF: <>
14517 				PUT_SDB_INT_VAL: <>
14518 				DBX_REGISTER_NUMBER: <>
14519 				REGNO: 93
14520 				DECL_RTL: <>
14521 				PUT_SDB_SCL: <>
14522 				PUT_SDB_TYPE: <>
14523 				plain_type: 10045
14524 				TREE_TYPE: 160
14525 			INTVAL: 129
14526 			DECL_ARG_TYPE: <>
14527 			DEBUGGER_ARG_OFFSET: <>
14528 			CONSTANT_P: 118
14529 			rtx_equal_p: 143
14530 			TREE_USED: <>
14531 			BLOCK_VARS: <>
14532 			BLOCK_HANDLER_BLOCK: <>
14533 			DBX_OUTPUT_CATCH: <>
14534 			assemble_name: <>
14535 			DBX_OUTPUT_LBRAC: <>
14536 			fputc: <>
14537 			XSTR: <>
14538 			dbxout_block: <>
14539 			BLOCK_SUBBLOCKS: <>
14540 			DBX_OUTPUT_RBRAC: <>
14541 			BLOCK_CHAIN: <>
14542 			DECL_ARGUMENTS: <>
14543 			DECL_RESULT: <>
14544 			dbxout_really_begin_function: <>
14545 			DBX_OUTPUT_FUNCTION_END: <>
14546 		usage: void (), <./cc/protoize.c 864>
14547 			fprintf: <>
14548 			exit: 5
14549 		munge_compile_params: <>
14550 		xmalloc: 1643
14551 		shortpath: <>
14552 		do_processing: void (), <./cc/protoize.c 4471>
14553 		gen_insn: void (), <./cc/genflags.c 119>
14554 			XSTR: <>
14555 			strlen: <>
14556 			printf: <>
14557 			strcmp: 157
14558 			obstack_grow: void () (), <./cc/obstack.c 420>
14559 		obstack_grow: void () (), <./cc/obstack.c 420>
14560 		obstack_finish: <>
14561 		gen_proto: void (), <./cc/genflags.c 91>
14562 			num_operands: int (), <./cc/genflags.c 54>
14563 				GET_CODE: 81
14564 				GET_RTX_FORMAT: <>
14565 				GET_RTX_LENGTH: <>
14566 				num_operands: 14562
14567 				XEXP: 105
14568 				XVEC: <>
14569 				XVECLEN: <>
14570 				XVECEXP: <>
14571 			printf: <>
14572 			XSTR: <>
14573 		gen_nonproto: void (), <./cc/genflags.c 112>
14574 			printf: <>
14575 			XSTR: <>
14576 		cleanup: void (), <./cc/config/winnt/ld.c 365>
14577 			remove: <>
14578 		process_args: void (), <./cc/config/winnt/ld.c 272>
14579 			strcmp: 157
14580 			verbose: 8248
14581 		locate_file: char * (), <./cc/config/winnt/ld.c 159>
14582 			strlen: <>
14583 			isalpha: <>
14584 			strncpy: <>
14585 			is_regular_file: int (), <./cc/config/winnt/ld.c 250>
14586 				stat: <>
14587 				S_ISREG: <>
14588 			strdup: <>
14589 			strcpy: <>
14590 		addarg: void (), <./cc/config/winnt/ld.c 79>
14591 			calloc: <>
14592 			free: <>
14593 			isspace: <>
14594 			malloc: <>
14595 			strlen: <>
14596 			strcpy: <>
14597 			strcat: <>
14598 		realloc: <>
14599 		is_directory: int (), <./cc/config/winnt/ld.c 261>
14600 			stat: <>
14601 			S_ISDIR: if (), <./cc/config/winnt/dirent.c 126>
14602 		set_gvalue: void (), <./cc/config/winnt/ld.c 492>
14603 			strtoul: <>
14604 			fprintf: <>
14605 			cleanup: 14576
14606 			exit: 5
14607 		strstr: <>
14608 		expand_lib: char * (), <./cc/config/winnt/ld.c 207>
14609 			malloc: <>
14610 			strlen: <>
14611 			strcpy: <>
14612 			strcat: <>
14613 			locate_file: 14581
14614 			fprintf: <>
14615 			free: <>
14616 			cleanup: , <./cc/cp/tree.c 1996>
14617 			exit: 5
14618 		strrchr: <>
14619 		search_for_framework: void (), <./cc/config/winnt/ld.c 297>
14620 			malloc: <>
14621 			strlen: <>
14622 			sprintf: <>
14623 			open: 8200
14624 			close: 7170
14625 			free: <>
14626 		add_to_tmp_at_file: char * (), <./cc/config/winnt/ld.c 385>
14627 			strrchr: <>
14628 			strlen: <>
14629 			fprintf: <>
14630 			cleanup: 14576
14631 			exit: 5
14632 			strcpy: <>
14633 			fopen: <>
14634 			malloc: <>
14635 			tmpnam: <>
14636 			realloc: <>
14637 			fgets: <>
14638 			fputs: <>
14639 			fclose: <>
14640 		libargs: void (), <./cc/config/winnt/ld.c 131>
14641 			calloc: <>
14642 			strncmp: 233
14643 			strlen: <>
14644 		putchar: <>
14645 		slash2slash: char * (), <./cc/config/winnt/fixinc-nt.c 20>
14646 		strdup: <>
14647 		dodir: int (), <./cc/config/winnt/fixinc-nt.c 129>
14648 			opendir: <>
14649 			mkdirpath: int (), <./cc/config/winnt/fixinc-nt.c 34>
14650 				strdup: <>
14651 				strchr: <>
14652 			concat3: char * (), <./cc/config/winnt/fixinc-nt.c 247>
14653 				concat: char * (), <./cc/config/winnt/fixinc-nt.c 230>
14654 					strlen: <>
14655 					malloc: <>
14656 					strcpy: <>
14657 			readdir: <>
14658 			slash2slash: char * (), <./cc/config/winnt/fixinc-nt.c 20>
14659 			dodir: 14647
14660 			doheader: int (), <./cc/config/winnt/fixinc-nt.c 81>
14661 				concat3: 14652
14662 				system: <>
14663 				concat4: char * (), <./cc/config/winnt/fixinc-nt.c 256>
14664 					concat: 14653
14665 				printf: <>
14666 				malloc: <>
14667 				open: 8200
14668 				read: int (), <./cc/config/winnt/oldnames.c 32>
14669 				close: 7170
14670 				free: <>
14671 				unlink: 57
14672 			closedir: <>
14673 		concat3: 14652
14674 		do_clean: int (), <./cc/config/winnt/mklibgcc.c 10>
14675 			remove: <>
14676 			opendir: <>
14677 			readdir: <>
14678 			sprintf: <>
14679 			unlink: 57
14680 			closedir: <>
14681 		usage: void (), <./cc/cplus-dem.c 2830>
14682 			fprintf: <>
14683 			exit: 5
14684 		demangle_it: void (), <./cc/cplus-dem.c 2807>
14685 		cplus_demangle: <>
14686 		getargs: void (), <./bison/getargs.c 77>
14687 			cli_present: int (), <./bison/vmsgetargs.c 151>
14688 				strlen: <>
14689 				present: if (, <./cc/gcc.c 4832>
14690 			printf: <>
14691 			cli_get_value: int (), <./bison/vmsgetargs.c 165>
14692 				strlen: <>
14693 				get_value: <>
14694 			isupper: <>
14695 			tolower: <>
14696 			getopt_long: int (), <./bison/getopt1.c 60>
14697 			usage: void (), <./bison/getargs.c 63>
14698 				fprintf: <>
14699 			exit: 5
14700 			fprintf: <>
14701 		openfiles: void (), <./bison/files.c 109>
14702 			getenv: <>
14703 			strlwr: <>
14704 			xmalloc: 1643
14705 			strlen: <>
14706 			sprintf: <>
14707 			strcmp: 157
14708 			strncmp: 233
14709 			strcpy: <>
14710 			strcat: <>
14711 			stringappend: char * (), <./bison/files.c 80>
14712 				NEW2: <>
14713 			tryopen: 63
14714 			mktemp: 8228
14715 			unlink: 57
14716 		reader: void (), <./bison/reader.c 151>
14717 			NEW2: <>
14718 			init_lex: 8361
14719 			tabinit: void (), <./bison/symtab.c 70>
14720 				NEW2: <>
14721 			getsym: bucket * (), <./bison/symtab.c 82>
14722 				hash: int (), <./bison/symtab.c 35>
14723 				strcmp: 157
14724 				NEW: <>
14725 				copys: char * (), <./bison/symtab.c 52>
14726 					xmalloc: 1643
14727 					strcpy: <>
14728 			fprintf: <>
14729 			read_declarations: void (), <./bison/reader.c 239>
14730 				skip_white_space: 9618
14731 				parse_percent_token: int (), <./bison/lex.c 551>
14732 					getc: <>
14733 					isalpha: <>
14734 					grow_token_buffer: char * (), <./bison/lex.c 84>
14735 						xrealloc: 420
14736 					ungetc: <>
14737 					strcmp: 157
14738 				copy_definition: void (), <./bison/reader.c 336>
14739 					fprintf: <>
14740 					getc: <>
14741 					putc: <>
14742 					fatal: 49
14743 					warn: 1547
14744 					ungetc: <>
14745 				parse_token_decl: void (), <./bison/reader.c 475>
14746 					ungetc: <>
14747 					skip_white_space: 9618
14748 					lex: int (), <./bison/lex.c 305>
14749 						skip_white_space: 9618
14750 						strcpy: <>
14751 						isalnum: <>
14752 						grow_token_buffer: 14734
14753 						getc: <>
14754 						ungetc: <>
14755 						getsym: 14721
14756 						isdigit: if (), <./cc/cplus-dem.c 1861>
14757 						literalchar: int (), <./bison/lex.c 181>
14758 							safegetc: int (), <./bison/lex.c 165>
14759 								getc: <>
14760 								fatal: 49
14761 							warn: 1547
14762 							ungetc: <>
14763 							warni: void (), <./bison/main.c 173>
14764 								sprintf: <>
14765 								warn: 1547
14766 							printable_version: char * (), <./bison/main.c 98>
14767 								sprintf: <>
14768 						warn: 1547
14769 						fatal: 49
14770 						parse_percent_token: 14731
14771 					strlen: <>
14772 					NEW2: <>
14773 					strcpy: <>
14774 					warns: void (), <./bison/main.c 186>
14775 						sprintf: <>
14776 						warn: 1547
14777 					strcmp: 157
14778 					warnss: void (), <./bison/main.c 198>
14779 						sprintf: <>
14780 						warn: 1547
14781 					skip_to_char: void (), <./bison/reader.c 133>
14782 						warn: 1547
14783 						warni: 14763
14784 						skip_white_space: 9618
14785 						ungetc: <>
14786 				TYPE: <>
14787 				parse_type_decl: void (), <./bison/reader.c 649>
14788 					lex: 14748
14789 					warn: 1547
14790 					skip_to_char: 14781
14791 					strlen: <>
14792 					NEW2: <>
14793 					strcpy: <>
14794 					ungetc: <>
14795 					skip_white_space: 9618
14796 					strcmp: 157
14797 					warns: 14774
14798 				parse_start_decl: void (), <./bison/reader.c 631>
14799 					warn: 1547
14800 					lex: 14748
14801 				parse_union_decl: void (), <./bison/reader.c 783>
14802 					warn: 1547
14803 					fprintf: <>
14804 					getc: <>
14805 					putc: <>
14806 					ungetc: <>
14807 					fatal: 49
14808 					skip_white_space: 9618
14809 				parse_expect_decl: void (), <./bison/reader.c 897>
14810 					getc: <>
14811 					ungetc: <>
14812 					warn: 1547
14813 					atoi: <>
14814 				parse_thong_decl: void (), <./bison/reader.c 569>
14815 					lex: 14748
14816 					strlen: <>
14817 					NEW2: <>
14818 					strcpy: <>
14819 					warns: 14774
14820 					skip_to_char: 14781
14821 				parse_assoc_decl: void (), <./bison/reader.c 702>
14822 					ungetc: <>
14823 					skip_white_space: 9618
14824 					lex: 14748
14825 					strlen: <>
14826 					NEW2: <>
14827 					strcpy: <>
14828 					warns: 14774
14829 					strcmp: 157
14830 					skip_to_char: 14781
14831 				open_extra_files: void (), <./bison/files.c 307>
14832 					fclose: <>
14833 					getenv: <>
14834 					xmalloc: 1643
14835 					strlen: <>
14836 					strcpy: <>
14837 					tryopen: 63
14838 					rewind: <>
14839 					getc: <>
14840 					putc: <>
14841 				warns: 14774
14842 				skip_to_char: 14781
14843 				fatal: 49
14844 				sprintf: <>
14845 				printable_version: 14766
14846 				warn: 1547
14847 			output_headers: void (), <./bison/output.c 200>
14848 				fprintf: <>
14849 			readgram: void (), <./bison/reader.c 1439>
14850 				lex: 14748
14851 				warn: 1547
14852 				unlex: void (), <./bison/lex.c 296>
14853 				record_rule_line: void (), <./bison/reader.c 1731>
14854 					xrealloc: 420
14855 				NEW: <>
14856 				warns: 14774
14857 				gensym: bucket * (), <./bison/reader.c 1418>
14858 					sprintf: <>
14859 					getsym: 14721
14860 				copy_action: void (), <./bison/reader.c 1202>
14861 					fprintf: <>
14862 					putc: <>
14863 					getc: <>
14864 					warn: 1547
14865 					ungetc: <>
14866 					fatal: 49
14867 					get_type_name: char * (), <./bison/reader.c 928>
14868 						warn: 1547
14869 					warns: 14774
14870 					isdigit: if (), <./cc/cplus-dem.c 1861>
14871 					read_signed_integer: int (), <./bison/reader.c 2051>
14872 						getc: <>
14873 						isdigit: if (), <./cc/cplus-dem.c 1861>
14874 						ungetc: <>
14875 					warnss: 14778
14876 					int_to_string: 11096
14877 					warni: 14763
14878 					printable_version: 14766
14879 				copy_guard: void (), <./bison/reader.c 969>
14880 					fprintf: <>
14881 					putc: <>
14882 					getc: <>
14883 					warn: 1547
14884 					fatal: 49
14885 					ungetc: <>
14886 					warns: 14774
14887 					isdigit: if (), <./cc/cplus-dem.c 1861>
14888 					read_signed_integer: 14871
14889 					get_type_name: 14867
14890 					warnss: 14778
14891 					int_to_string: 11096
14892 					warni: 14763
14893 					printable_version: 14766
14894 					skip_white_space: 9618
14895 					copy_action: 14860
14896 				strcmp: 157
14897 				warnss: 14778
14898 				parse_token_decl: 14745
14899 				TYPE: <>
14900 				get_type: int (), <./bison/reader.c 1748>
14901 					lex: 14748
14902 					warn: 1547
14903 					strlen: <>
14904 					NEW2: <>
14905 					strcpy: <>
14906 					strcmp: 157
14907 					warns: 14774
14908 				parse_union_decl: 14801
14909 				parse_expect_decl: 14809
14910 				parse_start_decl: 14798
14911 				fatals: 11093
14912 				int_to_string: 11096
14913 				fatal: 49
14914 				fprintf: <>
14915 			reader_output_yylsp: 11038
14916 			output_trailers: void (), <./bison/output.c 229>
14917 				fprintf: <>
14918 			packsymbols: void (), <./bison/reader.c 1798>
14919 				NEW2: <>
14920 				warnss: 14778
14921 				warnsss: void (), <./bison/main.c 210>
14922 					sprintf: <>
14923 					warn: 1547
14924 				int_to_string: 11096
14925 				output_token_defines: void (), <./bison/reader.c 1945>
14926 					fprintf: <>
14927 					putc: <>
14928 				fatals: 11093
14929 				fprintf: <>
14930 				fclose: <>
14931 			packgram: void (), <./bison/reader.c 1990>
14932 				NEW2: <>
14933 			free_symtab: void (), <./bison/symtab.c 130>
14934 				FREE: <>
14935 		done: 61
14936 		reduce_grammar: void (), <./bison/reduce.c 116>
14937 		set_derives: void (), <./bison/derives.c 36>
14938 			NEW2: <>
14939 			print_derives:  (), <./bison/derives.c 95>
14940 				printf: <>
14941 				putchar: <>
14942 			FREE: <>
14943 		set_nullable: void (), <./bison/nullable.c 35>
14944 			fprintf: <>
14945 			NEW2: <>
14946 			ISTOKEN: <>
14947 			FREE: <>
14948 		generate_states: void (), <./bison/LR0.c 153>
14949 			allocate_storage: void (), <./bison/LR0.c 126>
14950 				allocate_itemsets: void (), <./bison/LR0.c 81>
14951 					NEW2: <>
14952 				NEW2: <>
14953 			initialize_closure: void (), <./bison/closure.c 82>
14954 				NEW2: <>
14955 				WORDSIZE: <>
14956 				set_fderives: void (), <./bison/closure.c 101>
14957 					NEW2: <>
14958 					set_firsts: void (), <./bison/closure.c 161>
14959 						WORDSIZE: <>
14960 						NEW2: <>
14961 						ISVAR: if (), <./bison/closure.c 235>
14962 						SETBIT: <>
14963 						RTC: <>
14964 						print_firsts:  (), <./bison/closure.c 308>
14965 							printf: <>
14966 							BITISSET: <>
14967 					SETBIT: <>
14968 					print_fderives:  (), <./bison/closure.c 330>
14969 						printf: <>
14970 						BITISSET: <>
14971 						fflush: <>
14972 					FREE: <>
14973 			initialize_states: void (), <./bison/LR0.c 399>
14974 				xmalloc: 1643
14975 			closure: <>
14976 			save_reductions: void (), <./bison/LR0.c 450>
14977 				xmalloc: 1643
14978 			new_itemsets: void (), <./bison/LR0.c 199>
14979 				fprintf: <>
14980 			append_states: void (), <./bison/LR0.c 247>
14981 				fprintf: <>
14982 				get_state: int (), <./bison/LR0.c 286>
14983 					fprintf: <>
14984 					new_state: core * (), <./bison/LR0.c 360>
14985 						fprintf: <>
14986 						toomany: void (), <./bison/main.c 222>
14987 							sprintf: <>
14988 							fatal: 49
14989 						xmalloc: 1643
14990 			save_shifts: void (), <./bison/LR0.c 413>
14991 				xmalloc: 1643
14992 			finalize_closure: void (), <./bison/closure.c 285>
14993 			free_storage: void (), <./bison/LR0.c 137>
14994 				FREE: <>
14995 			augment_automaton: void (), <./bison/LR0.c 511>
14996 				xmalloc: 1643
14997 				FREE: <>
14998 				NEW: <>
14999 				insert_start_shift: void (), <./bison/LR0.c 684>
15000 					xmalloc: 1643
15001 					NEW: <>
15002 		lalr: void (), <./bison/lalr.c 108>
15003 			WORDSIZE: <>
15004 			set_state_table: void (), <./bison/lalr.c 127>
15005 				NEW2: <>
15006 			set_accessing_symbol: void (), <./bison/lalr.c 139>
15007 				NEW2: <>
15008 			set_shift_table: void (), <./bison/lalr.c 151>
15009 				NEW2: <>
15010 			set_reduction_table: void (), <./bison/lalr.c 163>
15011 				NEW2: <>
15012 			set_maxrhs: void (), <./bison/lalr.c 175>
15013 			initialize_LA: void (), <./bison/lalr.c 201>
15014 				NEW2: <>
15015 				ISVAR: if (), <./bison/closure.c 235>
15016 			set_goto_map: void (), <./bison/lalr.c 268>
15017 				NEW2: <>
15018 				ISTOKEN: <>
15019 				toomany: 14986
15020 				FREE: <>
15021 			initialize_F: void (), <./bison/lalr.c 369>
15022 				NEW2: <>
15023 				ISVAR: if (), <./bison/closure.c 235>
15024 				SETBIT: <>
15025 				map_goto: int (), <./bison/lalr.c 338>
15026 					berror: 11090
15027 				digraph: <>
15028 				FREE: <>
15029 			build_relations: void (), <./bison/lalr.c 445>
15030 				done: 61
15031 				NEW2: <>
15032 				add_lookback_edge: void (), <./bison/lalr.c 540>
15033 					berror: 11090
15034 					NEW: <>
15035 				ISVAR: if (), <./bison/closure.c 235>
15036 				map_goto: 15025
15037 				transpose: <>
15038 				FREE: <>
15039 			compute_FOLLOWS: void (), <./bison/lalr.c 630>
15040 			compute_lookaheads: void (), <./bison/lalr.c 646>
15041 				FREE: <>
15042 		initialize_conflicts: void (), <./bison/conflicts.c 62>
15043 			NEW2: <>
15044 			set_conflicts: void (), <./bison/conflicts.c 81>
15045 				ISVAR: if (), <./bison/closure.c 235>
15046 				SETBIT: <>
15047 				resolve_sr_conflict: void (), <./bison/conflicts.c 168>
15048 					xmalloc: 1643
15049 					log_resolution: void (), <./bison/conflicts.c 294>
15050 						fprintf: <>
15051 					flush_shift: void (), <./bison/conflicts.c 271>
15052 					bcopy: <>
15053 					free: <>
15054 		terse: void (), <./bison/print.c 53>
15055 			conflict_log: void (), <./bison/conflicts.c 305>
15056 				count_sr_conflicts: 8250
15057 				count_rr_conflicts: 8253
15058 				total_conflicts: 8256
15059 		output: 11034
